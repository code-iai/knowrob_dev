var THREE=THREE||{REVISION:"56"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(f,e){if(Object.keys){var d=Object.keys(e);for(var c=0,b=d.length;c<b;c++){var g=d[c];Object.defineProperty(f,g,Object.getOwnPropertyDescriptor(e,g))}}else{var a={}.hasOwnProperty;for(var g in e){if(a.call(e,g)){f[g]=e[g]}}}return f};(function(){var b=0;var c=["ms","moz","webkit","o"];for(var a=0;a<c.length&&!window.requestAnimationFrame;++a){window.requestAnimationFrame=window[c[a]+"RequestAnimationFrame"];window.cancelAnimationFrame=window[c[a]+"CancelAnimationFrame"]||window[c[a]+"CancelRequestAnimationFrame"]}if(window.requestAnimationFrame===undefined){window.requestAnimationFrame=function(g){var d=Date.now(),e=Math.max(0,16-(d-b));var f=window.setTimeout(function(){g(d+e)},e);b=d+e;return f}}window.cancelAnimationFrame=window.cancelAnimationFrame||function(d){window.clearTimeout(d)}}());THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){if(a!==undefined){this.set(a)}return this};THREE.extend(THREE.Color.prototype,{r:1,g:1,b:1,set:function(a){switch(typeof a){case"number":this.setHex(a);break;case"string":this.setStyle(a);break}},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(d,c,a){this.r=d;this.g=c;this.b=a;return this},setHSV:function(c,b,a){console.log("DEPRECATED: Color's .setHSV() will be removed. Use .setHSL( h, s, l ) instead.");return this.setHSL(c,b*a/((c=(2-b)*a)<1?c:2-c),c/2)},setHSL:function(d,c,b){if(c===0){this.r=this.g=this.b=b}else{var a=function(i,h,g){if(g<0){g+=1}if(g>1){g-=1}if(g<1/6){return i+(h-i)*6*g}if(g<1/2){return h}if(g<2/3){return i+(h-i)*6*(2/3-g)}return i};var f=b<=0.5?b*(1+c):b+c-(b*c);var e=(2*b)-f;this.r=a(e,f,d+1/3);this.g=a(e,f,d);this.b=a(e,f,d-1/3)}return this},setStyle:function(b){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(b)){var a=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(b);this.r=Math.min(255,parseInt(a[1],10))/255;this.g=Math.min(255,parseInt(a[2],10))/255;this.b=Math.min(255,parseInt(a[3],10))/255;return this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(b)){var a=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(b);this.r=Math.min(100,parseInt(a[1],10))/100;this.g=Math.min(100,parseInt(a[2],10))/100;this.b=Math.min(100,parseInt(a[3],10))/100;return this}if(/^\#([0-9a-f]{6})$/i.test(b)){var a=/^\#([0-9a-f]{6})$/i.exec(b);this.setHex(parseInt(a[1],16));return this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)){var a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b);this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16));return this}if(/^(\w+)$/i.test(b)){this.setHex(THREE.ColorKeywords[b]);return this}},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var d=this.r,c=this.g,a=this.b;this.r=d*d;this.g=c*c;this.b=a*a;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return(this.r*255)<<16^(this.g*255)<<8^(this.b*255)<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var a={h:0,s:0,l:0};return function(){var c=this.r,f=this.g,i=this.b;var j=Math.max(c,f,i);var d=Math.min(c,f,i);var h,e;var l=(d+j)/2;if(d===j){h=0;e=0}else{var k=j-d;e=l<=0.5?k/(j+d):k/(2-j-d);switch(j){case c:h=(f-i)/k+(f<i?6:0);break;case f:h=(i-c)/k+2;break;case i:h=(c-f)/k+4;break}h/=6}a.h=h;a.s=e;a.l=l;return a}}(),getStyle:function(){return"rgb("+((this.r*255)|0)+","+((this.g*255)|0)+","+((this.b*255)|0)+")"},offsetHSL:function(d,c,a){var b=this.getHSL();b.h+=d;b.s+=c;b.l+=a;this.setHSL(b.h,b.s,b.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(b,a){this.r=b.r+a.r;this.g=b.g+a.g;this.b=b.b+a.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},clone:function(){return new THREE.Color().setRGB(this.r,this.g,this.b)}});THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,d,c,b){this.x=a||0;this.y=d||0;this.z=c||0;this.w=(b!==undefined)?b:1};THREE.extend(THREE.Quaternion.prototype,{set:function(a,d,c,b){this.x=a;this.y=d;this.z=c;this.w=b;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(c,a){var h=Math.cos(c.x/2);var g=Math.cos(c.y/2);var e=Math.cos(c.z/2);var f=Math.sin(c.x/2);var d=Math.sin(c.y/2);var b=Math.sin(c.z/2);if(a===undefined||a==="XYZ"){this.x=f*g*e+h*d*b;this.y=h*d*e-f*g*b;this.z=h*g*b+f*d*e;this.w=h*g*e-f*d*b}else{if(a==="YXZ"){this.x=f*g*e+h*d*b;this.y=h*d*e-f*g*b;this.z=h*g*b-f*d*e;this.w=h*g*e+f*d*b}else{if(a==="ZXY"){this.x=f*g*e-h*d*b;this.y=h*d*e+f*g*b;this.z=h*g*b+f*d*e;this.w=h*g*e-f*d*b}else{if(a==="ZYX"){this.x=f*g*e-h*d*b;this.y=h*d*e+f*g*b;this.z=h*g*b-f*d*e;this.w=h*g*e+f*d*b}else{if(a==="YZX"){this.x=f*g*e+h*d*b;this.y=h*d*e+f*g*b;this.z=h*g*b-f*d*e;this.w=h*g*e-f*d*b}else{if(a==="XZY"){this.x=f*g*e-h*d*b;this.y=h*d*e-f*g*b;this.z=h*g*b+f*d*e;this.w=h*g*e+f*d*b}}}}}}return this},setFromAxisAngle:function(c,d){var a=d/2,b=Math.sin(a);this.x=c.x*b;this.y=c.y*b;this.z=c.z*b;this.w=Math.cos(a);return this},setFromRotationMatrix:function(e){var d=e.elements,i=d[0],h=d[4],g=d[8],c=d[1],b=d[5],a=d[9],l=d[2],k=d[6],j=d[10],f=i+b+j,n;if(f>0){n=0.5/Math.sqrt(f+1);this.w=0.25/n;this.x=(k-a)*n;this.y=(g-l)*n;this.z=(c-h)*n}else{if(i>b&&i>j){n=2*Math.sqrt(1+i-b-j);this.w=(k-a)/n;this.x=0.25*n;this.y=(h+c)/n;this.z=(g+l)/n}else{if(b>j){n=2*Math.sqrt(1+b-i-j);this.w=(g-l)/n;this.x=(h+c)/n;this.y=0.25*n;this.z=(a+k)/n}else{n=2*Math.sqrt(1+j-i-b);this.w=(c-h)/n;this.x=(g+l)/n;this.y=(a+k)/n;this.z=0.25*n}}}return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=this.length();if(a===0){this.x=0;this.y=0;this.z=0;this.w=1}else{a=1/a;this.x=this.x*a;this.y=this.y*a;this.z=this.z*a;this.w=this.w*a}return this},multiply:function(a,b){if(b!==undefined){console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(a,b)}return this.multiplyQuaternions(this,a)},multiplyQuaternions:function(l,k){var i=l.x,h=l.y,g=l.z,j=l.w;var e=k.x,d=k.y,c=k.z,f=k.w;this.x=i*f+j*e+h*c-g*d;this.y=h*f+j*d+g*e-i*c;this.z=g*f+j*c+i*d-h*e;this.w=j*f-i*e-h*d-g*c;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(c,k){var i=this.x,h=this.y,g=this.z,j=this.w;var b=j*c.w+i*c.x+h*c.y+g*c.z;if(b<0){this.w=-c.w;this.x=-c.x;this.y=-c.y;this.z=-c.z;b=-b}else{this.copy(c)}if(b>=1){this.w=j;this.x=i;this.y=h;this.z=g;return this}var d=Math.acos(b);var a=Math.sqrt(1-b*b);if(Math.abs(a)<0.001){this.w=0.5*(j+this.w);this.x=0.5*(i+this.x);this.y=0.5*(h+this.y);this.z=0.5*(g+this.z);return this}var f=Math.sin((1-k)*d)/a,e=Math.sin(k*d)/a;this.w=(j*f+this.w*e);this.x=(i*f+this.x*e);this.y=(h*f+this.y*e);this.z=(g*f+this.z*e);return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z)&&(a.w===this.w))},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}});THREE.Quaternion.slerp=function(d,c,b,a){return b.copy(d).slerp(c,a)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};THREE.extend(THREE.Vector2.prototype,{set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(b,a){if(a!==undefined){console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(b,a){if(a!==undefined){console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){if(a!==0){this.x/=a;this.y/=a}else{this.set(0,0)}return this},min:function(a){if(this.x>a.x){this.x=a.x}if(this.y>a.y){this.y=a.y}return this},max:function(a){if(this.x<a.x){this.x=a.x}if(this.y<a.y){this.y=a.y}return this},clamp:function(b,a){if(this.x<b.x){this.x=b.x}else{if(this.x>a.x){this.x=a.x}}if(this.y<b.y){this.y=b.y}else{if(this.y>a.y){this.y=a.y}}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(c){var b=this.x-c.x,a=this.y-c.y;return b*b+a*a},setLength:function(a){var b=this.length();if(b!==0&&a!==b){this.multiplyScalar(a/b)}return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y))},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}});THREE.Vector3=function(a,c,b){this.x=a||0;this.y=c||0;this.z=b||0};THREE.extend(THREE.Vector3.prototype,{set:function(a,c,b){this.x=a;this.y=c;this.z=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(b,a){if(a!==undefined){console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;this.z+=b.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},sub:function(b,a){if(a!==undefined){console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;this.z-=b.z;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(b,a){if(a!==undefined){console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(b,a)}this.x*=b.x;this.y*=b.y;this.z*=b.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyMatrix3:function(b){var a=this.x;var f=this.y;var d=this.z;var c=b.elements;this.x=c[0]*a+c[3]*f+c[6]*d;this.y=c[1]*a+c[4]*f+c[7]*d;this.z=c[2]*a+c[5]*f+c[8]*d;return this},applyMatrix4:function(b){var a=this.x,f=this.y,d=this.z;var c=b.elements;this.x=c[0]*a+c[4]*f+c[8]*d+c[12];this.y=c[1]*a+c[5]*f+c[9]*d+c[13];this.z=c[2]*a+c[6]*f+c[10]*d+c[14];return this},applyProjection:function(b){var a=this.x,h=this.y,g=this.z;var c=b.elements;var f=1/(c[3]*a+c[7]*h+c[11]*g+c[15]);this.x=(c[0]*a+c[4]*h+c[8]*g+c[12])*f;this.y=(c[1]*a+c[5]*h+c[9]*g+c[13])*f;this.z=(c[2]*a+c[6]*h+c[10]*g+c[14])*f;return this},applyQuaternion:function(a){var l=this.x;var k=this.y;var j=this.z;var h=a.x;var g=a.y;var f=a.z;var i=a.w;var d=i*l+g*j-f*k;var c=i*k+f*l-h*j;var b=i*j+h*k-g*l;var e=-h*l-g*k-f*j;this.x=d*i+e*-h+c*-f-b*-g;this.y=c*i+e*-g+b*-h-d*-f;this.z=b*i+e*-f+d*-g-c*-h;return this},applyEuler:function(){var a=new THREE.Quaternion();return function(b,d){var c=a.setFromEuler(b,d);this.applyQuaternion(c);return this}}(),applyAxisAngle:function(){var a=new THREE.Quaternion();return function(b,d){var c=a.setFromAxisAngle(b,d);this.applyQuaternion(c);return this}}(),transformDirection:function(b){var a=this.x,f=this.y,d=this.z;var c=b.elements;this.x=c[0]*a+c[4]*f+c[8]*d;this.y=c[1]*a+c[5]*f+c[9]*d;this.z=c[2]*a+c[6]*f+c[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){if(a!==0){this.x/=a;this.y/=a;this.z/=a}else{this.x=0;this.y=0;this.z=0}return this},min:function(a){if(this.x>a.x){this.x=a.x}if(this.y>a.y){this.y=a.y}if(this.z>a.z){this.z=a.z}return this},max:function(a){if(this.x<a.x){this.x=a.x}if(this.y<a.y){this.y=a.y}if(this.z<a.z){this.z=a.z}return this},clamp:function(b,a){if(this.x<b.x){this.x=b.x}else{if(this.x>a.x){this.x=a.x}}if(this.y<b.y){this.y=b.y}else{if(this.y>a.y){this.y=a.y}}if(this.z<b.z){this.z=b.z}else{if(this.z>a.z){this.z=a.z}}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();if(b!==0&&a!==b){this.multiplyScalar(a/b)}return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(c,b){if(b!==undefined){console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(c,b)}var a=this.x,e=this.y,d=this.z;this.x=e*c.z-d*c.y;this.y=d*c.x-a*c.z;this.z=a*c.y-e*c.x;return this},crossVectors:function(d,c){this.x=d.y*c.z-d.z*c.y;this.y=d.z*c.x-d.x*c.z;this.z=d.x*c.y-d.y*c.x;return this},projectOnVector:function(){var a=new THREE.Vector3();return function(b){a.copy(b).normalize();var c=this.dot(a);return this.copy(a).multiplyScalar(c)}}(),projectOnPlane:function(){var a=new THREE.Vector3();return function(b){a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a=new THREE.Vector3();return function(b){a.copy(this).projectOnVector(b).multiplyScalar(2);return this.subVectors(a,this)}}(),angleTo:function(a){var b=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(d){var c=this.x-d.x;var b=this.y-d.y;var a=this.z-d.z;return c*c+b*b+a*a},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(e,f){function i(m){return Math.min(Math.max(m,-1),1)}var d=e.elements;var j=d[0],h=d[4],g=d[8];var c=d[1],b=d[5],a=d[9];var n=d[2],l=d[6],k=d[10];if(f===undefined||f==="XYZ"){this.y=Math.asin(i(g));if(Math.abs(g)<0.99999){this.x=Math.atan2(-a,k);this.z=Math.atan2(-h,j)}else{this.x=Math.atan2(l,b);this.z=0}}else{if(f==="YXZ"){this.x=Math.asin(-i(a));if(Math.abs(a)<0.99999){this.y=Math.atan2(g,k);this.z=Math.atan2(c,b)}else{this.y=Math.atan2(-n,j);this.z=0}}else{if(f==="ZXY"){this.x=Math.asin(i(l));if(Math.abs(l)<0.99999){this.y=Math.atan2(-n,k);this.z=Math.atan2(-h,b)}else{this.y=0;this.z=Math.atan2(c,j)}}else{if(f==="ZYX"){this.y=Math.asin(-i(n));if(Math.abs(n)<0.99999){this.x=Math.atan2(l,k);this.z=Math.atan2(c,j)}else{this.x=0;this.z=Math.atan2(-h,b)}}else{if(f==="YZX"){this.z=Math.asin(i(c));if(Math.abs(c)<0.99999){this.x=Math.atan2(-a,b);this.y=Math.atan2(-n,j)}else{this.x=0;this.y=Math.atan2(g,k)}}else{if(f==="XZY"){this.z=Math.asin(-i(h));if(Math.abs(h)<0.99999){this.x=Math.atan2(l,b);this.y=Math.atan2(g,j)}else{this.x=Math.atan2(-a,k);this.y=0}}}}}}}return this},setEulerFromQuaternion:function(d,a){function g(h){return Math.min(Math.max(h,-1),1)}var e=d.x*d.x;var c=d.y*d.y;var b=d.z*d.z;var f=d.w*d.w;if(a===undefined||a==="XYZ"){this.x=Math.atan2(2*(d.x*d.w-d.y*d.z),(f-e-c+b));this.y=Math.asin(g(2*(d.x*d.z+d.y*d.w)));this.z=Math.atan2(2*(d.z*d.w-d.x*d.y),(f+e-c-b))}else{if(a==="YXZ"){this.x=Math.asin(g(2*(d.x*d.w-d.y*d.z)));this.y=Math.atan2(2*(d.x*d.z+d.y*d.w),(f-e-c+b));this.z=Math.atan2(2*(d.x*d.y+d.z*d.w),(f-e+c-b))}else{if(a==="ZXY"){this.x=Math.asin(g(2*(d.x*d.w+d.y*d.z)));this.y=Math.atan2(2*(d.y*d.w-d.z*d.x),(f-e-c+b));this.z=Math.atan2(2*(d.z*d.w-d.x*d.y),(f-e+c-b))}else{if(a==="ZYX"){this.x=Math.atan2(2*(d.x*d.w+d.z*d.y),(f-e-c+b));this.y=Math.asin(g(2*(d.y*d.w-d.x*d.z)));this.z=Math.atan2(2*(d.x*d.y+d.z*d.w),(f+e-c-b))}else{if(a==="YZX"){this.x=Math.atan2(2*(d.x*d.w-d.z*d.y),(f-e+c-b));this.y=Math.atan2(2*(d.y*d.w-d.x*d.z),(f+e-c-b));this.z=Math.asin(g(2*(d.x*d.y+d.z*d.w)))}else{if(a==="XZY"){this.x=Math.atan2(2*(d.x*d.w+d.y*d.z),(f-e+c-b));this.y=Math.atan2(2*(d.x*d.z+d.y*d.w),(f+e-c-b));this.z=Math.asin(g(2*(d.z*d.w-d.x*d.y)))}}}}}}return this},getScaleFromMatrix:function(a){var d=this.set(a.elements[0],a.elements[1],a.elements[2]).length();var c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();var b=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=d;this.y=c;this.z=b;return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z))},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}});THREE.Vector4=function(a,d,c,b){this.x=a||0;this.y=d||0;this.z=c||0;this.w=(b!==undefined)?b:1};THREE.extend(THREE.Vector4.prototype,{set:function(a,d,c,b){this.x=a;this.y=d;this.z=c;this.w=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=(a.w!==undefined)?a.w:1;return this},add:function(b,a){if(a!==undefined){console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;this.z+=b.z;this.w+=b.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},sub:function(b,a){if(a!==undefined){console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;this.z-=b.z;this.w-=b.w;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(b){var a=this.x;var g=this.y;var f=this.z;var c=this.w;var d=b.elements;this.x=d[0]*a+d[4]*g+d[8]*f+d[12]*c;this.y=d[1]*a+d[5]*g+d[9]*f+d[13]*c;this.z=d[2]*a+d[6]*g+d[10]*f+d[14]*c;this.w=d[3]*a+d[7]*g+d[11]*f+d[15]*c;return this},divideScalar:function(a){if(a!==0){this.x/=a;this.y/=a;this.z/=a;this.w/=a}else{this.x=0;this.y=0;this.z=0;this.w=1}return this},setAxisAngleFromQuaternion:function(b){this.w=2*Math.acos(b.w);var a=Math.sqrt(1-b.w*b.w);if(a<0.0001){this.x=1;this.y=0;this.z=0}else{this.x=b.x/a;this.y=b.y/a;this.z=b.z/a}return this},setAxisAngleFromRotationMatrix:function(t){var u,j,i,h,C=0.01,k=0.1,g=t.elements,B=g[0],w=g[4],v=g[8],e=g[1],c=g[5],a=g[9],r=g[2],p=g[6],n=g[10];if((Math.abs(w-e)<C)&&(Math.abs(v-r)<C)&&(Math.abs(a-p)<C)){if((Math.abs(w+e)<k)&&(Math.abs(v+r)<k)&&(Math.abs(a+p)<k)&&(Math.abs(B+c+n-3)<k)){this.set(1,0,0,0);return this}u=Math.PI;var f=(B+1)/2;var q=(c+1)/2;var A=(n+1)/2;var d=(w+e)/4;var b=(v+r)/4;var o=(a+p)/4;if((f>q)&&(f>A)){if(f<C){j=0;i=0.707106781;h=0.707106781}else{j=Math.sqrt(f);i=d/j;h=b/j}}else{if(q>A){if(q<C){j=0.707106781;i=0;h=0.707106781}else{i=Math.sqrt(q);j=d/i;h=o/i}}else{if(A<C){j=0.707106781;i=0.707106781;h=0}else{h=Math.sqrt(A);j=b/h;i=o/h}}}this.set(j,i,h,u);return this}var l=Math.sqrt((p-a)*(p-a)+(v-r)*(v-r)+(e-w)*(e-w));if(Math.abs(l)<0.001){l=1}this.x=(p-a)/l;this.y=(v-r)/l;this.z=(e-w)/l;this.w=Math.acos((B+c+n-1)/2);return this},min:function(a){if(this.x>a.x){this.x=a.x}if(this.y>a.y){this.y=a.y}if(this.z>a.z){this.z=a.z}if(this.w>a.w){this.w=a.w}return this},max:function(a){if(this.x<a.x){this.x=a.x}if(this.y<a.y){this.y=a.y}if(this.z<a.z){this.z=a.z}if(this.w<a.w){this.w=a.w}return this},clamp:function(b,a){if(this.x<b.x){this.x=b.x}else{if(this.x>a.x){this.x=a.x}}if(this.y<b.y){this.y=b.y}else{if(this.y>a.y){this.y=a.y}}if(this.z<b.z){this.z=b.z}else{if(this.z>a.z){this.z=a.z}}if(this.w<b.w){this.w=b.w}else{if(this.w>a.w){this.w=a.w}}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();if(b!==0&&a!==b){this.multiplyScalar(a/b)}return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z)&&(a.w===this.w))},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}});THREE.Line3=function(b,a){this.start=(b!==undefined)?b:new THREE.Vector3();this.end=(a!==undefined)?a:new THREE.Vector3()};THREE.extend(THREE.Line3.prototype,{set:function(b,a){this.start.copy(b);this.end.copy(a);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(b){var a=b||new THREE.Vector3();return a.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(c,b){var a=b||new THREE.Vector3();return this.delta(a).multiplyScalar(c).add(this.start)},closestPointToPointParameter:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();return function(c,g){b.subVectors(c,this.start);a.subVectors(this.end,this.start);var f=a.dot(a);var e=a.dot(b);var d=e/f;if(g){d=THREE.Math.clamp(d,0,1)}return d}}(),closestPointToPoint:function(b,e,d){var c=this.closestPointToPointParameter(b,e);var a=d||new THREE.Vector3();return this.delta(a).multiplyScalar(c).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return new THREE.Line3().copy(this)}});THREE.Box2=function(b,a){this.min=(b!==undefined)?b:new THREE.Vector2(Infinity,Infinity);this.max=(a!==undefined)?a:new THREE.Vector2(-Infinity,-Infinity)};THREE.extend(THREE.Box2.prototype,{set:function(b,a){this.min.copy(b);this.max.copy(a);return this},setFromPoints:function(d){if(d.length>0){var a=d[0];this.min.copy(a);this.max.copy(a);for(var c=1,b=d.length;c<b;c++){a=d[c];if(a.x<this.min.x){this.min.x=a.x}else{if(a.x>this.max.x){this.max.x=a.x}}if(a.y<this.min.y){this.min.y=a.y}else{if(a.y>this.max.y){this.max.y=a.y}}}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var a=new THREE.Vector2();return function(b,d){var c=a.copy(d).multiplyScalar(0.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return(this.max.x<this.min.x)||(this.max.y<this.min.y)},center:function(b){var a=b||new THREE.Vector2();return a.addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){var a=b||new THREE.Vector2();return a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){if(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y){return false}return true},containsBox:function(a){if((this.min.x<=a.min.x)&&(a.max.x<=this.max.x)&&(this.min.y<=a.min.y)&&(a.max.y<=this.max.y)){return true}return false},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){if(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y){return false}return true},clampPoint:function(b,c){var a=c||new THREE.Vector2();return a.copy(b).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2();return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return new THREE.Box2().copy(this)}});THREE.Box3=function(b,a){this.min=(b!==undefined)?b:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=(a!==undefined)?a:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.extend(THREE.Box3.prototype,{set:function(b,a){this.min.copy(b);this.max.copy(a);return this},setFromPoints:function(d){if(d.length>0){var a=d[0];this.min.copy(a);this.max.copy(a);for(var c=1,b=d.length;c<b;c++){a=d[c];if(a.x<this.min.x){this.min.x=a.x}else{if(a.x>this.max.x){this.max.x=a.x}}if(a.y<this.min.y){this.min.y=a.y}else{if(a.y>this.max.y){this.max.y=a.y}}if(a.z<this.min.z){this.min.z=a.z}else{if(a.z>this.max.z){this.max.z=a.z}}}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var a=new THREE.Vector3();return function(b,d){var c=a.copy(d).multiplyScalar(0.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return(this.max.x<this.min.x)||(this.max.y<this.min.y)||(this.max.z<this.min.z)},center:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){var a=b||new THREE.Vector3();return a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){if(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z){return false}return true},containsBox:function(a){if((this.min.x<=a.min.x)&&(a.max.x<=this.max.x)&&(this.min.y<=a.min.y)&&(a.max.y<=this.max.y)&&(this.min.z<=a.min.z)&&(a.max.z<=this.max.z)){return true}return false},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){if(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z){return false}return true},clampPoint:function(b,c){var a=c||new THREE.Vector3();return a.copy(b).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3();return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3();return function(c){var b=c||new THREE.Sphere();b.center=this.center();b.radius=this.size(a).length()*0.5;return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];return function(b){a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return new THREE.Box3().copy(this)}});THREE.Matrix3=function(g,f,e,d,c,b,a,i,h){this.elements=new Float32Array(9);this.set((g!==undefined)?g:1,f||0,e||0,d||0,(c!==undefined)?c:1,b||0,a||0,i||0,(h!==undefined)?h:1)};THREE.extend(THREE.Matrix3.prototype,{set:function(h,g,f,e,d,c,a,j,i){var b=this.elements;b[0]=h;b[3]=g;b[6]=f;b[1]=e;b[4]=d;b[7]=c;b[2]=a;b[5]=j;b[8]=i;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){var b=a.elements;this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]);return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},multiplyVector3Array:function(){var a=new THREE.Vector3();return function(b){for(var d=0,c=b.length;d<c;d+=3){a.x=b[d];a.y=b[d+1];a.z=b[d+2];a.applyMatrix3(this);b[d]=a.x;b[d+1]=a.y;b[d+2]=a.z}return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var j=this.elements;var s=j[0],r=j[1],q=j[2],p=j[3],o=j[4],n=j[5],m=j[6],l=j[7],k=j[8];return s*o*k-s*n*l-r*p*k+r*n*m+q*p*l-q*o*m},getInverse:function(b,a){var d=b.elements;var f=this.elements;f[0]=d[10]*d[5]-d[6]*d[9];f[1]=-d[10]*d[1]+d[2]*d[9];f[2]=d[6]*d[1]-d[2]*d[5];f[3]=-d[10]*d[4]+d[6]*d[8];f[4]=d[10]*d[0]-d[2]*d[8];f[5]=-d[6]*d[0]+d[2]*d[4];f[6]=d[9]*d[4]-d[5]*d[8];f[7]=-d[9]*d[0]+d[1]*d[8];f[8]=d[5]*d[0]-d[1]*d[4];var c=d[0]*f[0]+d[1]*f[3]+d[2]*f[6];if(c===0){var e="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(a||false){throw new Error(e)}else{console.warn(e)}this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var b,a=this.elements;b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(b){var a=this.elements;b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}});THREE.Matrix4=function(n,m,k,i,f,e,d,c,a,q,p,o,l,j,h,g){var b=this.elements=new Float32Array(16);b[0]=(n!==undefined)?n:1;b[4]=m||0;b[8]=k||0;b[12]=i||0;b[1]=f||0;b[5]=(e!==undefined)?e:1;b[9]=d||0;b[13]=c||0;b[2]=a||0;b[6]=q||0;b[10]=(p!==undefined)?p:1;b[14]=o||0;b[3]=l||0;b[7]=j||0;b[11]=h||0;b[15]=(g!==undefined)?g:1};THREE.extend(THREE.Matrix4.prototype,{set:function(n,m,k,i,f,e,d,c,a,q,p,o,l,j,h,g){var b=this.elements;b[0]=n;b[4]=m;b[8]=k;b[12]=i;b[1]=f;b[5]=e;b[9]=d;b[13]=c;b[2]=a;b[6]=q;b[10]=p;b[14]=o;b[3]=l;b[7]=j;b[11]=h;b[15]=g;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){var b=a.elements;this.set(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15]);return this},setRotationFromEuler:function(o,r){var k=this.elements;var n=o.x,m=o.y,l=o.z;var H=Math.cos(n),G=Math.sin(n);var E=Math.cos(m),B=Math.sin(m);var u=Math.cos(l),s=Math.sin(l);if(r===undefined||r==="XYZ"){var A=H*u,t=H*s,h=G*u,g=G*s;k[0]=E*u;k[4]=-E*s;k[8]=B;k[1]=t+h*B;k[5]=A-g*B;k[9]=-G*E;k[2]=g-A*B;k[6]=h+t*B;k[10]=H*E}else{if(r==="YXZ"){var q=E*u,p=E*s,D=B*u,w=B*s;k[0]=q+w*G;k[4]=D*G-p;k[8]=H*B;k[1]=H*s;k[5]=H*u;k[9]=-G;k[2]=p*G-D;k[6]=w+q*G;k[10]=H*E}else{if(r==="ZXY"){var q=E*u,p=E*s,D=B*u,w=B*s;k[0]=q-w*G;k[4]=-H*s;k[8]=D+p*G;k[1]=p+D*G;k[5]=H*u;k[9]=w-q*G;k[2]=-H*B;k[6]=G;k[10]=H*E}else{if(r==="ZYX"){var A=H*u,t=H*s,h=G*u,g=G*s;k[0]=E*u;k[4]=h*B-t;k[8]=A*B+g;k[1]=E*s;k[5]=g*B+A;k[9]=t*B-h;k[2]=-B;k[6]=G*E;k[10]=H*E}else{if(r==="YZX"){var F=H*E,C=H*B,j=G*E,i=G*B;k[0]=E*u;k[4]=i-F*s;k[8]=j*s+C;k[1]=s;k[5]=H*u;k[9]=-G*u;k[2]=-B*u;k[6]=C*s+j;k[10]=F-i*s}else{if(r==="XZY"){var F=H*E,C=H*B,j=G*E,i=G*B;k[0]=E*u;k[4]=-s;k[8]=B*u;k[1]=F*s+i;k[5]=H*u;k[9]=C*s-j;k[2]=j*s-C;k[6]=G*u;k[10]=i*s+F}}}}}}return this},setRotationFromQuaternion:function(l){var e=this.elements;var h=l.x,g=l.y,f=l.z,i=l.w;var n=h+h,a=g+g,j=f+f;var d=h*n,c=h*a,b=h*j;var m=g*a,k=g*j,r=f*j;var s=i*n,p=i*a,o=i*j;e[0]=1-(m+r);e[4]=c-o;e[8]=b+p;e[1]=c+o;e[5]=1-(d+r);e[9]=k-s;e[2]=b-p;e[6]=k+s;e[10]=1-(d+m);return this},lookAt:function(){var a=new THREE.Vector3();var c=new THREE.Vector3();var b=new THREE.Vector3();return function(e,f,d){var g=this.elements;b.subVectors(e,f).normalize();if(b.length()===0){b.z=1}a.crossVectors(d,b).normalize();if(a.length()===0){b.x+=0.0001;a.crossVectors(d,b).normalize()}c.crossVectors(b,a);g[0]=a.x;g[4]=c.x;g[8]=b.x;g[1]=a.y;g[5]=c.y;g[9]=b.y;g[2]=a.z;g[6]=c.z;g[10]=b.z;return this}}(),multiply:function(a,b){if(b!==undefined){console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(a,b)}return this.multiplyMatrices(this,a)},multiplyMatrices:function(M,L){var s=M.elements;var K=L.elements;var c=this.elements;var p=s[0],n=s[4],m=s[8],l=s[12];var J=s[1],I=s[5],H=s[9],G=s[13];var B=s[2],A=s[6],z=s[10],y=s[14];var t=s[3],r=s[7],q=s[11],o=s[15];var i=K[0],g=K[4],e=K[8],d=K[12];var F=K[1],E=K[5],D=K[9],C=K[13];var x=K[2],w=K[6],v=K[10],u=K[14];var k=K[3],j=K[7],h=K[11],f=K[15];c[0]=p*i+n*F+m*x+l*k;c[4]=p*g+n*E+m*w+l*j;c[8]=p*e+n*D+m*v+l*h;c[12]=p*d+n*C+m*u+l*f;c[1]=J*i+I*F+H*x+G*k;c[5]=J*g+I*E+H*w+G*j;c[9]=J*e+I*D+H*v+G*h;c[13]=J*d+I*C+H*u+G*f;c[2]=B*i+A*F+z*x+y*k;c[6]=B*g+A*E+z*w+y*j;c[10]=B*e+A*D+z*v+y*h;c[14]=B*d+A*C+z*u+y*f;c[3]=t*i+r*F+q*x+o*k;c[7]=t*g+r*E+q*w+o*j;c[11]=t*e+r*D+q*v+o*h;c[15]=t*d+r*C+q*u+o*f;return this},multiplyToArray:function(d,c,e){var f=this.elements;this.multiplyMatrices(d,c);e[0]=f[0];e[1]=f[1];e[2]=f[2];e[3]=f[3];e[4]=f[4];e[5]=f[5];e[6]=f[6];e[7]=f[7];e[8]=f[8];e[9]=f[9];e[10]=f[10];e[11]=f[11];e[12]=f[12];e[13]=f[13];e[14]=f[14];e[15]=f[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return a.applyProjection(this)},multiplyVector4:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3();return function(b){for(var d=0,c=b.length;d<c;d+=3){a.x=b[d];a.y=b[d+1];a.z=b[d+2];a.applyProjection(this);b[d]=a.x;b[d+1]=a.y;b[d+2]=a.z}return b}}(),rotateAxis:function(a){var e=this.elements;var d=a.x,c=a.y,b=a.z;a.x=d*e[0]+c*e[4]+b*e[8];a.y=d*e[1]+c*e[5]+b*e[9];a.z=d*e[2]+c*e[6]+b*e[10];a.normalize();return a},crossVector:function(b){var d=this.elements;var c=new THREE.Vector4();c.x=d[0]*b.x+d[4]*b.y+d[8]*b.z+d[12]*b.w;c.y=d[1]*b.x+d[5]*b.y+d[9]*b.z+d[13]*b.w;c.z=d[2]*b.x+d[6]*b.y+d[10]*b.z+d[14]*b.w;c.w=(b.w)?d[3]*b.x+d[7]*b.y+d[11]*b.z+d[15]*b.w:1;return c},determinant:function(){var c=this.elements;var n=c[0],m=c[4],k=c[8],i=c[12];var f=c[1],e=c[5],d=c[9],b=c[13];var a=c[2],q=c[6],p=c[10],o=c[14];var l=c[3],j=c[7],h=c[11],g=c[15];return(l*(+i*d*q-k*b*q-i*e*p+m*b*p+k*e*o-m*d*o)+j*(+n*d*o-n*b*p+i*f*p-k*f*o+k*b*a-i*d*a)+h*(+n*b*q-n*e*o-i*f*q+m*f*o+i*e*a-m*b*a)+g*(-k*e*a-n*d*q+n*e*p+k*f*q-m*f*p+m*d*a))},transpose:function(){var b=this.elements;var a;a=b[1];b[1]=b[4];b[4]=a;a=b[2];b[2]=b[8];b[8]=a;a=b[6];b[6]=b[9];b[9]=a;a=b[3];b[3]=b[12];b[12]=a;a=b[7];b[7]=b[13];b[13]=a;a=b[11];b[11]=b[14];b[14]=a;return this},flattenToArray:function(b){var a=this.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return b},flattenToArrayOffset:function(c,b){var a=this.elements;c[b]=a[0];c[b+1]=a[1];c[b+2]=a[2];c[b+3]=a[3];c[b+4]=a[4];c[b+5]=a[5];c[b+6]=a[6];c[b+7]=a[7];c[b+8]=a[8];c[b+9]=a[9];c[b+10]=a[10];c[b+11]=a[11];c[b+12]=a[12];c[b+13]=a[13];c[b+14]=a[14];c[b+15]=a[15];return c},getPosition:function(){var a=new THREE.Vector3();return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(r,h){var g=this.elements;var w=r.elements;var p=w[0],n=w[4],k=w[8],i=w[12];var v=w[1],u=w[5],t=w[9],s=w[13];var d=w[2],c=w[6],b=w[10],a=w[14];var q=w[3],o=w[7],l=w[11],j=w[15];g[0]=t*a*o-s*b*o+s*c*l-u*a*l-t*c*j+u*b*j;g[4]=i*b*o-k*a*o-i*c*l+n*a*l+k*c*j-n*b*j;g[8]=k*s*o-i*t*o+i*u*l-n*s*l-k*u*j+n*t*j;g[12]=i*t*c-k*s*c-i*u*b+n*s*b+k*u*a-n*t*a;g[1]=s*b*q-t*a*q-s*d*l+v*a*l+t*d*j-v*b*j;g[5]=k*a*q-i*b*q+i*d*l-p*a*l-k*d*j+p*b*j;g[9]=i*t*q-k*s*q-i*v*l+p*s*l+k*v*j-p*t*j;g[13]=k*s*d-i*t*d+i*v*b-p*s*b-k*v*a+p*t*a;g[2]=u*a*q-s*c*q+s*d*o-v*a*o-u*d*j+v*c*j;g[6]=i*c*q-n*a*q-i*d*o+p*a*o+n*d*j-p*c*j;g[10]=n*s*q-i*u*q+i*v*o-p*s*o-n*v*j+p*u*j;g[14]=i*u*d-n*s*d-i*v*c+p*s*c+n*v*a-p*u*a;g[3]=t*c*q-u*b*q-t*d*o+v*b*o+u*d*l-v*c*l;g[7]=n*b*q-k*c*q+k*d*o-p*b*o-n*d*l+p*c*l;g[11]=k*u*q-n*t*q-k*v*o+p*t*o+n*v*l-p*u*l;g[15]=n*t*d-k*u*d+k*v*c-p*t*c-n*v*b+p*u*b;var e=w[0]*g[0]+w[1]*g[4]+w[2]*g[8]+w[3]*g[12];if(e==0){var f="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(h||false){throw new Error(f)}else{console.warn(f)}this.identity();return this}this.multiplyScalar(1/e);return this},compose:function(){var b=new THREE.Matrix4(),a=new THREE.Matrix4();return function(f,c,e){var d=this.elements;b.identity();b.setRotationFromQuaternion(c);a.makeScale(e.x,e.y,e.z);this.multiplyMatrices(b,a);d[12]=f.x;d[13]=f.y;d[14]=f.z;return this}}(),decompose:function(){var a=new THREE.Vector3(),d=new THREE.Vector3(),c=new THREE.Vector3(),b=new THREE.Matrix4();return function(h,e,g){var f=this.elements;a.set(f[0],f[1],f[2]);d.set(f[4],f[5],f[6]);c.set(f[8],f[9],f[10]);h=(h instanceof THREE.Vector3)?h:new THREE.Vector3();e=(e instanceof THREE.Quaternion)?e:new THREE.Quaternion();g=(g instanceof THREE.Vector3)?g:new THREE.Vector3();g.x=a.length();g.y=d.length();g.z=c.length();h.x=f[12];h.y=f[13];h.z=f[14];b.copy(this);b.elements[0]/=g.x;b.elements[1]/=g.x;b.elements[2]/=g.x;b.elements[4]/=g.y;b.elements[5]/=g.y;b.elements[6]/=g.y;b.elements[8]/=g.z;b.elements[9]/=g.z;b.elements[10]/=g.z;e.setFromRotationMatrix(b);return[h,e,g]}}(),extractPosition:function(a){var c=this.elements;var b=a.elements;c[12]=b[12];c[13]=b[13];c[14]=b[14];return this},extractRotation:function(){var a=new THREE.Vector3();return function(b){var g=this.elements;var f=b.elements;var e=1/a.set(f[0],f[1],f[2]).length();var d=1/a.set(f[4],f[5],f[6]).length();var c=1/a.set(f[8],f[9],f[10]).length();g[0]=f[0]*e;g[1]=f[1]*e;g[2]=f[2]*e;g[4]=f[4]*d;g[5]=f[5]*d;g[6]=f[6]*d;g[8]=f[8]*c;g[9]=f[9]*c;g[10]=f[10]*c;return this}}(),translate:function(b){var d=this.elements;var a=b.x,e=b.y,c=b.z;d[12]=d[0]*a+d[4]*e+d[8]*c+d[12];d[13]=d[1]*a+d[5]*e+d[9]*c+d[13];d[14]=d[2]*a+d[6]*e+d[10]*c+d[14];d[15]=d[3]*a+d[7]*e+d[11]*c+d[15];return this},rotateX:function(e){var d=this.elements;var i=d[4];var b=d[5];var l=d[6];var h=d[7];var g=d[8];var a=d[9];var k=d[10];var f=d[11];var j=Math.cos(e);var m=Math.sin(e);d[4]=j*i+m*g;d[5]=j*b+m*a;d[6]=j*l+m*k;d[7]=j*h+m*f;d[8]=j*g-m*i;d[9]=j*a-m*b;d[10]=j*k-m*l;d[11]=j*f-m*h;return this},rotateY:function(e){var d=this.elements;var i=d[0];var b=d[1];var l=d[2];var h=d[3];var g=d[8];var a=d[9];var k=d[10];var f=d[11];var j=Math.cos(e);var m=Math.sin(e);d[0]=j*i-m*g;d[1]=j*b-m*a;d[2]=j*l-m*k;d[3]=j*h-m*f;d[8]=j*g+m*i;d[9]=j*a+m*b;d[10]=j*k+m*l;d[11]=j*f+m*h;return this},rotateZ:function(e){var d=this.elements;var i=d[0];var b=d[1];var l=d[2];var h=d[3];var g=d[4];var a=d[5];var k=d[6];var f=d[7];var j=Math.cos(e);var m=Math.sin(e);d[0]=j*i+m*g;d[1]=j*b+m*a;d[2]=j*l+m*k;d[3]=j*h+m*f;d[4]=j*g-m*i;d[5]=j*a-m*b;d[6]=j*k-m*l;d[7]=j*f-m*h;return this},rotateByAxis:function(m,l){var a=this.elements;if(m.x===1&&m.y===0&&m.z===0){return this.rotateX(l)}else{if(m.x===0&&m.y===1&&m.z===0){return this.rotateY(l)}else{if(m.x===0&&m.y===0&&m.z===1){return this.rotateZ(l)}}}var F=m.x,E=m.y,D=m.z;var H=Math.sqrt(F*F+E*E+D*D);F/=H;E/=H;D/=H;var v=F*F,g=E*E,O=D*D;var Q=Math.cos(l);var G=Math.sin(l);var o=1-Q;var u=F*E*o;var t=F*D*o;var f=E*D*o;var A=F*G;var k=E*G;var T=D*G;var j=v+(1-v)*Q;var S=u+T;var C=t-k;var i=u-T;var R=g+(1-g)*Q;var B=f+A;var h=t+k;var P=f-A;var w=O+(1-O)*Q;var L=a[0],r=a[1],e=a[2],N=a[3];var J=a[4],q=a[5],d=a[6],M=a[7];var I=a[8],p=a[9],b=a[10],K=a[11];a[0]=j*L+S*J+C*I;a[1]=j*r+S*q+C*p;a[2]=j*e+S*d+C*b;a[3]=j*N+S*M+C*K;a[4]=i*L+R*J+B*I;a[5]=i*r+R*q+B*p;a[6]=i*e+R*d+B*b;a[7]=i*N+R*M+B*K;a[8]=h*L+P*J+w*I;a[9]=h*r+P*q+w*p;a[10]=h*e+P*d+w*b;a[11]=h*N+P*M+w*K;return this},scale:function(b){var d=this.elements;var a=b.x,e=b.y,c=b.z;d[0]*=a;d[4]*=e;d[8]*=c;d[1]*=a;d[5]*=e;d[9]*=c;d[2]*=a;d[6]*=e;d[10]*=c;d[3]*=a;d[7]*=e;d[11]*=c;return this},getMaxScaleOnAxis:function(){var c=this.elements;var d=c[0]*c[0]+c[1]*c[1]+c[2]*c[2];var b=c[4]*c[4]+c[5]*c[5]+c[6]*c[6];var a=c[8]*c[8]+c[9]*c[9]+c[10]*c[10];return Math.sqrt(Math.max(d,Math.max(b,a)))},makeTranslation:function(a,c,b){this.set(1,0,0,a,0,1,0,c,0,0,1,b,0,0,0,1);return this},makeRotationX:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(1,0,0,0,0,d,-b,0,0,b,d,0,0,0,0,1);return this},makeRotationY:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(d,0,b,0,0,1,0,0,-b,0,d,0,0,0,0,1);return this},makeRotationZ:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(d,-b,0,0,b,d,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var f=Math.cos(b);var k=Math.sin(b);var j=1-f;var i=a.x,h=a.y,g=a.z;var e=j*i,d=j*h;this.set(e*i+f,e*h-k*g,e*g+k*h,0,e*h+k*g,d*h+f,d*g-k*i,0,e*g-k*h,d*g+k*i,j*g*g+f,0,0,0,0,1);return this},makeScale:function(a,c,b){this.set(a,0,0,0,0,c,0,0,0,0,b,0,0,0,0,1);return this},makeFrustum:function(g,q,e,n,i,h){var f=this.elements;var p=2*i/(q-g);var m=2*i/(n-e);var o=(q+g)/(q-g);var l=(n+e)/(n-e);var k=-(h+i)/(h-i);var j=-2*h*i/(h-i);f[0]=p;f[4]=0;f[8]=o;f[12]=0;f[1]=0;f[5]=m;f[9]=l;f[13]=0;f[2]=0;f[6]=0;f[10]=k;f[14]=j;f[3]=0;f[7]=0;f[11]=-1;f[15]=0;return this},makePerspective:function(e,c,g,b){var a=g*Math.tan(THREE.Math.degToRad(e*0.5));var f=-a;var h=f*c;var d=a*c;return this.makeFrustum(h,d,f,a,g,b)},makeOrthographic:function(d,n,k,a,g,f){var c=this.elements;var m=n-d;var e=k-a;var b=f-g;var l=(n+d)/m;var j=(k+a)/e;var i=(f+g)/b;c[0]=2/m;c[4]=0;c[8]=0;c[12]=-l;c[1]=0;c[5]=2/e;c[9]=0;c[13]=-j;c[2]=0;c[6]=0;c[10]=-2/b;c[14]=-i;c[3]=0;c[7]=0;c[11]=0;c[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}});THREE.Ray=function(a,b){this.origin=(a!==undefined)?a:new THREE.Vector3();this.direction=(b!==undefined)?b:new THREE.Vector3()};THREE.extend(THREE.Ray.prototype,{set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(c,b){var a=b||new THREE.Vector3();return a.copy(this.direction).multiplyScalar(c).add(this.origin)},recast:function(){var a=new THREE.Vector3();return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(b,c){var a=c||new THREE.Vector3();a.subVectors(b,this.origin);var d=a.dot(this.direction);return a.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3();return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),isIntersectionSphere:function(a){return(this.distanceToPoint(a.center)<=a.radius)},isIntersectionPlane:function(a){var b=a.normal.dot(this.direction);if(b!=0){return true}if(a.distanceToPoint(this.origin)==0){return true}return false},distanceToPlane:function(a){var c=a.normal.dot(this.direction);if(c==0){if(a.distanceToPoint(this.origin)==0){return 0}return undefined}var b=-(this.origin.dot(a.normal)+a.constant)/c;return b},intersectPlane:function(a,c){var b=this.distanceToPlane(a);if(b===undefined){return undefined}return this.at(b,c)},applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return new THREE.Ray().copy(this)}});THREE.Sphere=function(b,a){this.center=(b!==undefined)?b:new THREE.Vector3();this.radius=(a!==undefined)?a:0};THREE.extend(THREE.Sphere.prototype,{set:function(b,a){this.center.copy(b);this.radius=a;return this},setFromCenterAndPoints:function(a,f){var b=0;for(var e=0,c=f.length;e<c;e++){var d=a.distanceToSquared(f[e]);b=Math.max(b,d)}this.center=a;this.radius=Math.sqrt(b);return this},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return(this.radius<=0)},containsPoint:function(a){return(a.distanceToSquared(this.center)<=(this.radius*this.radius))},distanceToPoint:function(a){return(a.distanceTo(this.center)-this.radius)},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=(b*b)},clampPoint:function(b,d){var c=this.center.distanceToSquared(b);var a=d||new THREE.Vector3();a.copy(b);if(c>(this.radius*this.radius)){a.sub(this.center).normalize();a.multiplyScalar(this.radius).add(this.center)}return a},getBoundingBox:function(a){var b=a||new THREE.Box3();b.set(this.center,this.center);b.expandByScalar(this.radius);return b},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius=this.radius*a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&(a.radius===this.radius)},clone:function(){return new THREE.Sphere().copy(this)}});THREE.Frustum=function(f,e,d,c,b,a){this.planes=[(f!==undefined)?f:new THREE.Plane(),(e!==undefined)?e:new THREE.Plane(),(d!==undefined)?d:new THREE.Plane(),(c!==undefined)?c:new THREE.Plane(),(b!==undefined)?b:new THREE.Plane(),(a!==undefined)?a:new THREE.Plane()]};THREE.extend(THREE.Frustum.prototype,{set:function(g,f,e,d,c,b){var a=this.planes;a[0].copy(g);a[1].copy(f);a[2].copy(e);a[3].copy(d);a[4].copy(c);a[5].copy(b);return this},copy:function(c){var a=this.planes;for(var b=0;b<6;b++){a[b].copy(c.planes[b])}return this},setFromMatrix:function(o){var h=this.planes;var t=o.elements;var l=t[0],j=t[1],i=t[2],g=t[3];var f=t[4],e=t[5],d=t[6],c=t[7];var b=t[8],a=t[9],s=t[10],r=t[11];var q=t[12],p=t[13],n=t[14],k=t[15];h[0].setComponents(g-l,c-f,r-b,k-q).normalize();h[1].setComponents(g+l,c+f,r+b,k+q).normalize();h[2].setComponents(g+j,c+e,r+a,k+p).normalize();h[3].setComponents(g-j,c-e,r-a,k-p).normalize();h[4].setComponents(g-i,c-d,r-s,k-n).normalize();h[5].setComponents(g+i,c+d,r+s,k+n).normalize();return this},intersectsObject:function(){var a=new THREE.Vector3();return function(e){var c=e.matrixWorld;var d=this.planes;var b=-e.geometry.boundingSphere.radius*c.getMaxScaleOnAxis();a.getPositionFromMatrix(c);for(var f=0;f<6;f++){var g=d[f].distanceToPoint(a);if(g<b){return false}}return true}}(),intersectsSphere:function(c){var d=this.planes;var a=c.center;var b=-c.radius;for(var e=0;e<6;e++){var f=d[e].distanceToPoint(a);if(f<b){return false}}return true},containsPoint:function(a){var b=this.planes;for(var c=0;c<6;c++){if(b[c].distanceToPoint(a)<0){return false}}return true},clone:function(){return new THREE.Frustum().copy(this)}});THREE.Plane=function(b,a){this.normal=(b!==undefined)?b:new THREE.Vector3(1,0,0);this.constant=(a!==undefined)?a:0};THREE.extend(THREE.Plane.prototype,{set:function(b,a){this.normal.copy(b);this.constant=a;return this},setComponents:function(a,d,c,b){this.normal.set(a,d,c);this.constant=b;return this},setFromNormalAndCoplanarPoint:function(b,a){this.normal.copy(b);this.constant=-a.dot(this.normal);return this},setFromCoplanarPoints:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();return function(e,d,g){var f=b.subVectors(g,d).cross(a.subVectors(e,d)).normalize();this.setFromNormalAndCoplanarPoint(f,e);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(b,d){var c=this.distanceToPoint(b);var a=d||new THREE.Vector3();return a.copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var c=this.distanceToPoint(a.start);var b=this.distanceToPoint(a.end);return(c<0&&b>0)||(b<0&&c>0)},intersectLine:function(){var a=new THREE.Vector3();return function(c,e){var b=e||new THREE.Vector3();var f=c.delta(a);var g=this.normal.dot(f);if(g==0){if(this.distanceToPoint(c.start)==0){return b.copy(c.start)}return undefined}var d=-(c.start.dot(this.normal)+this.constant)/g;if(d<0||d>1){return undefined}return b.copy(f).multiplyScalar(d).add(c.start)}}(),coplanarPoint:function(b){var a=b||new THREE.Vector3();return a.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();return function(d,e){e=e||new THREE.Matrix3().getInverse(d).transpose();var f=b.copy(this.normal).applyMatrix3(e);var c=this.coplanarPoint(a);c.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,c);return this}}(),translate:function(a){this.constant=this.constant-a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&(a.constant==this.constant)},clone:function(){return new THREE.Plane().copy(this)}});THREE.Math={clamp:function(d,e,c){return(d<e)?e:((d>c)?c:d)},clampBottom:function(b,c){return b<c?c:b},mapLinear:function(b,c,a,e,d){return e+(b-c)*(d-e)/(a-c)},smoothstep:function(b,c,a){if(b<=c){return 0}if(b>=a){return 1}b=(b-c)/(a-c);return b*b*(3-2*b)},smootherstep:function(b,c,a){if(b<=c){return 0}if(b>=a){return 1}b=(b-c)/(a-c);return b*b*b*(b*(b*6-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return(a<0)?-1:((a>0)?1:0)},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()};THREE.Spline=function(n){this.points=n;var h=[],j={x:0,y:0,z:0},m,a,e,d,b,l,k,i,g;this.initFromArray=function(c){this.points=[];for(var o=0;o<c.length;o++){this.points[o]={x:c[o][0],y:c[o][1],z:c[o][2]}}};this.getPoint=function(c){m=(this.points.length-1)*c;a=Math.floor(m);e=m-a;h[0]=a===0?a:a-1;h[1]=a;h[2]=a>this.points.length-2?this.points.length-1:a+1;h[3]=a>this.points.length-3?this.points.length-1:a+2;l=this.points[h[0]];k=this.points[h[1]];i=this.points[h[2]];g=this.points[h[3]];d=e*e;b=e*d;j.x=f(l.x,k.x,i.x,g.x,e,d,b);j.y=f(l.y,k.y,i.y,g.y,e,d,b);j.z=f(l.z,k.z,i.z,g.z,e,d,b);return j};this.getControlPointsArray=function(){var o,r,c=this.points.length,q=[];for(o=0;o<c;o++){r=this.points[o];q[o]=[r.x,r.y,r.z]}return q};this.getLength=function(p){var r,t,u,s,x=0,c=0,q=0,w=new THREE.Vector3(),o=new THREE.Vector3(),v=[],y=0;v[0]=0;if(!p){p=100}u=this.points.length*p;w.copy(this.points[0]);for(r=1;r<u;r++){t=r/u;s=this.getPoint(t);o.copy(s);y+=o.distanceTo(w);w.copy(s);x=(this.points.length-1)*t;c=Math.floor(x);if(c!=q){v[c]=y;q=c}}v[v.length]=y;return{chunks:v,total:y}};this.reparametrizeByArcLength=function(p){var t,s,w,x,q,o,y,v,u,z=[],c=new THREE.Vector3(),r=this.getLength();z.push(c.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){y=r.chunks[t]-r.chunks[t-1];v=Math.ceil(p*y/r.total);x=(t-1)/(this.points.length-1);q=t/(this.points.length-1);for(s=1;s<v-1;s++){w=x+s*(1/v)*(q-x);u=this.getPoint(w);z.push(c.copy(u).clone())}z.push(c.copy(this.points[t]).clone())}this.points=z};function f(v,u,r,q,w,o,c){var s=(r-v)*0.5,p=(q-u)*0.5;return(2*(u-r)+s+p)*c+(-3*(u-r)-2*s-p)*o+s*w+u}};THREE.Triangle=function(e,d,f){this.a=(e!==undefined)?e:new THREE.Vector3();this.b=(d!==undefined)?d:new THREE.Vector3();this.c=(f!==undefined)?f:new THREE.Vector3()};THREE.Triangle.normal=function(){var a=new THREE.Vector3();return function(g,e,i,h){var d=h||new THREE.Vector3();d.subVectors(i,e);a.subVectors(g,e);d.cross(a);var f=d.lengthSq();if(f>0){return d.multiplyScalar(1/Math.sqrt(f))}return d.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3(),c=new THREE.Vector3(),b=new THREE.Vector3();return function(n,m,k,h,r){a.subVectors(h,m);c.subVectors(k,m);b.subVectors(n,m);var l=a.dot(a);var j=a.dot(c);var i=a.dot(b);var f=c.dot(c);var d=c.dot(b);var g=(l*f-j*j);var q=r||new THREE.Vector3();if(g==0){return q.set(-2,-1,-1)}var e=1/g;var p=(f*i-j*d)*e;var o=(l*d-j*i)*e;return q.set(1-p-o,o,p)}}();THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3();return function(f,g,e,h){var d=THREE.Triangle.barycoordFromPoint(f,g,e,h,a);return(d.x>=0)&&(d.y>=0)&&((d.x+d.y)<=1)}}();THREE.extend(THREE.Triangle.prototype,{constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(b,d,c,a){this.a.copy(b[d]);this.b.copy(b[c]);this.c.copy(b[a]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3();var b=new THREE.Vector3();return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return a.cross(b).length()*0.5}}(),midpoint:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(b){var a=b||new THREE.Plane();return a.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return new THREE.Triangle().copy(this)}});THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.UV=function(b,a){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(b,a)};THREE.Clock=function(a){this.autoStart=(a!==undefined)?a:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false};THREE.extend(THREE.Clock.prototype,{start:function(){this.startTime=window.performance!==undefined&&window.performance.now!==undefined?window.performance.now():Date.now();this.oldTime=this.startTime;this.running=true},stop:function(){this.getElapsedTime();this.running=false},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var b=0;if(this.autoStart&&!this.running){this.start()}if(this.running){var a=window.performance!==undefined&&window.performance.now!==undefined?window.performance.now():Date.now();b=0.001*(a-this.oldTime);this.oldTime=a;this.elapsedTime+=b}return b}});THREE.EventDispatcher=function(){var a={};this.addEventListener=function(b,c){if(a[b]===undefined){a[b]=[]}if(a[b].indexOf(c)===-1){a[b].push(c)}};this.removeEventListener=function(c,d){var b=a[c].indexOf(d);if(b!==-1){a[c].splice(b,1)}};this.dispatchEvent=function(e){var b=a[e.type];if(b!==undefined){e.target=this;for(var d=0,c=b.length;d<c;d++){b[d].call(this,e)}}}};(function(f){f.Raycaster=function(l,n,m,k){this.ray=new f.Ray(l,n);if(this.ray.direction.lengthSq()>0){this.ray.direction.normalize()}this.near=m||0;this.far=k||Infinity};var b=new f.Sphere();var c=new f.Ray();var g=new f.Plane();var i=new f.Vector3();var e=new f.Vector3();var h=new f.Matrix4();var a=function(l,k){return l.distance-k.distance};var d=function(D,u,l){if(D instanceof f.Particle){e.getPositionFromMatrix(D.matrixWorld);var o=u.ray.distanceToPoint(e);if(o>D.scale.x){return l}l.push({distance:o,point:D.position,face:null,object:D})}else{if(D instanceof f.Mesh){e.getPositionFromMatrix(D.matrixWorld);b.set(e,D.geometry.boundingSphere.radius*D.matrixWorld.getMaxScaleOnAxis());if(!u.ray.isIntersectionSphere(b)){return l}var p=D.geometry;var q=p.vertices;var n=D.material instanceof f.MeshFaceMaterial;var v=n===true?D.material.materials:null;var m=D.material.side;var C,A,z,y;var w=u.precision;D.matrixRotationWorld.extractRotation(D.matrixWorld);h.getInverse(D.matrixWorld);c.copy(u.ray).applyMatrix4(h);for(var x=0,s=p.faces.length;x<s;x++){var r=p.faces[x];var t=n===true?v[r.materialIndex]:D.material;if(t===undefined){continue}g.setFromNormalAndCoplanarPoint(r.normal,q[r.a]);var B=c.distanceToPlane(g);if(Math.abs(B)<w){continue}if(B<0){continue}m=t.side;if(m!==f.DoubleSide){var k=c.direction.dot(g.normal);if(!(m===f.FrontSide?k<0:k>0)){continue}}if(B<u.near||B>u.far){continue}i=c.at(B,i);if(r instanceof f.Face3){C=q[r.a];A=q[r.b];z=q[r.c];if(!f.Triangle.containsPoint(i,C,A,z)){continue}}else{if(r instanceof f.Face4){C=q[r.a];A=q[r.b];z=q[r.c];y=q[r.d];if((!f.Triangle.containsPoint(i,C,A,y))&&(!f.Triangle.containsPoint(i,A,z,y))){continue}}else{throw Error("face type not supported")}}l.push({distance:B,point:u.ray.at(B),face:r,faceIndex:x,object:D})}}}};var j=function(n,m,p){var q=n.getDescendants();for(var o=0,k=q.length;o<k;o++){d(q[o],m,p)}};f.Raycaster.prototype.precision=0.0001;f.Raycaster.prototype.set=function(k,l){this.ray.set(k,l);if(this.ray.direction.length()>0){this.ray.direction.normalize()}};f.Raycaster.prototype.intersectObject=function(l,k){var m=[];if(k===true){j(l,this,m)}d(l,this,m);m.sort(a);return m};f.Raycaster.prototype.intersectObjects=function(p,m){var o=[];for(var n=0,k=p.length;n<k;n++){d(p[n],this,o);if(m===true){j(p[n],this,o)}}o.sort(a);return o}}(THREE));THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=undefined;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3();this.rotation=new THREE.Vector3();this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4();this.matrixWorld=new THREE.Matrix4();this.matrixRotationWorld=new THREE.Matrix4();this.matrixAutoUpdate=true;this.matrixWorldNeedsUpdate=true;this.quaternion=new THREE.Quaternion();this.useQuaternion=false;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this._vector=new THREE.Vector3()};THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);var b=new THREE.Matrix4().extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(b,a){this.matrix.rotateAxis(a);this.position.add(a.multiplyScalar(b))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(a){return a.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);if(this.rotationAutoUpdate){if(this.useQuaternion===false){this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)}else{this.quaternion.copy(this.matrix.decompose()[1])}}},add:function(a){if(a===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");return}if(a instanceof THREE.Object3D){if(a.parent!==undefined){a.parent.remove(a)}a.parent=this;this.children.push(a);var b=this;while(b.parent!==undefined){b=b.parent}if(b!==undefined&&b instanceof THREE.Scene){b.__addObject(a)}}},remove:function(b){var a=this.children.indexOf(b);if(a!==-1){b.parent=undefined;this.children.splice(a,1);var c=this;while(c.parent!==undefined){c=c.parent}if(c!==undefined&&c instanceof THREE.Scene){c.__removeObject(b)}}},traverse:function(c){c(this);for(var b=0,a=this.children.length;b<a;b++){this.children[b].traverse(c)}},getChildByName:function(c,b){for(var d=0,a=this.children.length;d<a;d++){var e=this.children[d];if(e.name===c){return e}if(b===true){e=e.getChildByName(c,b);if(e!==undefined){return e}}}return undefined},getDescendants:function(c){if(c===undefined){c=[]}Array.prototype.push.apply(c,this.children);for(var b=0,a=this.children.length;b<a;b++){this.children[b].getDescendants(c)}return c},updateMatrix:function(){this.matrix.setPosition(this.position);if(this.useQuaternion===false){this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder)}else{this.matrix.setRotationFromQuaternion(this.quaternion)}if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1){this.matrix.scale(this.scale)}this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(c){if(this.matrixAutoUpdate===true){this.updateMatrix()}if(this.matrixWorldNeedsUpdate===true||c===true){if(this.parent===undefined){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;c=true}for(var b=0,a=this.children.length;b<a;b++){this.children[b].updateMatrixWorld(c)}},clone:function(a){if(a===undefined){a=new THREE.Object3D()}a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);if(a.rotation instanceof THREE.Vector3){a.rotation.copy(this.rotation)}a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;for(var b=0;b<this.children.length;b++){var c=this.children[b];a.add(c.clone())}return a}};THREE.Object3D.__m1=new THREE.Matrix4();THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0;THREE.Projector=function(){var V,F,M=[],n=0,z,c,e=[],b=0,j,O,L=[],i=0,q,u=[],B=0,h,S,U=[],x=0,P,p,w=[],K=0,I={objects:[],sprites:[],lights:[],elements:[]},J=new THREE.Vector3(),H=new THREE.Vector4(),t=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),W=new THREE.Box3(),R=new Array(3),Q=new Array(4),a=new THREE.Matrix4(),f=new THREE.Matrix4(),C,E=new THREE.Matrix4(),r=new THREE.Matrix3(),o=new THREE.Matrix3(),d=new THREE.Vector3(),T=new THREE.Frustum(),v=new THREE.Vector4(),g=new THREE.Vector4();this.projectVector=function(X,Y){Y.matrixWorldInverse.getInverse(Y.matrixWorld);f.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse);return X.applyProjection(f)};this.unprojectVector=function(X,Y){Y.projectionMatrixInverse.getInverse(Y.projectionMatrix);f.multiplyMatrices(Y.matrixWorld,Y.projectionMatrixInverse);return X.applyProjection(f)};this.pickingRay=function(Y,Z){Y.z=-1;var X=new THREE.Vector3(Y.x,Y.y,1);this.unprojectVector(Y,Z);this.unprojectVector(X,Z);X.sub(Y).normalize();return new THREE.Raycaster(Y,X)};var N=function(X,Y){F=0;I.objects.length=0;I.sprites.length=0;I.lights.length=0;var Z=function(ac){for(var ad=0,aa=ac.children.length;ad<aa;ad++){var ab=ac.children[ad];if(ab.visible===false){continue}if(ab instanceof THREE.Light){I.lights.push(ab)}else{if(ab instanceof THREE.Mesh||ab instanceof THREE.Line){if(ab.frustumCulled===false||T.intersectsObject(ab)===true){V=m();V.object=ab;if(ab.renderDepth!==null){V.z=ab.renderDepth}else{J.getPositionFromMatrix(ab.matrixWorld);J.applyProjection(f);V.z=J.z}I.objects.push(V)}}else{if(ab instanceof THREE.Sprite||ab instanceof THREE.Particle){V=m();V.object=ab;if(ab.renderDepth!==null){V.z=ab.renderDepth}else{J.getPositionFromMatrix(ab.matrixWorld);J.applyProjection(f);V.z=J.z}I.sprites.push(V)}else{V=m();V.object=ab;if(ab.renderDepth!==null){V.z=ab.renderDepth}else{J.getPositionFromMatrix(ab.matrixWorld);J.applyProjection(f);V.z=J.z}I.objects.push(V)}}}Z(ab)}};Z(X);if(Y===true){I.objects.sort(s)}return I};this.projectScene=function(aj,ag,am,Y){var ai=false,aw,ao,au,ae,az,al,ax,aE,aC,ak,av,ap,at,ad,X,ac,ab,Z,aq,ar,aH,aF,aD,aB,aa,ah;O=0;q=0;S=0;p=0;I.elements.length=0;aj.updateMatrixWorld();if(ag.parent===undefined){ag.updateMatrixWorld()}a.copy(ag.matrixWorldInverse.getInverse(ag.matrixWorld));f.multiplyMatrices(ag.projectionMatrix,a);o.getInverse(a);o.transpose();T.setFromMatrix(f);I=N(aj,am);for(aw=0,ao=I.objects.length;aw<ao;aw++){at=I.objects[aw].object;C=at.matrixWorld;c=0;if(at instanceof THREE.Mesh){ad=at.geometry;X=ad.vertices;ac=ad.faces;aq=ad.faceVertexUvs;r.getInverse(C);r.transpose();aa=at.material instanceof THREE.MeshFaceMaterial;ah=aa===true?at.material:null;for(au=0,ae=X.length;au<ae;au++){z=y();z.positionWorld.copy(X[au]).applyMatrix4(C);z.positionScreen.copy(z.positionWorld).applyMatrix4(f);z.positionScreen.x/=z.positionScreen.w;z.positionScreen.y/=z.positionScreen.w;z.positionScreen.z/=z.positionScreen.w;z.visible=!(z.positionScreen.x<-1||z.positionScreen.x>1||z.positionScreen.y<-1||z.positionScreen.y>1||z.positionScreen.z<-1||z.positionScreen.z>1)}for(az=0,al=ac.length;az<al;az++){ab=ac[az];var ay=aa===true?ah.materials[ab.materialIndex]:at.material;if(ay===undefined){continue}var af=ay.side;if(ab instanceof THREE.Face3){aH=e[ab.a];aF=e[ab.b];aD=e[ab.c];R[0]=aH.positionScreen;R[1]=aF.positionScreen;R[2]=aD.positionScreen;if(aH.visible===true||aF.visible===true||aD.visible===true||t.isIntersectionBox(W.setFromPoints(R))){ai=((aD.positionScreen.x-aH.positionScreen.x)*(aF.positionScreen.y-aH.positionScreen.y)-(aD.positionScreen.y-aH.positionScreen.y)*(aF.positionScreen.x-aH.positionScreen.x))<0;if(af===THREE.DoubleSide||ai===(af===THREE.FrontSide)){j=l();j.v1.copy(aH);j.v2.copy(aF);j.v3.copy(aD)}else{continue}}else{continue}}else{if(ab instanceof THREE.Face4){aH=e[ab.a];aF=e[ab.b];aD=e[ab.c];aB=e[ab.d];Q[0]=aH.positionScreen;Q[1]=aF.positionScreen;Q[2]=aD.positionScreen;Q[3]=aB.positionScreen;if(aH.visible===true||aF.visible===true||aD.visible===true||aB.visible===true||t.isIntersectionBox(W.setFromPoints(Q))){ai=(aB.positionScreen.x-aH.positionScreen.x)*(aF.positionScreen.y-aH.positionScreen.y)-(aB.positionScreen.y-aH.positionScreen.y)*(aF.positionScreen.x-aH.positionScreen.x)<0||(aF.positionScreen.x-aD.positionScreen.x)*(aB.positionScreen.y-aD.positionScreen.y)-(aF.positionScreen.y-aD.positionScreen.y)*(aB.positionScreen.x-aD.positionScreen.x)<0;if(af===THREE.DoubleSide||ai===(af===THREE.FrontSide)){j=k();j.v1.copy(aH);j.v2.copy(aF);j.v3.copy(aD);j.v4.copy(aB)}else{continue}}else{continue}}}j.normalModel.copy(ab.normal);if(ai===false&&(af===THREE.BackSide||af===THREE.DoubleSide)){j.normalModel.negate()}j.normalModel.applyMatrix3(r).normalize();j.normalModelView.copy(j.normalModel).applyMatrix3(o);j.centroidModel.copy(ab.centroid).applyMatrix4(C);Z=ab.vertexNormals;for(ax=0,aE=Z.length;ax<aE;ax++){var aG=j.vertexNormalsModel[ax];aG.copy(Z[ax]);if(ai===false&&(af===THREE.BackSide||af===THREE.DoubleSide)){aG.negate()}aG.applyMatrix3(r).normalize();var aA=j.vertexNormalsModelView[ax];aA.copy(aG).applyMatrix3(o)}j.vertexNormalsLength=Z.length;for(aC=0,ak=aq.length;aC<ak;aC++){ar=aq[aC][az];if(ar===undefined){continue}for(av=0,ap=ar.length;av<ap;av++){j.uvs[aC][av]=ar[av]}}j.color=ab.color;j.material=ay;d.copy(j.centroidModel).applyProjection(f);j.z=d.z;I.elements.push(j)}}else{if(at instanceof THREE.Line){E.multiplyMatrices(f,C);X=at.geometry.vertices;aH=y();aH.positionScreen.copy(X[0]).applyMatrix4(E);var an=at.type===THREE.LinePieces?2:1;for(au=1,ae=X.length;au<ae;au++){aH=y();aH.positionScreen.copy(X[au]).applyMatrix4(E);if((au+1)%an>0){continue}aF=e[c-2];v.copy(aH.positionScreen);g.copy(aF.positionScreen);if(A(v,g)===true){v.multiplyScalar(1/v.w);g.multiplyScalar(1/g.w);h=G();h.v1.positionScreen.copy(v);h.v2.positionScreen.copy(g);h.z=Math.max(v.z,g.z);h.material=at.material;I.elements.push(h)}}}}}for(aw=0,ao=I.sprites.length;aw<ao;aw++){at=I.sprites[aw].object;C=at.matrixWorld;if(at instanceof THREE.Particle){H.set(C.elements[12],C.elements[13],C.elements[14],1);H.applyMatrix4(f);H.z/=H.w;if(H.z>0&&H.z<1){P=D();P.object=at;P.x=H.x/H.w;P.y=H.y/H.w;P.z=H.z;P.rotation=at.rotation.z;P.scale.x=at.scale.x*Math.abs(P.x-(H.x+ag.projectionMatrix.elements[0])/(H.w+ag.projectionMatrix.elements[12]));P.scale.y=at.scale.y*Math.abs(P.y-(H.y+ag.projectionMatrix.elements[5])/(H.w+ag.projectionMatrix.elements[13]));P.material=at.material;I.elements.push(P)}}}if(Y===true){I.elements.sort(s)}return I};function m(){if(F===n){var X=new THREE.RenderableObject();M.push(X);n++;F++;return X}return M[F++]}function y(){if(c===b){var X=new THREE.RenderableVertex();e.push(X);b++;c++;return X}return e[c++]}function l(){if(O===i){var X=new THREE.RenderableFace3();L.push(X);i++;O++;return X}return L[O++]}function k(){if(q===B){var X=new THREE.RenderableFace4();u.push(X);B++;q++;return X}return u[q++]}function G(){if(S===x){var X=new THREE.RenderableLine();U.push(X);x++;S++;return X}return U[S++]}function D(){if(p===K){var X=new THREE.RenderableParticle();w.push(X);K++;p++;return X}return w[p++]}function s(Y,X){return X.z-Y.z}function A(ab,aa){var Z=0,ae=1,ac=ab.z+ab.w,Y=aa.z+aa.w,X=-ab.z+ab.w,ad=-aa.z+aa.w;if(ac>=0&&Y>=0&&X>=0&&ad>=0){return true}else{if((ac<0&&Y<0)||(X<0&&ad<0)){return false}else{if(ac<0){Z=Math.max(Z,ac/(ac-Y))}else{if(Y<0){ae=Math.min(ae,ac/(ac-Y))}}if(X<0){Z=Math.max(Z,X/(X-ad))}else{if(ad<0){ae=Math.min(ae,X/(X-ad))}}if(ae<Z){return false}else{ab.lerp(aa,Z);aa.lerp(ab,1-ae);return true}}}}};THREE.Face3=function(f,e,i,h,g,d){this.a=f;this.b=e;this.c=i;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3();this.vertexNormals=h instanceof Array?h:[];this.color=g instanceof THREE.Color?g:new THREE.Color();this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=d!==undefined?d:0;this.centroid=new THREE.Vector3()};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var c=new THREE.Face3(this.a,this.b,this.c);c.normal.copy(this.normal);c.color.copy(this.color);c.centroid.copy(this.centroid);c.materialIndex=this.materialIndex;var b,a;for(b=0,a=this.vertexNormals.length;b<a;b++){c.vertexNormals[b]=this.vertexNormals[b].clone()}for(b=0,a=this.vertexColors.length;b<a;b++){c.vertexColors[b]=this.vertexColors[b].clone()}for(b=0,a=this.vertexTangents.length;b<a;b++){c.vertexTangents[b]=this.vertexTangents[b].clone()}return c}};THREE.Face4=function(g,f,k,j,i,h,e){this.a=g;this.b=f;this.c=k;this.d=j;this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3();this.vertexNormals=i instanceof Array?i:[];this.color=h instanceof THREE.Color?h:new THREE.Color();this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materialIndex=e!==undefined?e:0;this.centroid=new THREE.Vector3()};THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var c=new THREE.Face4(this.a,this.b,this.c,this.d);c.normal.copy(this.normal);c.color.copy(this.color);c.centroid.copy(this.centroid);c.materialIndex=this.materialIndex;var b,a;for(b=0,a=this.vertexNormals.length;b<a;b++){c.vertexNormals[b]=this.vertexNormals[b].clone()}for(b=0,a=this.vertexColors.length;b<a;b++){c.vertexColors[b]=this.vertexColors[b].clone()}for(b=0,a=this.vertexTangents.length;b<a;b++){c.vertexTangents[b]=this.vertexTangents[b].clone()}return c}};THREE.Geometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=false;this.dynamic=true;this.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.tangentsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.buffersNeedUpdate=false};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(b){var h=new THREE.Matrix3().getInverse(b).transpose();for(var e=0,a=this.vertices.length;e<a;e++){var g=this.vertices[e];g.applyMatrix4(b)}for(var e=0,a=this.faces.length;e<a;e++){var f=this.faces[e];f.normal.applyMatrix3(h).normalize();for(var c=0,d=f.vertexNormals.length;c<d;c++){f.vertexNormals[c].applyMatrix3(h).normalize()}f.centroid.applyMatrix4(b)}},computeCentroids:function(){var c,b,a;for(c=0,b=this.faces.length;c<b;c++){a=this.faces[c];a.centroid.set(0,0,0);if(a instanceof THREE.Face3){a.centroid.add(this.vertices[a.a]);a.centroid.add(this.vertices[a.b]);a.centroid.add(this.vertices[a.c]);a.centroid.divideScalar(3)}else{if(a instanceof THREE.Face4){a.centroid.add(this.vertices[a.a]);a.centroid.add(this.vertices[a.b]);a.centroid.add(this.vertices[a.c]);a.centroid.add(this.vertices[a.d]);a.centroid.divideScalar(4)}}}},computeFaceNormals:function(){var a=new THREE.Vector3(),i=new THREE.Vector3();for(var h=0,g=this.faces.length;h<g;h++){var e=this.faces[h];var d=this.vertices[e.a];var c=this.vertices[e.b];var b=this.vertices[e.c];a.subVectors(b,c);i.subVectors(d,c);a.cross(i);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(g){var m,d,h,l,k,j;if(this.__tmpVertices===undefined){this.__tmpVertices=new Array(this.vertices.length);j=this.__tmpVertices;for(m=0,d=this.vertices.length;m<d;m++){j[m]=new THREE.Vector3()}for(h=0,l=this.faces.length;h<l;h++){k=this.faces[h];if(k instanceof THREE.Face3){k.vertexNormals=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()]}else{if(k instanceof THREE.Face4){k.vertexNormals=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()]}}}}else{j=this.__tmpVertices;for(m=0,d=this.vertices.length;m<d;m++){j[m].set(0,0,0)}}if(g){var c,b,a,q;var e=new THREE.Vector3(),p=new THREE.Vector3(),o=new THREE.Vector3(),n=new THREE.Vector3(),i=new THREE.Vector3();for(h=0,l=this.faces.length;h<l;h++){k=this.faces[h];if(k instanceof THREE.Face3){c=this.vertices[k.a];b=this.vertices[k.b];a=this.vertices[k.c];e.subVectors(a,b);p.subVectors(c,b);e.cross(p);j[k.a].add(e);j[k.b].add(e);j[k.c].add(e)}else{if(k instanceof THREE.Face4){c=this.vertices[k.a];b=this.vertices[k.b];a=this.vertices[k.c];q=this.vertices[k.d];o.subVectors(q,b);p.subVectors(c,b);o.cross(p);j[k.a].add(o);j[k.b].add(o);j[k.d].add(o);n.subVectors(q,a);i.subVectors(b,a);n.cross(i);j[k.b].add(n);j[k.c].add(n);j[k.d].add(n)}}}}else{for(h=0,l=this.faces.length;h<l;h++){k=this.faces[h];if(k instanceof THREE.Face3){j[k.a].add(k.normal);j[k.b].add(k.normal);j[k.c].add(k.normal)}else{if(k instanceof THREE.Face4){j[k.a].add(k.normal);j[k.b].add(k.normal);j[k.c].add(k.normal);j[k.d].add(k.normal)}}}}for(m=0,d=this.vertices.length;m<d;m++){j[m].normalize()}for(h=0,l=this.faces.length;h<l;h++){k=this.faces[h];if(k instanceof THREE.Face3){k.vertexNormals[0].copy(j[k.a]);k.vertexNormals[1].copy(j[k.b]);k.vertexNormals[2].copy(j[k.c])}else{if(k instanceof THREE.Face4){k.vertexNormals[0].copy(j[k.a]);k.vertexNormals[1].copy(j[k.b]);k.vertexNormals[2].copy(j[k.c]);k.vertexNormals[3].copy(j[k.d])}}}},computeMorphNormals:function(){var e,l,g,m,h;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];if(!h.__originalFaceNormal){h.__originalFaceNormal=h.normal.clone()}else{h.__originalFaceNormal.copy(h.normal)}if(!h.__originalVertexNormals){h.__originalVertexNormals=[]}for(e=0,l=h.vertexNormals.length;e<l;e++){if(!h.__originalVertexNormals[e]){h.__originalVertexNormals[e]=h.vertexNormals[e].clone()}else{h.__originalVertexNormals[e].copy(h.vertexNormals[e])}}}var c=new THREE.Geometry();c.faces=this.faces;for(e=0,l=this.morphTargets.length;e<l;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];var d=this.morphNormals[e].faceNormals;var a=this.morphNormals[e].vertexNormals;var k,b;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];k=new THREE.Vector3();if(h instanceof THREE.Face3){b={a:new THREE.Vector3(),b:new THREE.Vector3(),c:new THREE.Vector3()}}else{b={a:new THREE.Vector3(),b:new THREE.Vector3(),c:new THREE.Vector3(),d:new THREE.Vector3()}}d.push(k);a.push(b)}}var j=this.morphNormals[e];c.vertices=this.morphTargets[e].vertices;c.computeFaceNormals();c.computeVertexNormals();var k,b;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];k=j.faceNormals[g];b=j.vertexNormals[g];k.copy(h.normal);if(h instanceof THREE.Face3){b.a.copy(h.vertexNormals[0]);b.b.copy(h.vertexNormals[1]);b.c.copy(h.vertexNormals[2])}else{b.a.copy(h.vertexNormals[0]);b.b.copy(h.vertexNormals[1]);b.c.copy(h.vertexNormals[2]);b.d.copy(h.vertexNormals[3])}}}for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];h.normal=h.__originalFaceNormal;h.vertexNormals=h.__originalVertexNormals}},computeTangents:function(){var L,m,B,k,K,p,z,g,o,H,E,D,e,d,c,j,h,S,R,x,u,O,N,s,q,F,C,b,Q=[],P=[],a=new THREE.Vector3(),l=new THREE.Vector3(),I=new THREE.Vector3(),M=new THREE.Vector3(),J=new THREE.Vector3(),A;for(B=0,k=this.vertices.length;B<k;B++){Q[B]=new THREE.Vector3();P[B]=new THREE.Vector3()}function y(v,i,f,w,t,r,n){H=v.vertices[i];E=v.vertices[f];D=v.vertices[w];e=o[t];d=o[r];c=o[n];j=E.x-H.x;h=D.x-H.x;S=E.y-H.y;R=D.y-H.y;x=E.z-H.z;u=D.z-H.z;O=d.x-e.x;N=c.x-e.x;s=d.y-e.y;q=c.y-e.y;F=1/(O*q-N*s);a.set((q*j-s*h)*F,(q*S-s*R)*F,(q*x-s*u)*F);l.set((O*h-N*j)*F,(O*R-N*S)*F,(O*u-N*x)*F);Q[i].add(a);Q[f].add(a);Q[w].add(a);P[i].add(l);P[f].add(l);P[w].add(l)}for(L=0,m=this.faces.length;L<m;L++){g=this.faces[L];o=this.faceVertexUvs[0][L];if(g instanceof THREE.Face3){y(this,g.a,g.b,g.c,0,1,2)}else{if(g instanceof THREE.Face4){y(this,g.a,g.b,g.d,0,1,3);y(this,g.b,g.c,g.d,1,2,3)}}}var G=["a","b","c","d"];for(L=0,m=this.faces.length;L<m;L++){g=this.faces[L];for(K=0;K<g.vertexNormals.length;K++){J.copy(g.vertexNormals[K]);z=g[G[K]];C=Q[z];I.copy(C);I.sub(J.multiplyScalar(J.dot(C))).normalize();M.crossVectors(g.vertexNormals[K],C);b=M.dot(P[z]);A=(b<0)?-1:1;g.vertexTangents[K]=new THREE.Vector4(I.x,I.y,I.z,A)}}this.hasTangents=true},computeLineDistances:function(){var e=0;var b=this.vertices;for(var c=0,a=b.length;c<a;c++){if(c>0){e+=b[c].distanceTo(b[c-1])}this.lineDistances[c]=e}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3()}this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere()}this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var b={};var a=[],y=[];var f,z;var h=4;var w=Math.pow(10,h);var s,e,d;var c,q,r,t,g;this.__tmpVertices=undefined;for(s=0,e=this.vertices.length;s<e;s++){f=this.vertices[s];z=[Math.round(f.x*w),Math.round(f.y*w),Math.round(f.z*w)].join("_");if(b[z]===undefined){b[z]=s;a.push(this.vertices[s]);y[s]=a.length-1}else{y[s]=y[b[z]]}}var m=[];for(s=0,e=this.faces.length;s<e;s++){d=this.faces[s];if(d instanceof THREE.Face3){d.a=y[d.a];d.b=y[d.b];d.c=y[d.c];c=[d.a,d.b,d.c];var p=-1;for(var o=0;o<3;o++){if(c[o]==c[(o+1)%3]){p=o;m.push(s);break}}}else{if(d instanceof THREE.Face4){d.a=y[d.a];d.b=y[d.b];d.c=y[d.c];d.d=y[d.d];c=[d.a,d.b,d.c,d.d];var p=-1;for(var o=0;o<4;o++){if(c[o]==c[(o+1)%4]){if(p>=0){m.push(s)}p=o}}if(p>=0){c.splice(p,1);var x=new THREE.Face3(c[0],c[1],c[2],d.normal,d.color,d.materialIndex);for(r=0,t=this.faceVertexUvs.length;r<t;r++){g=this.faceVertexUvs[r][s];if(g){g.splice(p,1)}}if(d.vertexNormals&&d.vertexNormals.length>0){x.vertexNormals=d.vertexNormals;x.vertexNormals.splice(p,1)}if(d.vertexColors&&d.vertexColors.length>0){x.vertexColors=d.vertexColors;x.vertexColors.splice(p,1)}this.faces[s]=x}}}}for(s=m.length-1;s>=0;s--){this.faces.splice(s,1);for(r=0,t=this.faceVertexUvs.length;r<t;r++){this.faceVertexUvs[r].splice(s,1)}}var l=this.vertices.length-a.length;this.vertices=a;return l},clone:function(){var k=new THREE.Geometry();var h=this.vertices;for(var g=0,l=h.length;g<l;g++){k.vertices.push(h[g].clone())}var c=this.faces;for(var g=0,l=c.length;g<l;g++){k.faces.push(c[g].clone())}var e=this.faceVertexUvs[0];for(var g=0,l=e.length;g<l;g++){var b=e[g],a=[];for(var d=0,f=b.length;d<f;d++){a.push(new THREE.Vector2(b[d].x,b[d].y))}k.faceVertexUvs[0].push(a)}return k},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=false;this.offsets=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=false;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(b){var a;var c;if(this.attributes.position){a=this.attributes.position.array}if(this.attributes.normal){c=this.attributes.normal.array}if(a!==undefined){b.multiplyVector3Array(a);this.verticesNeedUpdate=true}if(c!==undefined){var d=new THREE.Matrix3();d.getInverse(b).transpose();d.multiplyVector3Array(c);this.normalizeNormals();this.normalsNeedUpdate=true}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3()}var b=this.attributes.position.array;if(b){var f=this.boundingBox;var a,g,e;if(b.length>=3){f.min.x=f.max.x=b[0];f.min.y=f.max.y=b[1];f.min.z=f.max.z=b[2]}for(var d=3,c=b.length;d<c;d+=3){a=b[d];g=b[d+1];e=b[d+2];if(a<f.min.x){f.min.x=a}else{if(a>f.max.x){f.max.x=a}}if(g<f.min.y){f.min.y=g}else{if(g>f.max.y){f.max.y=g}}if(e<f.min.z){f.min.z=e}else{if(e>f.max.z){f.max.z=e}}}}if(b===undefined||b.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere()}var c=this.attributes.position.array;if(c){var e,b=0;var a,h,g;for(var f=0,d=c.length;f<d;f+=3){a=c[f];h=c[f+1];g=c[f+2];e=a*a+h*h+g*g;if(e>b){b=e}}this.boundingSphere.radius=Math.sqrt(b)}},computeVertexNormals:function(){if(this.attributes.position){var t,k;var q,v;var A=this.attributes.position.array.length;if(this.attributes.normal===undefined){this.attributes.normal={itemSize:3,array:new Float32Array(A),numItems:A}}else{for(t=0,k=this.attributes.normal.array.length;t<k;t++){this.attributes.normal.array[t]=0}}var f=this.attributes.position.array;var m=this.attributes.normal.array;var w,u,s,l,h,g,r=new THREE.Vector3(),p=new THREE.Vector3(),o=new THREE.Vector3(),n=new THREE.Vector3(),B=new THREE.Vector3();if(this.attributes.index){var c=this.attributes.index.array;var b=this.offsets;for(q=0,v=b.length;q<v;++q){var a=b[q].start;var e=b[q].count;var d=b[q].index;for(t=a,k=a+e;t<k;t+=3){w=d+c[t];u=d+c[t+1];s=d+c[t+2];l=f[w*3];h=f[w*3+1];g=f[w*3+2];r.set(l,h,g);l=f[u*3];h=f[u*3+1];g=f[u*3+2];p.set(l,h,g);l=f[s*3];h=f[s*3+1];g=f[s*3+2];o.set(l,h,g);n.subVectors(o,p);B.subVectors(r,p);n.cross(B);m[w*3]+=n.x;m[w*3+1]+=n.y;m[w*3+2]+=n.z;m[u*3]+=n.x;m[u*3+1]+=n.y;m[u*3+2]+=n.z;m[s*3]+=n.x;m[s*3+1]+=n.y;m[s*3+2]+=n.z}}}else{for(t=0,k=f.length;t<k;t+=9){l=f[t];h=f[t+1];g=f[t+2];r.set(l,h,g);l=f[t+3];h=f[t+4];g=f[t+5];p.set(l,h,g);l=f[t+6];h=f[t+7];g=f[t+8];o.set(l,h,g);n.subVectors(o,p);B.subVectors(r,p);n.cross(B);m[t]=n.x;m[t+1]=n.y;m[t+2]=n.z;m[t+3]=n.x;m[t+4]=n.y;m[t+5]=n.z;m[t+6]=n.x;m[t+7]=n.y;m[t+8]=n.z}}this.normalizeNormals();this.normalsNeedUpdate=true}},normalizeNormals:function(){var d=this.attributes.normal.array;var a,g,e,f;for(var c=0,b=d.length;c<b;c+=3){a=d[c];g=d[c+1];e=d[c+2];f=1/Math.sqrt(a*a+g*g+e*e);d[c]*=f;d[c+1]*=f;d[c+2]*=f}},computeTangents:function(){if(this.attributes.index===undefined||this.attributes.position===undefined||this.attributes.normal===undefined||this.attributes.uv===undefined){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");return}var f=this.attributes.index.array;var s=this.attributes.position.array;var y=this.attributes.normal.array;var Q=this.attributes.uv.array;var x=s.length/3;if(this.attributes.tangent===undefined){var z=4*x;this.attributes.tangent={itemSize:4,array:new Float32Array(z),numItems:z}}var G=this.attributes.tangent.array;var ak=[],aj=[];for(var ad=0;ad<x;ad++){ak[ad]=new THREE.Vector3();aj[ad]=new THREE.Vector3()}var m,ab,F,l,aa,E,h,Y,C,g,X,e,V,d,T,v,u,am,al,O,N,ai,ah,M,L,U;var o=new THREE.Vector3(),I=new THREE.Vector3();function P(j,i,k){m=s[j*3];ab=s[j*3+1];F=s[j*3+2];l=s[i*3];aa=s[i*3+1];E=s[i*3+2];h=s[k*3];Y=s[k*3+1];C=s[k*3+2];g=Q[j*2];X=Q[j*2+1];e=Q[i*2];V=Q[i*2+1];d=Q[k*2];T=Q[k*2+1];v=l-m;u=h-m;am=aa-ab;al=Y-ab;O=E-F;N=C-F;ai=e-g;ah=d-g;M=V-X;L=T-X;U=1/(ai*L-ah*M);o.set((L*v-M*u)*U,(L*am-M*al)*U,(L*O-M*N)*U);I.set((ai*u-ah*v)*U,(ai*al-ah*am)*U,(ai*N-ah*O)*U);ak[j].add(o);ak[i].add(o);ak[k].add(o);aj[j].add(I);aj[i].add(I);aj[k].add(I)}var af,J;var ae,q;var c,b,a;var B=this.offsets;for(ae=0,q=B.length;ae<q;++ae){var D=B[ae].start;var W=B[ae].count;var K=B[ae].index;for(af=D,J=D+W;af<J;af+=3){c=K+f[af];b=K+f[af+1];a=K+f[af+2];P(c,b,a)}}var Z=new THREE.Vector3(),ag=new THREE.Vector3();var ac=new THREE.Vector3(),H=new THREE.Vector3();var R,S,p;function A(i){ac.x=y[i*3];ac.y=y[i*3+1];ac.z=y[i*3+2];H.copy(ac);S=ak[i];Z.copy(S);Z.sub(ac.multiplyScalar(ac.dot(S))).normalize();ag.crossVectors(H,S);p=ag.dot(aj[i]);R=(p<0)?-1:1;G[i*4]=Z.x;G[i*4+1]=Z.y;G[i*4+2]=Z.z;G[i*4+3]=R}for(ae=0,q=B.length;ae<q;++ae){var D=B[ae].start;var W=B[ae].count;var K=B[ae].index;for(af=D,J=D+W;af<J;af+=3){c=K+f[af];b=K+f[af+1];a=K+f[af+2];A(c);A(b);A(a)}}this.hasTangents=true;this.tangentsNeedUpdate=true},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4();this.projectionMatrix=new THREE.Matrix4();this.projectionMatrixInverse=new THREE.Matrix4()};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);if(this.rotationAutoUpdate===true){if(this.useQuaternion===false){this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)}else{this.quaternion.copy(this.matrix.decompose()[1])}}};THREE.OrthographicCamera=function(f,c,e,b,d,a){THREE.Camera.call(this);this.left=f;this.right=c;this.top=e;this.bottom=b;this.near=(d!==undefined)?d:0.1;this.far=(a!==undefined)?a:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(c,b,d,a){THREE.Camera.call(this);this.fov=c!==undefined?c:50;this.aspect=b!==undefined?b:1;this.near=d!==undefined?d:0.1;this.far=a!==undefined?a:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(b,a){if(a===undefined){a=24}this.fov=2*THREE.Math.radToDeg(Math.atan(a/(b*2)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(e,c,b,f,d,a){this.fullWidth=e;this.fullHeight=c;this.x=b;this.y=f;this.width=d;this.height=a;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var c=this.fullWidth/this.fullHeight;var g=Math.tan(THREE.Math.degToRad(this.fov*0.5))*this.near;var b=-g;var f=c*b;var d=c*g;var e=Math.abs(d-f);var a=Math.abs(g-b);this.projectionMatrix.makeFrustum(f+this.x*e/this.fullWidth,f+(this.x+this.width)*e/this.fullWidth,g-(this.y+this.height)*a/this.fullHeight,g-this.y*a/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight=function(b,a){THREE.Light.call(this,b);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=(a!==undefined)?a:1;this.width=1;this.height=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(b,a){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D();this.intensity=(a!==undefined)?a:1;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraRight=500;this.shadowCameraTop=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowCascade=false;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight=function(b,c,a){THREE.Light.call(this,b);this.groundColor=new THREE.Color(c);this.position=new THREE.Vector3(0,100,0);this.intensity=(a!==undefined)?a:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(b,a,c){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,0,0);this.intensity=(a!==undefined)?a:1;this.distance=(c!==undefined)?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight=function(b,a,e,d,c){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D();this.intensity=(a!==undefined)?a:1;this.distance=(e!==undefined)?e:0;this.angle=(d!==undefined)?d:Math.PI/2;this.exponent=(c!==undefined)?c:10;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.showStatus=a;this.statusDomElement=a?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1000;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";if(a.total){b+=(100*a.loaded/a.total).toFixed(0)+"%"}else{b+=(a.loaded/1000).toFixed(2)+" KB"}this.statusDomElement.innerHTML=b},extractUrlBase:function(a){var b=a.split("/");b.pop();return(b.length<1?".":b.join("/"))+"/"},initMaterials:function(a,c){var d=[];for(var b=0;b<a.length;++b){d[b]=THREE.Loader.prototype.createMaterial(a[b],c)}return d},needsTangents:function(b){for(var d=0,c=b.length;d<c;d++){var a=b[d];if(a instanceof THREE.ShaderMaterial){return true}}return false},createMaterial:function(f,c){var h=this;function e(q){var m=Math.log(q)/Math.LN2;return Math.floor(m)==m}function a(q){var m=Math.log(q)/Math.LN2;return Math.pow(2,Math.round(m))}function n(q,m){var r=new Image();r.onload=function(){if(!e(this.width)||!e(this.height)){var t=a(this.width);var s=a(this.height);q.image.width=t;q.image.height=s;q.image.getContext("2d").drawImage(this,0,0,t,s)}else{q.image=this}q.needsUpdate=true};r.crossOrigin=h.crossOrigin;r.src=m}function j(x,q,v,r,w,s,m){var u=/\.dds$/i.test(v);var t=c+"/"+v;if(u){var y=THREE.ImageUtils.loadCompressedTexture(t);x[q]=y}else{var y=document.createElement("canvas");x[q]=new THREE.Texture(y)}x[q].sourceFile=v;if(r){x[q].repeat.set(r[0],r[1]);if(r[0]!==1){x[q].wrapS=THREE.RepeatWrapping}if(r[1]!==1){x[q].wrapT=THREE.RepeatWrapping}}if(w){x[q].offset.set(w[0],w[1])}if(s){var z={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(z[s[0]]!==undefined){x[q].wrapS=z[s[0]]}if(z[s[1]]!==undefined){x[q].wrapT=z[s[1]]}}if(m){x[q].anisotropy=m}if(!u){n(x[q],t)}}function b(m){return(m[0]*255<<16)+(m[1]*255<<8)+m[2]*255}var d="MeshLambertMaterial";var l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(f.shading){var k=f.shading.toLowerCase();if(k==="phong"){d="MeshPhongMaterial"}else{if(k==="basic"){d="MeshBasicMaterial"}}}if(f.blending!==undefined&&THREE[f.blending]!==undefined){l.blending=THREE[f.blending]}if(f.transparent!==undefined||f.opacity<1){l.transparent=f.transparent}if(f.depthTest!==undefined){l.depthTest=f.depthTest}if(f.depthWrite!==undefined){l.depthWrite=f.depthWrite}if(f.visible!==undefined){l.visible=f.visible}if(f.flipSided!==undefined){l.side=THREE.BackSide}if(f.doubleSided!==undefined){l.side=THREE.DoubleSide}if(f.wireframe!==undefined){l.wireframe=f.wireframe}if(f.vertexColors!==undefined){if(f.vertexColors==="face"){l.vertexColors=THREE.FaceColors}else{if(f.vertexColors){l.vertexColors=THREE.VertexColors}}}if(f.colorDiffuse){l.color=b(f.colorDiffuse)}else{if(f.DbgColor){l.color=f.DbgColor}}if(f.colorSpecular){l.specular=b(f.colorSpecular)}if(f.colorAmbient){l.ambient=b(f.colorAmbient)}if(f.transparency){l.opacity=f.transparency}if(f.specularCoef){l.shininess=f.specularCoef}if(f.mapDiffuse&&c){j(l,"map",f.mapDiffuse,f.mapDiffuseRepeat,f.mapDiffuseOffset,f.mapDiffuseWrap,f.mapDiffuseAnisotropy)}if(f.mapLight&&c){j(l,"lightMap",f.mapLight,f.mapLightRepeat,f.mapLightOffset,f.mapLightWrap,f.mapLightAnisotropy)}if(f.mapBump&&c){j(l,"bumpMap",f.mapBump,f.mapBumpRepeat,f.mapBumpOffset,f.mapBumpWrap,f.mapBumpAnisotropy)}if(f.mapNormal&&c){j(l,"normalMap",f.mapNormal,f.mapNormalRepeat,f.mapNormalOffset,f.mapNormalWrap,f.mapNormalAnisotropy)}if(f.mapSpecular&&c){j(l,"specularMap",f.mapSpecular,f.mapSpecularRepeat,f.mapSpecularOffset,f.mapSpecularWrap,f.mapSpecularAnisotropy)}if(f.mapBumpScale){l.bumpScale=f.mapBumpScale}if(f.mapNormal){var g=THREE.ShaderLib.normalmap;var o=THREE.UniformsUtils.clone(g.uniforms);o.tNormal.value=l.normalMap;if(f.mapNormalFactor){o.uNormalScale.value.set(f.mapNormalFactor,f.mapNormalFactor)}if(l.map){o.tDiffuse.value=l.map;o.enableDiffuse.value=true}if(l.specularMap){o.tSpecular.value=l.specularMap;o.enableSpecular.value=true}if(l.lightMap){o.tAO.value=l.lightMap;o.enableAO.value=true}o.uDiffuseColor.value.setHex(l.color);o.uSpecularColor.value.setHex(l.specular);o.uAmbientColor.value.setHex(l.ambient);o.uShininess.value=l.shininess;if(l.opacity!==undefined){o.uOpacity.value=l.opacity}var p={fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:o,lights:true,fog:true};var i=new THREE.ShaderMaterial(p);if(l.transparent){i.transparent=true}}else{var i=new THREE[d](l)}if(f.DbgName!==undefined){i.name=f.DbgName}return i}};THREE.ImageLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,c){var b=this;if(c===undefined){c=new Image()}c.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);if(b.crossOrigin){c.crossOrigin=b.crossOrigin}c.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=false};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,d,c){var b=this;c=c&&(typeof c==="string")?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,d,c)};THREE.JSONLoader.prototype.loadAjaxJSON=function(b,a,g,e,d){var f=new XMLHttpRequest();var c=0;f.onreadystatechange=function(){if(f.readyState===f.DONE){if(f.status===200||f.status===0){if(f.responseText){var h=JSON.parse(f.responseText);b.createModel(h,g,e)}else{console.warn("THREE.JSONLoader: ["+a+"] seems to be unreachable or file there is empty")}b.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load ["+a+"] ["+f.status+"]")}}else{if(f.readyState===f.LOADING){if(d){if(c===0){c=f.getResponseHeader("Content-Length")}d({total:c,loaded:f.responseText.length})}}else{if(f.readyState===f.HEADERS_RECEIVED){c=f.getResponseHeader("Content-Length")}}}};f.open("GET",a,true);f.withCredentials=this.withCredentials;f.send(null)};THREE.JSONLoader.prototype.createModel=function(j,h,c){var i=this,e=new THREE.Geometry(),d=(j.scale!==undefined)?1/j.scale:1;b(d);f();a(d);e.computeCentroids();e.computeFaceNormals();function b(S){function s(v,u){return v&(1<<u)}var M,L,A,q,p,K,o,P,D,t,m,B,E,Q,k,O,J,H,F,N,w,I,R,n,y,C,z,l=j.faces,r=j.vertices,G=j.normals,x=j.colors,T=0;for(M=0;M<j.uvs.length;M++){if(j.uvs[M].length){T++}}for(M=0;M<T;M++){e.faceUvs[M]=[];e.faceVertexUvs[M]=[]}q=0;p=r.length;while(q<p){N=new THREE.Vector3();N.x=r[q++]*S;N.y=r[q++]*S;N.z=r[q++]*S;e.vertices.push(N)}q=0;p=l.length;while(q<p){m=l[q++];B=s(m,0);E=s(m,1);Q=s(m,2);k=s(m,3);O=s(m,4);J=s(m,5);H=s(m,6);F=s(m,7);if(B){w=new THREE.Face4();w.a=l[q++];w.b=l[q++];w.c=l[q++];w.d=l[q++];K=4}else{w=new THREE.Face3();w.a=l[q++];w.b=l[q++];w.c=l[q++];K=3}if(E){t=l[q++];w.materialIndex=t}A=e.faces.length;if(Q){for(M=0;M<T;M++){n=j.uvs[M];D=l[q++];C=n[D*2];z=n[D*2+1];e.faceUvs[M][A]=new THREE.Vector2(C,z)}}if(k){for(M=0;M<T;M++){n=j.uvs[M];y=[];for(L=0;L<K;L++){D=l[q++];C=n[D*2];z=n[D*2+1];y[L]=new THREE.Vector2(C,z)}e.faceVertexUvs[M][A]=y}}if(O){P=l[q++]*3;R=new THREE.Vector3();R.x=G[P++];R.y=G[P++];R.z=G[P];w.normal=R}if(J){for(M=0;M<K;M++){P=l[q++]*3;R=new THREE.Vector3();R.x=G[P++];R.y=G[P++];R.z=G[P];w.vertexNormals.push(R)}}if(H){o=l[q++];I=new THREE.Color(x[o]);w.color=I}if(F){for(M=0;M<K;M++){o=l[q++];I=new THREE.Color(x[o]);w.vertexColors.push(I)}}e.faces.push(w)}}function f(){var m,k,t,q,p,u,s,r,o,n;if(j.skinWeights){for(m=0,k=j.skinWeights.length;m<k;m+=2){t=j.skinWeights[m];q=j.skinWeights[m+1];p=0;u=0;e.skinWeights.push(new THREE.Vector4(t,q,p,u))}}if(j.skinIndices){for(m=0,k=j.skinIndices.length;m<k;m+=2){s=j.skinIndices[m];r=j.skinIndices[m+1];o=0;n=0;e.skinIndices.push(new THREE.Vector4(s,r,o,n))}}e.bones=j.bones;e.animation=j.animation}function a(n){if(j.morphTargets!==undefined){var q,o,x,m,s,y;for(q=0,o=j.morphTargets.length;q<o;q++){e.morphTargets[q]={};e.morphTargets[q].name=j.morphTargets[q].name;e.morphTargets[q].vertices=[];s=e.morphTargets[q].vertices;y=j.morphTargets[q].vertices;for(x=0,m=y.length;x<m;x+=3){var r=new THREE.Vector3();r.x=y[x]*n;r.y=y[x+1]*n;r.z=y[x+2]*n;s.push(r)}}}if(j.morphColors!==undefined){var q,o,t,w,u,k,p;for(q=0,o=j.morphColors.length;q<o;q++){e.morphColors[q]={};e.morphColors[q].name=j.morphColors[q].name;e.morphColors[q].colors=[];u=e.morphColors[q].colors;k=j.morphColors[q].colors;for(t=0,w=k.length;t<w;t+=3){p=new THREE.Color(16755200);p.setRGB(k[t],k[t+1],k[t+2]);u.push(p)}}}}var g=this.initMaterials(j.materials,c);if(this.needsTangents(g)){e.computeTangents()}h(e,g)};THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var c=this;var a=0;var d=0;var b=function(e){a++;c.dispatchEvent({type:"progress",loaded:a,total:d});if(a===d){c.dispatchEvent({type:"load"})}};this.add=function(e){d++;e.addEventListener("load",b,false)}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;THREE.SceneLoader.prototype.load=function(b,a){var c=this;var d=new XMLHttpRequest();d.onreadystatechange=function(){if(d.readyState===4){if(d.status===200||d.status===0){var e=JSON.parse(d.responseText);c.parse(e,a,b)}else{console.error("THREE.SceneLoader: Couldn't load ["+b+"] ["+d.status+"]")}}};d.open("GET",b,true);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};THREE.SceneLoader.prototype.addHierarchyHandler=function(a,b){this.hierarchyHandlerMap[a]={loaderClass:b}};THREE.SceneLoader.prototype.parse=function(T,a,A){var ag=this;var d=THREE.Loader.prototype.extractUrlBase(A);var ah,aw,ap,x,ak,p,y,ae,af,f,e,ar,t,M,ax;var aa=[];var v=T;for(var aq in this.geometryHandlerMap){var g=this.geometryHandlerMap[aq]["loaderClass"];this.geometryHandlerMap[aq]["loaderObject"]=new g()}for(var aq in this.hierarchyHandlerMap){var g=this.hierarchyHandlerMap[aq]["loaderClass"];this.hierarchyHandlerMap[aq]["loaderObject"]=new g()}e=0;ar=0;ax={scene:new THREE.Scene(),geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(v.transform){var ai=v.transform.position,I=v.transform.rotation,an=v.transform.scale;if(ai){ax.scene.position.set(ai[0],ai[1],ai[2])}if(I){ax.scene.rotation.set(I[0],I[1],I[2])}if(an){ax.scene.scale.set(an[0],an[1],an[2])}if(ai||I||an){ax.scene.updateMatrix();ax.scene.updateMatrixWorld()}}function D(i,n){if(n=="relativeToHTML"){return i}else{return d+"/"+i}}function au(){ac(ax.scene,v.objects)}function ac(aK,aD){var aO,aR,aF,aI,n,aA;for(var aB in aD){if(ax.objects[aB]===undefined){var aG=aD[aB];var aP=null;if(aG.type&&(aG.type in ag.hierarchyHandlerMap)){if(aG.loading===undefined){var aC={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1};var aJ={};for(var aH in aG){if(!(aH in aC)){aJ[aH]=aG[aH]}}aw=ax.materials[aG.material];aG.loading=true;var aL=ag.hierarchyHandlerMap[aG.type]["loaderObject"];if(aL.options){aL.load(D(aG.url,v.urlBaseType),N(aB,aK,aw,aG))}else{aL.load(D(aG.url,v.urlBaseType),N(aB,aK,aw,aG),aJ)}}}else{if(aG.geometry!==undefined){ah=ax.geometries[aG.geometry];if(ah){var aE=false;aw=ax.materials[aG.material];aE=aw instanceof THREE.ShaderMaterial;aF=aG.position;aI=aG.rotation;n=aG.scale;aO=aG.matrix;aA=aG.quaternion;if(!aG.material){aw=new THREE.MeshFaceMaterial(ax.face_materials[aG.geometry])}if((aw instanceof THREE.MeshFaceMaterial)&&aw.materials.length===0){aw=new THREE.MeshFaceMaterial(ax.face_materials[aG.geometry])}if(aw instanceof THREE.MeshFaceMaterial){for(var aN=0;aN<aw.materials.length;aN++){aE=aE||(aw.materials[aN] instanceof THREE.ShaderMaterial)}}if(aE){ah.computeTangents()}if(aG.skin){aP=new THREE.SkinnedMesh(ah,aw)}else{if(aG.morph){aP=new THREE.MorphAnimMesh(ah,aw);if(aG.duration!==undefined){aP.duration=aG.duration}if(aG.time!==undefined){aP.time=aG.time}if(aG.mirroredLoop!==undefined){aP.mirroredLoop=aG.mirroredLoop}if(aw.morphNormals){ah.computeMorphNormals()}}else{aP=new THREE.Mesh(ah,aw)}}aP.name=aB;if(aO){aP.matrixAutoUpdate=false;aP.matrix.set(aO[0],aO[1],aO[2],aO[3],aO[4],aO[5],aO[6],aO[7],aO[8],aO[9],aO[10],aO[11],aO[12],aO[13],aO[14],aO[15])}else{aP.position.set(aF[0],aF[1],aF[2]);if(aA){aP.quaternion.set(aA[0],aA[1],aA[2],aA[3]);aP.useQuaternion=true}else{aP.rotation.set(aI[0],aI[1],aI[2])}aP.scale.set(n[0],n[1],n[2])}aP.visible=aG.visible;aP.castShadow=aG.castShadow;aP.receiveShadow=aG.receiveShadow;aK.add(aP);ax.objects[aB]=aP}}else{if(aG.type==="DirectionalLight"||aG.type==="PointLight"||aG.type==="AmbientLight"){af=(aG.color!==undefined)?aG.color:16777215;f=(aG.intensity!==undefined)?aG.intensity:1;if(aG.type==="DirectionalLight"){aF=aG.direction;ae=new THREE.DirectionalLight(af,f);ae.position.set(aF[0],aF[1],aF[2]);if(aG.target){aa.push({object:ae,targetName:aG.target});ae.target=null}}else{if(aG.type==="PointLight"){aF=aG.position;aR=aG.distance;ae=new THREE.PointLight(af,f,aR);ae.position.set(aF[0],aF[1],aF[2])}else{if(aG.type==="AmbientLight"){ae=new THREE.AmbientLight(af)}}}aK.add(ae);ae.name=aB;ax.lights[aB]=ae;ax.objects[aB]=ae}else{if(aG.type==="PerspectiveCamera"||aG.type==="OrthographicCamera"){if(aG.type==="PerspectiveCamera"){ap=new THREE.PerspectiveCamera(aG.fov,aG.aspect,aG.near,aG.far)}else{if(aG.type==="OrthographicCamera"){ap=new THREE.OrthographicCamera(aG.left,aG.right,aG.top,aG.bottom,aG.near,aG.far)}}aF=aG.position;ap.position.set(aF[0],aF[1],aF[2]);aK.add(ap);ap.name=aB;ax.cameras[aB]=ap;ax.objects[aB]=ap}else{aF=aG.position;aI=aG.rotation;n=aG.scale;aA=aG.quaternion;aP=new THREE.Object3D();aP.name=aB;aP.position.set(aF[0],aF[1],aF[2]);if(aA){aP.quaternion.set(aA[0],aA[1],aA[2],aA[3]);aP.useQuaternion=true}else{aP.rotation.set(aI[0],aI[1],aI[2])}aP.scale.set(n[0],n[1],n[2]);aP.visible=(aG.visible!==undefined)?aG.visible:false;aK.add(aP);ax.objects[aB]=aP;ax.empties[aB]=aP}}}}if(aP){if(aG.properties!==undefined){for(var aQ in aG.properties){var aM=aG.properties[aQ];aP.properties[aQ]=aM}}if(aG.groups!==undefined){for(var aN=0;aN<aG.groups.length;aN++){var az=aG.groups[aN];if(ax.groups[az]===undefined){ax.groups[az]=[]}ax.groups[az].push(aB)}}if(aG.children!==undefined){ac(aP,aG.children)}}}}}function ad(n,i,az){ax.geometries[az]=n;ax.face_materials[az]=i;au()}function Y(aC,az,aF,aE,aD){var aA=aD.position;var i=aD.rotation;var n=aD.quaternion;var aG=aD.scale;aC.position.set(aA[0],aA[1],aA[2]);if(n){aC.quaternion.set(n[0],n[1],n[2],n[3]);aC.useQuaternion=true}else{aC.rotation.set(i[0],i[1],i[2])}aC.scale.set(aG[0],aG[1],aG[2]);if(aE){aC.traverse(function(aH){aH.material=aE})}var aB=(aD.visible!==undefined)?aD.visible:true;aC.traverse(function(aH){aH.visible=aB});aF.add(aC);aC.name=az;ax.objects[az]=aC;au()}function k(i){return function(az,n){ad(az,n,i);e-=1;ag.onLoadComplete();S()}}function N(aA,n,i,az){return function(aC){var aB;if(aC.content){aB=aC.content}else{if(aC.dae){aB=aC.scene}else{aB=aC}}Y(aB,aA,n,i,az);e-=1;ag.onLoadComplete();S()}}function C(i){return function(az,n){ax.geometries[i]=az;ax.face_materials[i]=n}}function S(){var i={totalModels:t,totalTextures:M,loadedModels:t-e,loadedTextures:M-ar};ag.callbackProgress(i,ax);ag.onLoadProgress();if(e===0&&ar===0){ay();a(ax)}}function ay(){for(var az=0;az<aa.length;az++){var n=aa[az];var aA=ax.objects[n.targetName];if(aA){n.object.target=aA}else{n.object.target=new THREE.Object3D();ax.scene.add(n.object.target)}n.object.target.properties.targetInverse=n.object}}var ab=function(i){ar-=i;S();ag.onLoadComplete()};var r=function(i){return function(){ab(i)}};var z,ao;for(z in v.fogs){ao=v.fogs[z];if(ao.type==="linear"){x=new THREE.Fog(0,ao.near,ao.far)}else{if(ao.type==="exp2"){x=new THREE.FogExp2(0,ao.density)}}y=ao.color;x.color.setRGB(y[0],y[1],y[2]);ax.fogs[z]=x}var R,X;for(R in v.geometries){X=v.geometries[R];if(X.type in this.geometryHandlerMap){e+=1;ag.onLoadStart()}}var j,U;for(j in v.objects){U=v.objects[j];if(U.type&&(U.type in this.hierarchyHandlerMap)){e+=1;ag.onLoadStart()}}t=e;for(R in v.geometries){X=v.geometries[R];if(X.type==="cube"){ah=new THREE.CubeGeometry(X.width,X.height,X.depth,X.widthSegments,X.heightSegments,X.depthSegments);ax.geometries[R]=ah}else{if(X.type==="plane"){ah=new THREE.PlaneGeometry(X.width,X.height,X.widthSegments,X.heightSegments);ax.geometries[R]=ah}else{if(X.type==="sphere"){ah=new THREE.SphereGeometry(X.radius,X.widthSegments,X.heightSegments);ax.geometries[R]=ah}else{if(X.type==="cylinder"){ah=new THREE.CylinderGeometry(X.topRad,X.botRad,X.height,X.radSegs,X.heightSegs);ax.geometries[R]=ah}else{if(X.type==="torus"){ah=new THREE.TorusGeometry(X.radius,X.tube,X.segmentsR,X.segmentsT);ax.geometries[R]=ah}else{if(X.type==="icosahedron"){ah=new THREE.IcosahedronGeometry(X.radius,X.subdivisions);ax.geometries[R]=ah}else{if(X.type in this.geometryHandlerMap){var P={};for(var G in X){if(G!=="type"&&G!=="url"){P[G]=X[G]}}var E=this.geometryHandlerMap[X.type]["loaderObject"];E.load(D(X.url,v.urlBaseType),k(R),P)}else{if(X.type==="embedded"){var m=v.embeds[X.id],b="";m.metadata=v.metadata;if(m){var K=this.geometryHandlerMap.ascii["loaderObject"];K.createModel(m,C(R),b)}}}}}}}}}}var aj,W;for(aj in v.textures){W=v.textures[aj];if(W.url instanceof Array){ar+=W.url.length;for(var J=0;J<W.url.length;J++){ag.onLoadStart()}}else{ar+=1;ag.onLoadStart()}}M=ar;for(aj in v.textures){W=v.textures[aj];if(W.mapping!==undefined&&THREE[W.mapping]!==undefined){W.mapping=new THREE[W.mapping]()}if(W.url instanceof Array){var h=W.url.length;var H=[];for(var L=0;L<h;L++){H[L]=D(W.url[L],v.urlBaseType)}var l=/\.dds$/i.test(H[0]);if(l){ak=THREE.ImageUtils.loadCompressedTextureCube(H,W.mapping,r(h))}else{ak=THREE.ImageUtils.loadTextureCube(H,W.mapping,r(h))}}else{var l=/\.dds$/i.test(W.url);var am=D(W.url,v.urlBaseType);var av=r(1);if(l){ak=THREE.ImageUtils.loadCompressedTexture(am,W.mapping,av)}else{ak=THREE.ImageUtils.loadTexture(am,W.mapping,av)}if(THREE[W.minFilter]!==undefined){ak.minFilter=THREE[W.minFilter]}if(THREE[W.magFilter]!==undefined){ak.magFilter=THREE[W.magFilter]}if(W.anisotropy){ak.anisotropy=W.anisotropy}if(W.repeat){ak.repeat.set(W.repeat[0],W.repeat[1]);if(W.repeat[0]!==1){ak.wrapS=THREE.RepeatWrapping}if(W.repeat[1]!==1){ak.wrapT=THREE.RepeatWrapping}}if(W.offset){ak.offset.set(W.offset[0],W.offset[1])}if(W.wrap){var O={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(O[W.wrap[0]]!==undefined){ak.wrapS=O[W.wrap[0]]}if(O[W.wrap[1]]!==undefined){ak.wrapT=O[W.wrap[1]]}}}ax.textures[aj]=ak}var s,at;var Z;for(s in v.materials){at=v.materials[s];for(Z in at.parameters){if(Z==="envMap"||Z==="map"||Z==="lightMap"||Z==="bumpMap"){at.parameters[Z]=ax.textures[at.parameters[Z]]}else{if(Z==="shading"){at.parameters[Z]=(at.parameters[Z]==="flat")?THREE.FlatShading:THREE.SmoothShading}else{if(Z==="side"){if(at.parameters[Z]=="double"){at.parameters[Z]=THREE.DoubleSide}else{if(at.parameters[Z]=="back"){at.parameters[Z]=THREE.BackSide}else{at.parameters[Z]=THREE.FrontSide}}}else{if(Z==="blending"){at.parameters[Z]=at.parameters[Z] in THREE?THREE[at.parameters[Z]]:THREE.NormalBlending}else{if(Z==="combine"){at.parameters[Z]=at.parameters[Z] in THREE?THREE[at.parameters[Z]]:THREE.MultiplyOperation}else{if(Z==="vertexColors"){if(at.parameters[Z]=="face"){at.parameters[Z]=THREE.FaceColors}else{if(at.parameters[Z]){at.parameters[Z]=THREE.VertexColors}}}else{if(Z==="wrapRGB"){var V=at.parameters[Z];at.parameters[Z]=new THREE.Vector3(V[0],V[1],V[2])}}}}}}}}if(at.parameters.opacity!==undefined&&at.parameters.opacity<1){at.parameters.transparent=true}if(at.parameters.normalMap){var al=THREE.ShaderLib.normalmap;var u=THREE.UniformsUtils.clone(al.uniforms);var o=at.parameters.color;var c=at.parameters.specular;var F=at.parameters.ambient;var Q=at.parameters.shininess;u.tNormal.value=ax.textures[at.parameters.normalMap];if(at.parameters.normalScale){u.uNormalScale.value.set(at.parameters.normalScale[0],at.parameters.normalScale[1])}if(at.parameters.map){u.tDiffuse.value=at.parameters.map;u.enableDiffuse.value=true}if(at.parameters.envMap){u.tCube.value=at.parameters.envMap;u.enableReflection.value=true;u.uReflectivity.value=at.parameters.reflectivity}if(at.parameters.lightMap){u.tAO.value=at.parameters.lightMap;u.enableAO.value=true}if(at.parameters.specularMap){u.tSpecular.value=ax.textures[at.parameters.specularMap];u.enableSpecular.value=true}if(at.parameters.displacementMap){u.tDisplacement.value=ax.textures[at.parameters.displacementMap];u.enableDisplacement.value=true;u.uDisplacementBias.value=at.parameters.displacementBias;u.uDisplacementScale.value=at.parameters.displacementScale}u.uDiffuseColor.value.setHex(o);u.uSpecularColor.value.setHex(c);u.uAmbientColor.value.setHex(F);u.uShininess.value=Q;if(at.parameters.opacity){u.uOpacity.value=at.parameters.opacity}var B={fragmentShader:al.fragmentShader,vertexShader:al.vertexShader,uniforms:u,lights:true,fog:true};aw=new THREE.ShaderMaterial(B)}else{aw=new THREE[at.type](at.parameters)}ax.materials[s]=aw}for(s in v.materials){at=v.materials[s];if(at.parameters.materials){var w=[];for(var L=0;L<at.parameters.materials.length;L++){var q=at.parameters.materials[L];w.push(ax.materials[q])}ax.materials[s].materials=w}}au();if(ax.cameras&&v.defaults.camera){ax.currentCamera=ax.cameras[v.defaults.camera]}if(ax.fogs&&v.defaults.fog){ax.scene.fog=ax.fogs[v.defaults.fog]}ag.callbackSync(ax);S()};THREE.TextureLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this;var c=new Image();c.addEventListener("load",function(){var d=new THREE.Texture(c);d.needsUpdate=true;b.dispatchEvent({type:"load",content:d})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);if(b.crossOrigin){c.crossOrigin=b.crossOrigin}c.src=a}};THREE.Material=function(){THREE.EventDispatcher.call(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthTest=true;this.depthWrite=true;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=false;this.visible=true;this.needsUpdate=true};THREE.Material.prototype.setValues=function(a){if(a===undefined){return}for(var b in a){var d=a[b];if(d===undefined){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}if(b in this){var c=this[b];if(c instanceof THREE.Color&&d instanceof THREE.Color){c.copy(d)}else{if(c instanceof THREE.Color){c.set(d)}else{if(c instanceof THREE.Vector3&&d instanceof THREE.Vector3){c.copy(d)}else{this[b]=d}}}}}};THREE.Material.prototype.clone=function(a){if(a===undefined){a=new THREE.Material()}a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a};THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.setValues(a)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=false;this.perPixel=true;this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial();THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial();THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(c,b){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.fragmentShader="void main() {}";this.vertexShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial();THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture();this.useScreenCoordinates=true;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=false;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(a);a=a||{};if(a.depthTest===undefined){this.depthTest=!this.useScreenCoordinates}if(a.sizeAttenuation===undefined){this.sizeAttenuation=!this.useScreenCoordinates}if(a.scaleByViewport===undefined){this.scaleByViewport=!this.sizeAttenuation}};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial();THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.useScreenCoordinates=this.useScreenCoordinates;a.sizeAttenuation=this.sizeAttenuation;a.scaleByViewport=this.scaleByViewport;a.alignment.copy(this.alignment);a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);a.fog=this.fog;return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(d,b,f,e,i,c,h,g,a){THREE.EventDispatcher.call(this);this.id=THREE.TextureIdCount++;this.name="";this.image=d;this.mipmaps=[];this.mapping=b!==undefined?b:new THREE.UVMapping();this.wrapS=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrapT=e!==undefined?e:THREE.ClampToEdgeWrapping;this.magFilter=i!==undefined?i:THREE.LinearFilter;this.minFilter=c!==undefined?c:THREE.LinearMipMapLinearFilter;this.anisotropy=a!==undefined?a:1;this.format=h!==undefined?h:THREE.RGBAFormat;this.type=g!==undefined?g:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.needsUpdate=false;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){if(a===undefined){a=new THREE.Texture()}a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.TextureIdCount=0;THREE.CompressedTexture=function(e,d,k,i,h,b,g,f,j,c,a){THREE.Texture.call(this,null,b,g,f,j,c,i,h,a);this.image={width:d,height:k};this.mipmaps=e;this.generateMipmaps=false};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture();THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(f,d,k,i,h,b,g,e,j,c,a){THREE.Texture.call(this,null,b,g,e,j,c,i,h,a);this.image={data:f,width:d,height:k}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture();THREE.Texture.prototype.clone.call(this,a);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(a){if(a===undefined){a=new THREE.Particle(this.material)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(b,a){THREE.Object3D.call(this);this.geometry=b;this.material=(a!==undefined)?a:new THREE.ParticleBasicMaterial({color:Math.random()*16777215});this.sortParticles=false;if(this.geometry){if(this.geometry.boundingSphere===null){this.geometry.computeBoundingSphere()}}this.frustumCulled=false};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){if(a===undefined){a=new THREE.ParticleSystem(this.geometry,this.material)}a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(c,b,a){THREE.Object3D.call(this);this.geometry=c;this.material=(b!==undefined)?b:new THREE.LineBasicMaterial({color:Math.random()*16777215});this.type=(a!==undefined)?a:THREE.LineStrip;if(this.geometry){if(!this.geometry.boundingSphere){this.geometry.computeBoundingSphere()}}};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(a){if(a===undefined){a=new THREE.Line(this.geometry,this.material,this.type)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(b,a){THREE.Object3D.call(this);this.geometry=b;this.material=(a!==undefined)?a:new THREE.MeshBasicMaterial({color:Math.random()*16777215,wireframe:true});if(this.geometry!==undefined){if(this.geometry.boundingSphere===null){this.geometry.computeBoundingSphere()}this.updateMorphTargets()}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==undefined){return this.morphTargetDictionary[a]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){if(a===undefined){a=new THREE.Mesh(this.geometry,this.material)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4()};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(d,b){if(this.matrixAutoUpdate){b|=this.updateMatrix()}if(b||this.matrixWorldNeedsUpdate){if(d){this.skinMatrix.multiplyMatrices(d,this.matrix)}else{this.skinMatrix.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;b=true}var e,c,a=this.children.length;for(c=0;c<a;c++){this.children[c].update(this.skinMatrix,b)}};THREE.SkinnedMesh=function(f,e,d){THREE.Mesh.call(this,f,e);this.useVertexTexture=d!==undefined?d:true;this.identityMatrix=new THREE.Matrix4();this.bones=[];this.boneMatrices=[];var g,i,j,c,a,l;if(this.geometry&&this.geometry.bones!==undefined){for(g=0;g<this.geometry.bones.length;g++){j=this.geometry.bones[g];c=j.pos;a=j.rotq;l=j.scl;i=this.addBone();i.name=j.name;i.position.set(c[0],c[1],c[2]);i.quaternion.set(a[0],a[1],a[2],a[3]);i.useQuaternion=true;if(l!==undefined){i.scale.set(l[0],l[1],l[2])}else{i.scale.set(1,1,1)}}for(g=0;g<this.bones.length;g++){j=this.geometry.bones[g];i=this.bones[g];if(j.parent===-1){this.add(i)}else{this.bones[j.parent].add(i)}}var h=this.bones.length;if(this.useVertexTexture){var k;if(h>256){k=64}else{if(h>64){k=32}else{if(h>16){k=16}else{k=8}}}this.boneTextureWidth=k;this.boneTextureHeight=k;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType);this.boneTexture.minFilter=THREE.NearestFilter;this.boneTexture.magFilter=THREE.NearestFilter;this.boneTexture.generateMipmaps=false;this.boneTexture.flipY=false}else{this.boneMatrices=new Float32Array(16*h)}this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){if(a===undefined){a=new THREE.Bone(this)}this.bones.push(a);return a};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(f){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||f){if(this.parent){this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}else{this.matrixWorld.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;f=true}for(var e=0,d=this.children.length;e<d;e++){var h=this.children[e];if(h instanceof THREE.Bone){h.update(this.identityMatrix,false)}else{h.updateMatrixWorld(true)}}if(this.boneInverses==undefined){this.boneInverses=[];for(var a=0,g=this.bones.length;a<g;a++){var c=new THREE.Matrix4();c.getInverse(this.bones[a].skinMatrix);this.boneInverses.push(c)}}for(var a=0,g=this.bones.length;a<g;a++){THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[a].skinMatrix,this.boneInverses[a]);THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,a*16)}if(this.useVertexTexture){this.boneTexture.needsUpdate=true}};THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(true);for(var b=0;b<this.geometry.skinIndices.length;b++){var a=this.geometry.skinWeights[b];var c=1/a.lengthManhattan();if(c!==Infinity){a.multiplyScalar(c)}else{a.set(1)}}};THREE.SkinnedMesh.prototype.clone=function(a){if(a===undefined){a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)}THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4();THREE.MorphAnimMesh=function(b,a){THREE.Mesh.call(this,b,a);this.duration=1000;this.mirroredLoop=false;this.time=0;this.lastKeyframe=0;this.currentKeyframe=0;this.direction=1;this.directionBackwards=false;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(b,a){this.startKeyframe=b;this.endKeyframe=a;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=false};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=true};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var g=this.geometry;if(!g.animations){g.animations={}}var a,l=g.animations;var f=/([a-z]+)(\d+)/;for(var d=0,j=g.morphTargets.length;d<j;d++){var k=g.morphTargets[d];var c=k.name.match(f);if(c&&c.length>1){var h=c[1];var e=c[2];if(!l[h]){l[h]={start:Infinity,end:-Infinity}}var b=l[h];if(d<b.start){b.start=d}if(d>b.end){b.end=d}if(!a){a=h}}}g.firstAnimation=a};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(b,c,a){if(!this.geometry.animations){this.geometry.animations={}}this.geometry.animations[b]={start:c,end:a}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,c){var b=this.geometry.animations[a];if(b){this.setFrameRange(b.start,b.end);this.duration=1000*((b.end-b.start)/c);this.time=0}else{console.warn("animation["+a+"] undefined")}};THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var c=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction*=-1;if(this.time>this.duration){this.time=this.duration;this.directionBackwards=true}if(this.time<0){this.time=0;this.directionBackwards=false}}}else{this.time=this.time%this.duration;if(this.time<0){this.time+=this.duration}}var a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/c),0,this.length-1);if(a!==this.currentKeyframe){this.morphTargetInfluences[this.lastKeyframe]=0;this.morphTargetInfluences[this.currentKeyframe]=1;this.morphTargetInfluences[a]=0;this.lastKeyframe=this.currentKeyframe;this.currentKeyframe=a}var b=(this.time%c)/c;if(this.directionBackwards){b=1-b}this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.MorphAnimMesh.prototype.clone=function(a){if(a===undefined){a=new THREE.MorphAnimMesh(this.geometry,this.material)}a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(b,a){THREE.Object3D.call(this);this.geometry=b;this.material=a};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(a){if(a===undefined){a=new THREE.Ribbon(this.geometry,this.material)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(c,b){if(b===undefined){b=0}b=Math.abs(b);for(var a=0;a<this.LODs.length;a++){if(b<this.LODs[a].visibleAtDistance){break}}this.LODs.splice(a,0,{visibleAtDistance:b,object3D:c});this.add(c)};THREE.LOD.prototype.update=function(c){if(this.LODs.length>1){c.matrixWorldInverse.getInverse(c.matrixWorld);var b=c.matrixWorldInverse;var d=-(b.elements[2]*this.matrixWorld.elements[12]+b.elements[6]*this.matrixWorld.elements[13]+b.elements[10]*this.matrixWorld.elements[14]+b.elements[14]);this.LODs[0].object3D.visible=true;for(var a=1;a<this.LODs.length;a++){if(d>=this.LODs[a].visibleAtDistance){this.LODs[a-1].object3D.visible=false;this.LODs[a].object3D.visible=true}else{break}}for(;a<this.LODs.length;a++){this.LODs[a].object3D.visible=false}}};THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=(a!==undefined)?a:new THREE.SpriteMaterial();this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1){this.matrix.scale(this.scale)}this.matrixWorldNeedsUpdate=true};THREE.Sprite.prototype.clone=function(a){if(a===undefined){a=new THREE.Sprite(this.material)}THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Scene=function(){THREE.Object3D.call(this);this.fog=null;this.overrideMaterial=null;this.matrixAutoUpdate=false;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light){if(this.__lights.indexOf(a)===-1){this.__lights.push(a)}if(a.target&&a.target.parent===undefined){this.add(a.target)}}else{if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)){if(this.__objects.indexOf(a)===-1){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);if(b!==-1){this.__objectsRemoved.splice(b,1)}}}}for(var d=0;d<a.children.length;d++){this.__addObject(a.children[d])}};THREE.Scene.prototype.__removeObject=function(b){if(b instanceof THREE.Light){var d=this.__lights.indexOf(b);if(d!==-1){this.__lights.splice(d,1)}}else{if(!(b instanceof THREE.Camera)){var d=this.__objects.indexOf(b);if(d!==-1){this.__objects.splice(d,1);this.__objectsRemoved.push(b);var a=this.__objectsAdded.indexOf(b);if(a!==-1){this.__objectsAdded.splice(a,1)}}}}for(var e=0;e<b.children.length;e++){this.__removeObject(b.children[e])}};THREE.Fog=function(c,b,a){this.name="";this.color=new THREE.Color(c);this.near=(b!==undefined)?b:1;this.far=(a!==undefined)?a:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(b,a){this.name="";this.color=new THREE.Color(b);this.density=(a!==undefined)?a:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(B){console.log("THREE.CanvasRenderer",THREE.REVISION);var aw=THREE.Math.smoothstep;B=B||{};var u=this,y,C,l,b=new THREE.Projector(),h=B.canvas!==undefined?B.canvas:document.createElement("canvas"),w,av,ag,F,e=h.getContext("2d"),D=new THREE.Color(0),ah=0,ax=1,at=0,v=null,ar=null,I=null,j=null,ao=null,G=null,ak=0,af,ad,ab,aa,Z=new THREE.RenderableVertex(),X=new THREE.RenderableVertex(),t,s,d,c,aE,aB,aq,ap,T,R,L,K,f=new THREE.Color(),p=new THREE.Color(),o=new THREE.Color(),n=new THREE.Color(),m=new THREE.Color(),V=new THREE.Color(),q=new THREE.Color(),am=new THREE.Color(),E={},P={},O,aH,W,i,aD,az,an,al,S,Q,aG=new THREE.Box2(),r=new THREE.Box2(),x=new THREE.Box2(),a=false,ay=new THREE.Color(),A=new THREE.Color(),ac=new THREE.Color(),k=new THREE.Vector3(),aC,g,aF,N,J,M,ae=16;aC=document.createElement("canvas");aC.width=aC.height=2;g=aC.getContext("2d");g.fillStyle="rgba(0,0,0,1)";g.fillRect(0,0,2,2);aF=g.getImageData(0,0,2,2);N=aF.data;J=document.createElement("canvas");J.width=J.height=ae;M=J.getContext("2d");M.translate(-ae/2,-ae/2);M.scale(ae,ae);ae--;if(e.setLineDash===undefined){if(e.mozDash!==undefined){e.setLineDash=function(aI){e.mozDash=aI[0]!==null?aI:null}}else{e.setLineDash=function(){}}}this.domElement=h;this.devicePixelRatio=B.devicePixelRatio!==undefined?B.devicePixelRatio:window.devicePixelRatio!==undefined?window.devicePixelRatio:1;this.autoClear=true;this.sortObjects=true;this.sortElements=true;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(aJ,aI){w=aJ*this.devicePixelRatio;av=aI*this.devicePixelRatio;ag=Math.floor(w/2);F=Math.floor(av/2);h.width=w;h.height=av;h.style.width=aJ+"px";h.style.height=aI+"px";aG.set(new THREE.Vector2(-ag,-F),new THREE.Vector2(ag,F));r.set(new THREE.Vector2(-ag,-F),new THREE.Vector2(ag,F));ax=1;at=0;v=null;ar=null;I=null;j=null;ao=null};this.setClearColor=function(aI,aJ){D.copy(aI);ah=aJ!==undefined?aJ:1;r.set(new THREE.Vector2(-ag,-F),new THREE.Vector2(ag,F))};this.setClearColorHex=function(aJ,aI){D.setHex(aJ);ah=aI!==undefined?aI:1;r.set(new THREE.Vector2(-ag,-F),new THREE.Vector2(ag,F))};this.getMaxAnisotropy=function(){return 0};this.clear=function(){e.setTransform(1,0,0,-1,ag,F);if(r.empty()===false){r.intersect(aG);r.expandByScalar(2);if(ah<1){e.clearRect(r.min.x|0,r.min.y|0,(r.max.x-r.min.x)|0,(r.max.y-r.min.y)|0)}if(ah>0){aj(THREE.NormalBlending);z(1);ai("rgba("+Math.floor(D.r*255)+","+Math.floor(D.g*255)+","+Math.floor(D.b*255)+","+ah+")");e.fillRect(r.min.x|0,r.min.y|0,(r.max.x-r.min.x)|0,(r.max.y-r.min.y)|0)}r.makeEmpty()}};this.render=function(aY,aV){if(aV instanceof THREE.Camera===false){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");return}if(this.autoClear===true){this.clear()}e.setTransform(1,0,0,-1,ag,F);u.info.render.vertices=0;u.info.render.faces=0;y=b.projectScene(aY,aV,this.sortObjects,this.sortElements);C=y.elements;l=y.lights;a=l.length>0;if(a===true){aO()}for(var aX=0,aL=C.length;aX<aL;aX++){var aM=C[aX];var aR=aM.material;if(aR===undefined||aR.visible===false){continue}x.makeEmpty();if(aM instanceof THREE.RenderableParticle){af=aM;af.x*=ag;af.y*=F;aQ(af,aM,aR)}else{if(aM instanceof THREE.RenderableLine){af=aM.v1;ad=aM.v2;af.positionScreen.x*=ag;af.positionScreen.y*=F;ad.positionScreen.x*=ag;ad.positionScreen.y*=F;x.setFromPoints([af.positionScreen,ad.positionScreen]);if(aG.isIntersectionBox(x)===true){aK(af,ad,aM,aR)}}else{if(aM instanceof THREE.RenderableFace3){af=aM.v1;ad=aM.v2;ab=aM.v3;if(af.positionScreen.z<-1||af.positionScreen.z>1){continue}if(ad.positionScreen.z<-1||ad.positionScreen.z>1){continue}if(ab.positionScreen.z<-1||ab.positionScreen.z>1){continue}af.positionScreen.x*=ag;af.positionScreen.y*=F;ad.positionScreen.x*=ag;ad.positionScreen.y*=F;ab.positionScreen.x*=ag;ab.positionScreen.y*=F;if(aR.overdraw===true){aI(af.positionScreen,ad.positionScreen);aI(ad.positionScreen,ab.positionScreen);aI(ab.positionScreen,af.positionScreen)}x.setFromPoints([af.positionScreen,ad.positionScreen,ab.positionScreen]);aP(af,ad,ab,0,1,2,aM,aR)}else{if(aM instanceof THREE.RenderableFace4){af=aM.v1;ad=aM.v2;ab=aM.v3;aa=aM.v4;if(af.positionScreen.z<-1||af.positionScreen.z>1){continue}if(ad.positionScreen.z<-1||ad.positionScreen.z>1){continue}if(ab.positionScreen.z<-1||ab.positionScreen.z>1){continue}if(aa.positionScreen.z<-1||aa.positionScreen.z>1){continue}af.positionScreen.x*=ag;af.positionScreen.y*=F;ad.positionScreen.x*=ag;ad.positionScreen.y*=F;ab.positionScreen.x*=ag;ab.positionScreen.y*=F;aa.positionScreen.x*=ag;aa.positionScreen.y*=F;Z.positionScreen.copy(ad.positionScreen);X.positionScreen.copy(aa.positionScreen);if(aR.overdraw===true){aI(af.positionScreen,ad.positionScreen);aI(ad.positionScreen,aa.positionScreen);aI(aa.positionScreen,af.positionScreen);aI(ab.positionScreen,Z.positionScreen);aI(ab.positionScreen,X.positionScreen)}x.setFromPoints([af.positionScreen,ad.positionScreen,ab.positionScreen,aa.positionScreen]);aN(af,ad,ab,aa,Z,X,aM,aR,aY)}}}}r.union(x)}e.setTransform(1,0,0,1,0,0);function aO(){ay.setRGB(0,0,0);A.setRGB(0,0,0);ac.setRGB(0,0,0);for(var a4=0,a5=l.length;a4<a5;a4++){var a3=l[a4];var a2=a3.color;if(a3 instanceof THREE.AmbientLight){ay.add(a2)}else{if(a3 instanceof THREE.DirectionalLight){A.add(a2)}else{if(a3 instanceof THREE.PointLight){ac.add(a2)}}}}}function aT(a2,a9,a6){for(var a5=0,a8=l.length;a5<a8;a5++){var a4=l[a5];am.copy(a4.color);if(a4 instanceof THREE.DirectionalLight){var a3=k.getPositionFromMatrix(a4.matrixWorld).normalize();var a7=a9.dot(a3);if(a7<=0){continue}a7*=a4.intensity;a6.add(am.multiplyScalar(a7))}else{if(a4 instanceof THREE.PointLight){var a3=k.getPositionFromMatrix(a4.matrixWorld);var a7=a9.dot(k.subVectors(a3,a2).normalize());if(a7<=0){continue}a7*=a4.distance==0?1:1-Math.min(a2.distanceTo(a3)/a4.distance,1);if(a7==0){continue}a7*=a4.intensity;a6.add(am.multiplyScalar(a7))}}}}function aQ(a7,a4,a5){z(a5.opacity);aj(a5.blending);var a2,bb,a9,a8,a6,ba,a3;if(a5 instanceof THREE.ParticleBasicMaterial){if(a5.map===null){a9=a4.object.scale.x;a8=a4.object.scale.y;a9*=a4.scale.x*ag;a8*=a4.scale.y*F;x.min.set(a7.x-a9,a7.y-a8);x.max.set(a7.x+a9,a7.y+a8);if(aG.isIntersectionBox(x)===false){return}ai(a5.color.getStyle());e.save();e.translate(a7.x,a7.y);e.rotate(-a4.rotation);e.scale(a9,a8);e.fillRect(-1,-1,2,2);e.restore()}else{a6=a5.map.image;ba=a6.width>>1;a3=a6.height>>1;a9=a4.scale.x*ag;a8=a4.scale.y*F;a2=a9*ba;bb=a8*a3;x.min.set(a7.x-a2,a7.y-bb);x.max.set(a7.x+a2,a7.y+bb);if(aG.isIntersectionBox(x)===false){return}e.save();e.translate(a7.x,a7.y);e.rotate(-a4.rotation);e.scale(a9,-a8);e.translate(-ba,-a3);e.drawImage(a6,0,0);e.restore()}}else{if(a5 instanceof THREE.ParticleCanvasMaterial){a2=a4.scale.x*ag;bb=a4.scale.y*F;x.min.set(a7.x-a2,a7.y-bb);x.max.set(a7.x+a2,a7.y+bb);if(aG.isIntersectionBox(x)===false){return}au(a5.color.getStyle());ai(a5.color.getStyle());e.save();e.translate(a7.x,a7.y);e.rotate(-a4.rotation);e.scale(a2,bb);a5.program(e);e.restore()}}}function aK(a5,a4,a2,a3){z(a3.opacity);aj(a3.blending);e.beginPath();e.moveTo(a5.positionScreen.x,a5.positionScreen.y);e.lineTo(a4.positionScreen.x,a4.positionScreen.y);if(a3 instanceof THREE.LineBasicMaterial){H(a3.linewidth);Y(a3.linecap);aA(a3.linejoin);au(a3.color.getStyle());U(null,null);e.stroke();x.expandByScalar(a3.linewidth*2)}else{if(a3 instanceof THREE.LineDashedMaterial){H(a3.linewidth);Y(a3.linecap);aA(a3.linejoin);au(a3.color.getStyle());U(a3.dashSize,a3.gapSize);e.stroke();x.expandByScalar(a3.linewidth*2)}}}function aP(ba,a9,a8,a4,a3,a2,a5,a7){u.info.render.vertices+=3;u.info.render.faces++;z(a7.opacity);aj(a7.blending);t=ba.positionScreen.x;s=ba.positionScreen.y;d=a9.positionScreen.x;c=a9.positionScreen.y;aE=a8.positionScreen.x;aB=a8.positionScreen.y;aU(t,s,d,c,aE,aB);if((a7 instanceof THREE.MeshLambertMaterial||a7 instanceof THREE.MeshPhongMaterial)&&a7.map===null){V.copy(a7.color);q.copy(a7.emissive);if(a7.vertexColors===THREE.FaceColors){V.multiply(a5.color)}if(a===true){if(a7.wireframe===false&&a7.shading==THREE.SmoothShading&&a5.vertexNormalsLength==3){p.copy(ay);o.copy(ay);n.copy(ay);aT(a5.v1.positionWorld,a5.vertexNormalsModel[0],p);aT(a5.v2.positionWorld,a5.vertexNormalsModel[1],o);aT(a5.v3.positionWorld,a5.vertexNormalsModel[2],n);p.multiply(V).add(q);o.multiply(V).add(q);n.multiply(V).add(q);m.addColors(o,n).multiplyScalar(0.5);W=a1(p,o,n,m);aW(t,s,d,c,aE,aB,0,0,1,0,0,1,W)}else{f.copy(ay);aT(a5.centroidModel,a5.normalModel,f);f.multiply(V).add(q);a7.wireframe===true?a0(f,a7.wireframeLinewidth,a7.wireframeLinecap,a7.wireframeLinejoin):aZ(f)}}else{a7.wireframe===true?a0(a7.color,a7.wireframeLinewidth,a7.wireframeLinecap,a7.wireframeLinejoin):aZ(a7.color)}}else{if(a7 instanceof THREE.MeshBasicMaterial||a7 instanceof THREE.MeshLambertMaterial||a7 instanceof THREE.MeshPhongMaterial){if(a7.map!==null){if(a7.map.mapping instanceof THREE.UVMapping){i=a5.uvs[0];aJ(t,s,d,c,aE,aB,i[a4].x,i[a4].y,i[a3].x,i[a3].y,i[a2].x,i[a2].y,a7.map)}}else{if(a7.envMap!==null){if(a7.envMap.mapping instanceof THREE.SphericalReflectionMapping){k.copy(a5.vertexNormalsModelView[a4]);aD=0.5*k.x+0.5;az=0.5*k.y+0.5;k.copy(a5.vertexNormalsModelView[a3]);an=0.5*k.x+0.5;al=0.5*k.y+0.5;k.copy(a5.vertexNormalsModelView[a2]);S=0.5*k.x+0.5;Q=0.5*k.y+0.5;aJ(t,s,d,c,aE,aB,aD,az,an,al,S,Q,a7.envMap)}}else{f.copy(a7.color);if(a7.vertexColors===THREE.FaceColors){f.multiply(a5.color)}a7.wireframe===true?a0(f,a7.wireframeLinewidth,a7.wireframeLinecap,a7.wireframeLinejoin):aZ(f)}}}else{if(a7 instanceof THREE.MeshDepthMaterial){O=aV.near;aH=aV.far;p.r=p.g=p.b=1-aw(ba.positionScreen.z*ba.positionScreen.w,O,aH);o.r=o.g=o.b=1-aw(a9.positionScreen.z*a9.positionScreen.w,O,aH);n.r=n.g=n.b=1-aw(a8.positionScreen.z*a8.positionScreen.w,O,aH);m.addColors(o,n).multiplyScalar(0.5);W=a1(p,o,n,m);aW(t,s,d,c,aE,aB,0,0,1,0,0,1,W)}else{if(a7 instanceof THREE.MeshNormalMaterial){var a6;if(a7.shading==THREE.FlatShading){a6=a5.normalModelView;f.setRGB(a6.x,a6.y,a6.z).multiplyScalar(0.5).addScalar(0.5);a7.wireframe===true?a0(f,a7.wireframeLinewidth,a7.wireframeLinecap,a7.wireframeLinejoin):aZ(f)}else{if(a7.shading==THREE.SmoothShading){a6=a5.vertexNormalsModelView[a4];p.setRGB(a6.x,a6.y,a6.z).multiplyScalar(0.5).addScalar(0.5);a6=a5.vertexNormalsModelView[a3];o.setRGB(a6.x,a6.y,a6.z).multiplyScalar(0.5).addScalar(0.5);a6=a5.vertexNormalsModelView[a2];n.setRGB(a6.x,a6.y,a6.z).multiplyScalar(0.5).addScalar(0.5);m.addColors(o,n).multiplyScalar(0.5);W=a1(p,o,n,m);aW(t,s,d,c,aE,aB,0,0,1,0,0,1,W)}}}}}}}function aN(ba,a9,a8,a7,a6,a4,a2,a5){u.info.render.vertices+=4;u.info.render.faces++;z(a5.opacity);aj(a5.blending);if((a5.map!==undefined&&a5.map!==null)||(a5.envMap!==undefined&&a5.envMap!==null)){aP(ba,a9,a7,0,1,3,a2,a5);aP(a6,a8,a4,1,2,3,a2,a5);return}t=ba.positionScreen.x;s=ba.positionScreen.y;d=a9.positionScreen.x;c=a9.positionScreen.y;aE=a8.positionScreen.x;aB=a8.positionScreen.y;aq=a7.positionScreen.x;ap=a7.positionScreen.y;T=a6.positionScreen.x;R=a6.positionScreen.y;L=a4.positionScreen.x;K=a4.positionScreen.y;if(a5 instanceof THREE.MeshLambertMaterial||a5 instanceof THREE.MeshPhongMaterial){V.copy(a5.color);q.copy(a5.emissive);if(a5.vertexColors===THREE.FaceColors){V.multiply(a2.color)}if(a===true){if(a5.wireframe===false&&a5.shading==THREE.SmoothShading&&a2.vertexNormalsLength==4){p.copy(ay);o.copy(ay);n.copy(ay);m.copy(ay);aT(a2.v1.positionWorld,a2.vertexNormalsModel[0],p);aT(a2.v2.positionWorld,a2.vertexNormalsModel[1],o);aT(a2.v4.positionWorld,a2.vertexNormalsModel[3],n);aT(a2.v3.positionWorld,a2.vertexNormalsModel[2],m);p.multiply(V).add(q);o.multiply(V).add(q);n.multiply(V).add(q);m.multiply(V).add(q);W=a1(p,o,n,m);aU(t,s,d,c,aq,ap);aW(t,s,d,c,aq,ap,0,0,1,0,0,1,W);aU(T,R,aE,aB,L,K);aW(T,R,aE,aB,L,K,1,0,1,1,0,1,W)}else{f.copy(ay);aT(a2.centroidModel,a2.normalModel,f);f.multiply(V).add(q);aS(t,s,d,c,aE,aB,aq,ap);a5.wireframe===true?a0(f,a5.wireframeLinewidth,a5.wireframeLinecap,a5.wireframeLinejoin):aZ(f)}}else{f.addColors(V,q);aS(t,s,d,c,aE,aB,aq,ap);a5.wireframe===true?a0(f,a5.wireframeLinewidth,a5.wireframeLinecap,a5.wireframeLinejoin):aZ(f)}}else{if(a5 instanceof THREE.MeshBasicMaterial){f.copy(a5.color);if(a5.vertexColors===THREE.FaceColors){f.multiply(a2.color)}aS(t,s,d,c,aE,aB,aq,ap);a5.wireframe===true?a0(f,a5.wireframeLinewidth,a5.wireframeLinecap,a5.wireframeLinejoin):aZ(f)}else{if(a5 instanceof THREE.MeshNormalMaterial){var a3;if(a5.shading==THREE.FlatShading){a3=a2.normalModelView;f.setRGB(a3.x,a3.y,a3.z).multiplyScalar(0.5).addScalar(0.5);aS(t,s,d,c,aE,aB,aq,ap);a5.wireframe===true?a0(f,a5.wireframeLinewidth,a5.wireframeLinecap,a5.wireframeLinejoin):aZ(f)}else{if(a5.shading==THREE.SmoothShading){a3=a2.vertexNormalsModelView[0];p.setRGB(a3.x,a3.y,a3.z).multiplyScalar(0.5).addScalar(0.5);a3=a2.vertexNormalsModelView[1];o.setRGB(a3.x,a3.y,a3.z).multiplyScalar(0.5).addScalar(0.5);a3=a2.vertexNormalsModelView[3];n.setRGB(a3.x,a3.y,a3.z).multiplyScalar(0.5).addScalar(0.5);a3=a2.vertexNormalsModelView[2];m.setRGB(a3.x,a3.y,a3.z).multiplyScalar(0.5).addScalar(0.5);W=a1(p,o,n,m);aU(t,s,d,c,aq,ap);aW(t,s,d,c,aq,ap,0,0,1,0,0,1,W);aU(T,R,aE,aB,L,K);aW(T,R,aE,aB,L,K,1,0,1,1,0,1,W)}}}else{if(a5 instanceof THREE.MeshDepthMaterial){O=aV.near;aH=aV.far;p.r=p.g=p.b=1-aw(ba.positionScreen.z*ba.positionScreen.w,O,aH);o.r=o.g=o.b=1-aw(a9.positionScreen.z*a9.positionScreen.w,O,aH);n.r=n.g=n.b=1-aw(a7.positionScreen.z*a7.positionScreen.w,O,aH);m.r=m.g=m.b=1-aw(a8.positionScreen.z*a8.positionScreen.w,O,aH);W=a1(p,o,n,m);aU(t,s,d,c,aq,ap);aW(t,s,d,c,aq,ap,0,0,1,0,0,1,W);aU(T,R,aE,aB,L,K);aW(T,R,aE,aB,L,K,1,0,1,1,0,1,W)}}}}}function aU(a5,a7,a3,a6,a2,a4){e.beginPath();e.moveTo(a5,a7);e.lineTo(a3,a6);e.lineTo(a2,a4);e.closePath()}function aS(a7,a9,a5,a8,a3,a6,a2,a4){e.beginPath();e.moveTo(a7,a9);e.lineTo(a5,a8);e.lineTo(a3,a6);e.lineTo(a2,a4);e.closePath()}function a0(a2,a5,a4,a3){H(a5);Y(a4);aA(a3);au(a2.getStyle());e.stroke();x.expandByScalar(a5*2)}function aZ(a2){ai(a2.getStyle());e.fill()}function aJ(bm,a9,bj,a7,bh,a5,bi,a6,bg,a4,bf,a2,bc){if(bc instanceof THREE.DataTexture||bc.image===undefined||bc.image.width==0){return}if(bc.needsUpdate===true){var bu=bc.wrapS==THREE.RepeatWrapping;var bs=bc.wrapT==THREE.RepeatWrapping;E[bc.id]=e.createPattern(bc.image,bu===true&&bs===true?"repeat":bu===true&&bs===false?"repeat-x":bu===false&&bs===true?"repeat-y":"no-repeat");bc.needsUpdate=false}E[bc.id]===undefined?ai("rgba(0,0,0,1)"):ai(E[bc.id]);var bv,bt,br,bq,bo,bl,ba,bp,bn=bc.offset.x/bc.repeat.x,bk=bc.offset.y/bc.repeat.y,be=bc.image.width*bc.repeat.x,bd=bc.image.height*bc.repeat.y;bi=(bi+bn)*be;a6=(1-a6+bk)*bd;bg=(bg+bn)*be;a4=(1-a4+bk)*bd;bf=(bf+bn)*be;a2=(1-a2+bk)*bd;bj-=bm;a7-=a9;bh-=bm;a5-=a9;bg-=bi;a4-=a6;bf-=bi;a2-=a6;ba=bg*a2-bf*a4;if(ba===0){if(P[bc.id]===undefined){var a8=document.createElement("canvas");a8.width=bc.image.width;a8.height=bc.image.height;var a3=a8.getContext("2d");a3.drawImage(bc.image,0,0);P[bc.id]=a3.getImageData(0,0,bc.image.width,bc.image.height).data}var bw=P[bc.id];var bb=(Math.floor(bi)+Math.floor(a6)*bc.image.width)*4;f.setRGB(bw[bb]/255,bw[bb+1]/255,bw[bb+2]/255);aZ(f);return}bp=1/ba;bv=(a2*bj-a4*bh)*bp;bt=(a2*a7-a4*a5)*bp;br=(bg*bh-bf*bj)*bp;bq=(bg*a5-bf*a7)*bp;bo=bm-bv*bi-br*a6;bl=a9-bt*bi-bq*a6;e.save();e.transform(bv,bt,br,bq,bo,bl);e.fill();e.restore()}function aW(bi,a7,bg,a6,be,a4,bf,a5,bd,a3,bc,a2,ba){var bo,bn,bm,bl,bj,bh,a8,bk,bb=ba.width-1,a9=ba.height-1;bf*=bb;a5*=a9;bd*=bb;a3*=a9;bc*=bb;a2*=a9;bg-=bi;a6-=a7;be-=bi;a4-=a7;bd-=bf;a3-=a5;bc-=bf;a2-=a5;a8=bd*a2-bc*a3;bk=1/a8;bo=(a2*bg-a3*be)*bk;bn=(a2*a6-a3*a4)*bk;bm=(bd*be-bc*bg)*bk;bl=(bd*a4-bc*a6)*bk;bj=bi-bo*bf-bm*a5;bh=a7-bn*bf-bl*a5;e.save();e.transform(bo,bn,bm,bl,bj,bh);e.clip();e.drawImage(ba,0,0);e.restore()}function a1(a3,a2,a5,a4){N[0]=(a3.r*255)|0;N[1]=(a3.g*255)|0;N[2]=(a3.b*255)|0;N[4]=(a2.r*255)|0;N[5]=(a2.g*255)|0;N[6]=(a2.b*255)|0;N[8]=(a5.r*255)|0;N[9]=(a5.g*255)|0;N[10]=(a5.b*255)|0;N[12]=(a4.r*255)|0;N[13]=(a4.g*255)|0;N[14]=(a4.b*255)|0;g.putImageData(aF,0,0);M.drawImage(aC,0,0);return J}function aI(a7,a5){var a2=a5.x-a7.x,a6=a5.y-a7.y,a3=a2*a2+a6*a6,a4;if(a3===0){return}a4=1/Math.sqrt(a3);a2*=a4;a6*=a4;a5.x+=a2;a5.y+=a6;a7.x-=a2;a7.y-=a6}};function z(aI){if(ax!==aI){e.globalAlpha=aI;ax=aI}}function aj(aI){if(at!==aI){if(aI===THREE.NormalBlending){e.globalCompositeOperation="source-over"}else{if(aI===THREE.AdditiveBlending){e.globalCompositeOperation="lighter"}else{if(aI===THREE.SubtractiveBlending){e.globalCompositeOperation="darker"}}}at=aI}}function H(aI){if(I!==aI){e.lineWidth=aI;I=aI}}function Y(aI){if(j!==aI){e.lineCap=aI;j=aI}}function aA(aI){if(ao!==aI){e.lineJoin=aI;ao=aI}}function au(aI){if(v!==aI){e.strokeStyle=aI;v=aI}}function ai(aI){if(ar!==aI){e.fillStyle=aI;ar=aI}}function U(aI,aJ){if(G!==aI||ak!==aJ){e.setLineDash([aI,aJ]);G=aI;ak=aJ}}};THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -viewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;","else shadowKernel[0][0] = 0.0;","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;","else shadowKernel[0][1] = 0.0;","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;","else shadowKernel[0][2] = 0.0;","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;","else shadowKernel[1][0] = 0.0;","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;","else shadowKernel[1][1] = 0.0;","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;","else shadowKernel[1][2] = 0.0;","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;","else shadowKernel[2][0] = 0.0;","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;","else shadowKernel[2][1] = 0.0;","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;","else shadowKernel[2][2] = 0.0;","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")};THREE.UniformsUtils={merge:function(b){var c,e,d,a={};for(c=0;c<b.length;c++){d=this.clone(b[c]);for(e in d){a[e]=d[e]}}return a},clone:function(a){var d,e,f,c,b={};for(d in a){b[d]={};for(e in a[d]){c=a[d][e];if(c instanceof THREE.Color||c instanceof THREE.Vector2||c instanceof THREE.Vector3||c instanceof THREE.Vector4||c instanceof THREE.Matrix4||c instanceof THREE.Texture){b[d][e]=c.clone()}else{if(c instanceof Array){b[d][e]=c.slice()}else{b[d][e]=c}}}}return b}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}};THREE.WebGLRenderer=function(aK){console.log("THREE.WebGLRenderer",THREE.REVISION);aK=aK||{};var aV=aK.canvas!==undefined?aK.canvas:document.createElement("canvas"),j=aK.precision!==undefined?aK.precision:"highp",bA=aK.alpha!==undefined?aK.alpha:true,aY=aK.premultipliedAlpha!==undefined?aK.premultipliedAlpha:true,bW=aK.antialias!==undefined?aK.antialias:false,e=aK.stencil!==undefined?aK.stencil:true,T=aK.preserveDrawingBuffer!==undefined?aK.preserveDrawingBuffer:false,bp=aK.clearColor!==undefined?new THREE.Color(aK.clearColor):new THREE.Color(0),S=aK.clearAlpha!==undefined?aK.clearAlpha:0;this.domElement=aV;this.context=null;this.devicePixelRatio=aK.devicePixelRatio!==undefined?aK.devicePixelRatio:window.devicePixelRatio!==undefined?window.devicePixelRatio:1;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.autoUpdateObjects=true;this.autoUpdateScene=true;this.gammaInput=false;this.gammaOutput=false;this.physicallyBasedShading=false;this.shadowMapEnabled=false;this.shadowMapAutoUpdate=true;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapDebug=false;this.shadowMapCascade=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var aL=this,bB=[],ay=0,aj=null,bD=null,aZ=-1,z=null,aI=null,Q=0,bc=0,bi=-1,k=-1,i=-1,ag=-1,bN=-1,aq=-1,a=-1,bw=-1,aH=null,bL=null,a8=null,bk=null,a1=0,a0=0,bP=0,aS=0,x=0,aR=0,H={},bq=new THREE.Frustum(),aX=new THREE.Matrix4(),A=new THREE.Matrix4(),R=new THREE.Vector3(),aJ=new THREE.Vector3(),bX=true,bn={ambient:[0,0,0],directional:{length:0,colors:new Array(),positions:new Array()},point:{length:0,colors:new Array(),positions:new Array(),distances:new Array()},spot:{length:0,colors:new Array(),positions:new Array(),distances:new Array(),directions:new Array(),anglesCos:new Array(),exponents:new Array()},hemi:{length:0,skyColors:new Array(),groundColors:new Array(),positions:new Array()}};var c;var m;var bb;var p;var aC;bo();ba();this.context=c;var bG=c.getParameter(c.MAX_TEXTURE_IMAGE_UNITS);var b=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS);var w=c.getParameter(c.MAX_TEXTURE_SIZE);var al=c.getParameter(c.MAX_CUBE_MAP_TEXTURE_SIZE);var bz=p?c.getParameter(p.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0;var aT=(b>0);var U=aT&&m;var bx=aC?c.getParameter(c.COMPRESSED_TEXTURE_FORMATS):[];var bu=c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.HIGH_FLOAT);var bO=c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.MEDIUM_FLOAT);var bK=c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.LOW_FLOAT);var ak=c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.HIGH_FLOAT);var bC=c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.MEDIUM_FLOAT);var aw=c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.LOW_FLOAT);var l=c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.HIGH_INT);var aD=c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.MEDIUM_INT);var K=c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.LOW_INT);var bs=c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.HIGH_INT);var s=c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.MEDIUM_INT);var bh=c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.LOW_INT);var bQ=bu.precision>0&&ak.precision>0;var bg=bO.precision>0&&bC.precision>0;if(j==="highp"&&!bQ){if(bg){j="mediump";console.warn("WebGLRenderer: highp not supported, using mediump")}else{j="lowp";console.warn("WebGLRenderer: highp and mediump not supported, using lowp")}}if(j==="mediump"&&!bg){j="lowp";console.warn("WebGLRenderer: mediump not supported, using lowp")}this.getContext=function(){return c};this.supportsVertexTextures=function(){return aT};this.supportsFloatTextures=function(){return m};this.supportsStandardDerivatives=function(){return bb};this.supportsCompressedTextureS3TC=function(){return aC};this.getMaxAnisotropy=function(){return bz};this.getPrecision=function(){return j};this.setSize=function(bZ,bY){aV.width=bZ*this.devicePixelRatio;aV.height=bY*this.devicePixelRatio;aV.style.width=bZ+"px";aV.style.height=bY+"px";this.setViewport(0,0,aV.width,aV.height)};this.setViewport=function(bZ,b1,b0,bY){a1=bZ!==undefined?bZ:0;a0=b1!==undefined?b1:0;bP=b0!==undefined?b0:aV.width;aS=bY!==undefined?bY:aV.height;c.viewport(a1,a0,bP,aS)};this.setScissor=function(bZ,b1,b0,bY){c.scissor(bZ,b1,b0,bY)};this.enableScissorTest=function(bY){bY?c.enable(c.SCISSOR_TEST):c.disable(c.SCISSOR_TEST)};this.setClearColorHex=function(bY,bZ){bp.setHex(bY);S=bZ;c.clearColor(bp.r,bp.g,bp.b,S)};this.setClearColor=function(bY,bZ){bp.copy(bY);S=bZ;c.clearColor(bp.r,bp.g,bp.b,S)};this.getClearColor=function(){return bp};this.getClearAlpha=function(){return S};this.clear=function(bY,b1,bZ){var b0=0;if(bY===undefined||bY){b0|=c.COLOR_BUFFER_BIT}if(b1===undefined||b1){b0|=c.DEPTH_BUFFER_BIT}if(bZ===undefined||bZ){b0|=c.STENCIL_BUFFER_BIT}c.clear(b0)};this.clearTarget=function(b0,bY,b1,bZ){this.setRenderTarget(b0);this.clear(bY,b1,bZ)};this.addPostPlugin=function(bY){bY.init(this);this.renderPluginsPost.push(bY)};this.addPrePlugin=function(bY){bY.init(this);this.renderPluginsPre.push(bY)};this.updateShadowMap=function(bZ,bY){aj=null;i=-1;a=-1;bw=-1;z=-1;aZ=-1;bX=true;bi=-1;k=-1;this.shadowMapPlugin.update(bZ,bY)};function B(bY){bY.__webglVertexBuffer=c.createBuffer();bY.__webglColorBuffer=c.createBuffer();aL.info.memory.geometries++}function ab(bY){bY.__webglVertexBuffer=c.createBuffer();bY.__webglColorBuffer=c.createBuffer();bY.__webglLineDistanceBuffer=c.createBuffer();aL.info.memory.geometries++}function aa(bY){bY.__webglVertexBuffer=c.createBuffer();bY.__webglColorBuffer=c.createBuffer();bY.__webglNormalBuffer=c.createBuffer();aL.info.memory.geometries++}function aB(bZ){bZ.__webglVertexBuffer=c.createBuffer();bZ.__webglNormalBuffer=c.createBuffer();bZ.__webglTangentBuffer=c.createBuffer();bZ.__webglColorBuffer=c.createBuffer();bZ.__webglUVBuffer=c.createBuffer();bZ.__webglUV2Buffer=c.createBuffer();bZ.__webglSkinIndicesBuffer=c.createBuffer();bZ.__webglSkinWeightsBuffer=c.createBuffer();bZ.__webglFaceBuffer=c.createBuffer();bZ.__webglLineBuffer=c.createBuffer();var bY,b0;if(bZ.numMorphTargets){bZ.__webglMorphTargetsBuffers=[];for(bY=0,b0=bZ.numMorphTargets;bY<b0;bY++){bZ.__webglMorphTargetsBuffers.push(c.createBuffer())}}if(bZ.numMorphNormals){bZ.__webglMorphNormalsBuffers=[];for(bY=0,b0=bZ.numMorphNormals;bY<b0;bY++){bZ.__webglMorphNormalsBuffers.push(c.createBuffer())}}aL.info.memory.geometries++}var aW=function(bY){var bZ=bY.target;bZ.removeEventListener("dispose",aW);bS(bZ);aL.info.memory.geometries--};var ae=function(bZ){var bY=bZ.target;bY.removeEventListener("dispose",ae);D(bY);aL.info.memory.textures--};var N=function(bY){var bZ=bY.target;bZ.removeEventListener("dispose",N);az(bZ);aL.info.memory.textures--};var bf=function(bZ){var bY=bZ.target;bY.removeEventListener("dispose",bf);M(bY)};var bS=function(b1){b1.__webglInit=undefined;if(b1.__webglVertexBuffer!==undefined){c.deleteBuffer(b1.__webglVertexBuffer)}if(b1.__webglNormalBuffer!==undefined){c.deleteBuffer(b1.__webglNormalBuffer)}if(b1.__webglTangentBuffer!==undefined){c.deleteBuffer(b1.__webglTangentBuffer)}if(b1.__webglColorBuffer!==undefined){c.deleteBuffer(b1.__webglColorBuffer)}if(b1.__webglUVBuffer!==undefined){c.deleteBuffer(b1.__webglUVBuffer)}if(b1.__webglUV2Buffer!==undefined){c.deleteBuffer(b1.__webglUV2Buffer)}if(b1.__webglSkinIndicesBuffer!==undefined){c.deleteBuffer(b1.__webglSkinIndicesBuffer)}if(b1.__webglSkinWeightsBuffer!==undefined){c.deleteBuffer(b1.__webglSkinWeightsBuffer)}if(b1.__webglFaceBuffer!==undefined){c.deleteBuffer(b1.__webglFaceBuffer)}if(b1.__webglLineBuffer!==undefined){c.deleteBuffer(b1.__webglLineBuffer)}if(b1.__webglLineDistanceBuffer!==undefined){c.deleteBuffer(b1.__webglLineDistanceBuffer)}if(b1.geometryGroups!==undefined){for(var b0 in b1.geometryGroups){var bZ=b1.geometryGroups[b0];if(bZ.numMorphTargets!==undefined){for(var bY=0,b2=bZ.numMorphTargets;bY<b2;bY++){c.deleteBuffer(bZ.__webglMorphTargetsBuffers[bY])}}if(bZ.numMorphNormals!==undefined){for(var bY=0,b2=bZ.numMorphNormals;bY<b2;bY++){c.deleteBuffer(bZ.__webglMorphNormalsBuffers[bY])}}Z(bZ)}}Z(b1)};var D=function(bY){if(bY.image&&bY.image.__webglTextureCube){c.deleteTexture(bY.image.__webglTextureCube)}else{if(!bY.__webglInit){return}bY.__webglInit=false;c.deleteTexture(bY.__webglTexture)}};var az=function(bZ){if(!bZ||!bZ.__webglTexture){return}c.deleteTexture(bZ.__webglTexture);if(bZ instanceof THREE.WebGLRenderTargetCube){for(var bY=0;bY<6;bY++){c.deleteFramebuffer(bZ.__webglFramebuffer[bY]);c.deleteRenderbuffer(bZ.__webglRenderbuffer[bY])}}else{c.deleteFramebuffer(bZ.__webglFramebuffer);c.deleteRenderbuffer(bZ.__webglRenderbuffer)}};var M=function(b4){var b0=b4.program;if(b0===undefined){return}b4.program=undefined;var b1,bZ,b3;var b2=false;for(b1=0,bZ=bB.length;b1<bZ;b1++){b3=bB[b1];if(b3.program===b0){b3.usedTimes--;if(b3.usedTimes===0){b2=true}break}}if(b2===true){var bY=[];for(b1=0,bZ=bB.length;b1<bZ;b1++){b3=bB[b1];if(b3.program!==b0){bY.push(b3)}}bB=bY;c.deleteProgram(b0);aL.info.memory.programs--}};function Z(bY){if(bY.__webglCustomAttributesList){for(var bZ in bY.__webglCustomAttributesList){c.deleteBuffer(bY.__webglCustomAttributesList[bZ].buffer)}}}function bT(b4,bZ){var b1=b4.vertices.length;var b2=bZ.material;if(b2.attributes){if(b4.__webglCustomAttributesList===undefined){b4.__webglCustomAttributesList=[]}for(var bY in b2.attributes){var b3=b2.attributes[bY];if(!b3.__webglInitialized||b3.createUniqueBuffers){b3.__webglInitialized=true;var b0=1;if(b3.type==="v2"){b0=2}else{if(b3.type==="v3"){b0=3}else{if(b3.type==="v4"){b0=4}else{if(b3.type==="c"){b0=3}}}}b3.size=b0;b3.array=new Float32Array(b1*b0);b3.buffer=c.createBuffer();b3.buffer.belongsToAttribute=bY;b3.needsUpdate=true}b4.__webglCustomAttributesList.push(b3)}}}function bH(b0,bY){var bZ=b0.vertices.length;b0.__vertexArray=new Float32Array(bZ*3);b0.__colorArray=new Float32Array(bZ*3);b0.__sortArray=[];b0.__webglParticleCount=bZ;bT(b0,bY)}function E(b0,bY){var bZ=b0.vertices.length;b0.__vertexArray=new Float32Array(bZ*3);b0.__colorArray=new Float32Array(bZ*3);b0.__lineDistanceArray=new Float32Array(bZ*1);b0.__webglLineCount=bZ;bT(b0,bY)}function bR(b0,bY){var bZ=b0.vertices.length;b0.__vertexArray=new Float32Array(bZ*3);b0.__colorArray=new Float32Array(bZ*3);b0.__normalArray=new Float32Array(bZ*3);b0.__webglVertexCount=bZ;bT(b0,bY)}function ai(b6,cf){var bY=cf.geometry,cg=b6.faces3,ce=b6.faces4,b9=cg.length*3+ce.length*4,b1=cg.length*1+ce.length*2,b3=cg.length*3+ce.length*4,b0=F(cf,b6),b5=br(b0),b7=aO(b0),cc=bJ(b0);b6.__vertexArray=new Float32Array(b9*3);if(b7){b6.__normalArray=new Float32Array(b9*3)}if(bY.hasTangents){b6.__tangentArray=new Float32Array(b9*4)}if(cc){b6.__colorArray=new Float32Array(b9*3)}if(b5){if(bY.faceUvs.length>0||bY.faceVertexUvs.length>0){b6.__uvArray=new Float32Array(b9*2)}if(bY.faceUvs.length>1||bY.faceVertexUvs.length>1){b6.__uv2Array=new Float32Array(b9*2)}}if(cf.geometry.skinWeights.length&&cf.geometry.skinIndices.length){b6.__skinIndexArray=new Float32Array(b9*4);b6.__skinWeightArray=new Float32Array(b9*4)}b6.__faceArray=new Uint16Array(b1*3);b6.__lineArray=new Uint16Array(b3*2);var b8,cb;if(b6.numMorphTargets){b6.__morphTargetsArrays=[];for(b8=0,cb=b6.numMorphTargets;b8<cb;b8++){b6.__morphTargetsArrays.push(new Float32Array(b9*3))}}if(b6.numMorphNormals){b6.__morphNormalsArrays=[];for(b8=0,cb=b6.numMorphNormals;b8<cb;b8++){b6.__morphNormalsArrays.push(new Float32Array(b9*3))}}b6.__webglFaceCount=b1*3;b6.__webglLineCount=b3*2;if(b0.attributes){if(b6.__webglCustomAttributesList===undefined){b6.__webglCustomAttributesList=[]}for(var cd in b0.attributes){var ca=b0.attributes[cd];var b2={};for(var bZ in ca){b2[bZ]=ca[bZ]}if(!b2.__webglInitialized||b2.createUniqueBuffers){b2.__webglInitialized=true;var b4=1;if(b2.type==="v2"){b4=2}else{if(b2.type==="v3"){b4=3}else{if(b2.type==="v4"){b4=4}else{if(b2.type==="c"){b4=3}}}}b2.size=b4;b2.array=new Float32Array(b9*b4);b2.buffer=c.createBuffer();b2.buffer.belongsToAttribute=cd;ca.needsUpdate=true;b2.__original=ca}b6.__webglCustomAttributesList.push(b2)}}b6.__inittedArrays=true}function F(bZ,bY){return bZ.material instanceof THREE.MeshFaceMaterial?bZ.material.materials[bY.materialIndex]:bZ.material}function by(bY){return bY&&bY.shading!==undefined&&bY.shading===THREE.SmoothShading}function aO(bY){if((bY instanceof THREE.MeshBasicMaterial&&!bY.envMap)||bY instanceof THREE.MeshDepthMaterial){return false}if(by(bY)){return THREE.SmoothShading}else{return THREE.FlatShading}}function bJ(bY){if(bY.vertexColors){return bY.vertexColors}return false}function br(bY){if(bY.map||bY.lightMap||bY.bumpMap||bY.normalMap||bY.specularMap||bY instanceof THREE.ShaderMaterial){return true}return false}function y(b1){var bY,b0,bZ;for(bY in b1.attributes){if(bY==="index"){bZ=c.ELEMENT_ARRAY_BUFFER}else{bZ=c.ARRAY_BUFFER}b0=b1.attributes[bY];b0.buffer=c.createBuffer();c.bindBuffer(bZ,b0.buffer);c.bufferData(bZ,b0.array,c.STATIC_DRAW)}}function a4(bZ,cc,cq){var b9,co,cm,b1,b4,ci,b2=bZ.vertices,cn=b2.length,b6=bZ.colors,b5=b6.length,cb=bZ.__vertexArray,bY=bZ.__colorArray,b0=bZ.__sortArray,cg=bZ.verticesNeedUpdate,b3=bZ.elementsNeedUpdate,cd=bZ.colorsNeedUpdate,cf=bZ.__webglCustomAttributesList,cj,b7,cp,ce,b8,ch,ck;if(cq.sortParticles){A.copy(aX);A.multiply(cq.matrixWorld);for(b9=0;b9<cn;b9++){cm=b2[b9];R.copy(cm);R.applyProjection(A);b0[b9]=[R.z,b9]}b0.sort(X);for(b9=0;b9<cn;b9++){cm=b2[b0[b9][1]];b1=b9*3;cb[b1]=cm.x;cb[b1+1]=cm.y;cb[b1+2]=cm.z}for(co=0;co<b5;co++){b1=co*3;ci=b6[b0[co][1]];bY[b1]=ci.r;bY[b1+1]=ci.g;bY[b1+2]=ci.b}if(cf){for(cj=0,b7=cf.length;cj<b7;cj++){ck=cf[cj];if(!(ck.boundTo===undefined||ck.boundTo==="vertices")){continue}b1=0;b8=ck.value.length;if(ck.size===1){for(ce=0;ce<b8;ce++){b4=b0[ce][1];ck.array[ce]=ck.value[b4]}}else{if(ck.size===2){for(ce=0;ce<b8;ce++){b4=b0[ce][1];ch=ck.value[b4];ck.array[b1]=ch.x;ck.array[b1+1]=ch.y;b1+=2}}else{if(ck.size===3){if(ck.type==="c"){for(ce=0;ce<b8;ce++){b4=b0[ce][1];ch=ck.value[b4];ck.array[b1]=ch.r;ck.array[b1+1]=ch.g;ck.array[b1+2]=ch.b;b1+=3}}else{for(ce=0;ce<b8;ce++){b4=b0[ce][1];ch=ck.value[b4];ck.array[b1]=ch.x;ck.array[b1+1]=ch.y;ck.array[b1+2]=ch.z;b1+=3}}}else{if(ck.size===4){for(ce=0;ce<b8;ce++){b4=b0[ce][1];ch=ck.value[b4];ck.array[b1]=ch.x;ck.array[b1+1]=ch.y;ck.array[b1+2]=ch.z;ck.array[b1+3]=ch.w;b1+=4}}}}}}}}else{if(cg){for(b9=0;b9<cn;b9++){cm=b2[b9];b1=b9*3;cb[b1]=cm.x;cb[b1+1]=cm.y;cb[b1+2]=cm.z}}if(cd){for(co=0;co<b5;co++){ci=b6[co];b1=co*3;bY[b1]=ci.r;bY[b1+1]=ci.g;bY[b1+2]=ci.b}}if(cf){for(cj=0,b7=cf.length;cj<b7;cj++){ck=cf[cj];if(ck.needsUpdate&&(ck.boundTo===undefined||ck.boundTo==="vertices")){b8=ck.value.length;b1=0;if(ck.size===1){for(ce=0;ce<b8;ce++){ck.array[ce]=ck.value[ce]}}else{if(ck.size===2){for(ce=0;ce<b8;ce++){ch=ck.value[ce];ck.array[b1]=ch.x;ck.array[b1+1]=ch.y;b1+=2}}else{if(ck.size===3){if(ck.type==="c"){for(ce=0;ce<b8;ce++){ch=ck.value[ce];ck.array[b1]=ch.r;ck.array[b1+1]=ch.g;ck.array[b1+2]=ch.b;b1+=3}}else{for(ce=0;ce<b8;ce++){ch=ck.value[ce];ck.array[b1]=ch.x;ck.array[b1+1]=ch.y;ck.array[b1+2]=ch.z;b1+=3}}}else{if(ck.size===4){for(ce=0;ce<b8;ce++){ch=ck.value[ce];ck.array[b1]=ch.x;ck.array[b1+1]=ch.y;ck.array[b1+2]=ch.z;ck.array[b1+3]=ch.w;b1+=4}}}}}}}}}if(cg||cq.sortParticles){c.bindBuffer(c.ARRAY_BUFFER,bZ.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,cb,cc)}if(cd||cq.sortParticles){c.bindBuffer(c.ARRAY_BUFFER,bZ.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,bY,cc)}if(cf){for(cj=0,b7=cf.length;cj<b7;cj++){ck=cf[cj];if(ck.needsUpdate||cq.sortParticles){c.bindBuffer(c.ARRAY_BUFFER,ck.buffer);c.bufferData(c.ARRAY_BUFFER,ck.array,cc)}}}}function bl(b1,cc){var b8,cq,co,cn,b2,ci,b3=b1.vertices,b5=b1.colors,cb=b1.lineDistances,cp=b3.length,b4=b5.length,cj=cb.length,b9=b1.__vertexArray,b0=b1.__colorArray,bY=b1.__lineDistanceArray,cg=b1.verticesNeedUpdate,cd=b1.colorsNeedUpdate,bZ=b1.lineDistancesNeedUpdate,cf=b1.__webglCustomAttributesList,ck,b6,cr,ce,b7,ch,cm;if(cg){for(b8=0;b8<cp;b8++){cn=b3[b8];b2=b8*3;b9[b2]=cn.x;b9[b2+1]=cn.y;b9[b2+2]=cn.z}c.bindBuffer(c.ARRAY_BUFFER,b1.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,b9,cc)}if(cd){for(cq=0;cq<b4;cq++){ci=b5[cq];b2=cq*3;b0[b2]=ci.r;b0[b2+1]=ci.g;b0[b2+2]=ci.b}c.bindBuffer(c.ARRAY_BUFFER,b1.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,b0,cc)}if(bZ){for(co=0;co<cj;co++){bY[co]=cb[co]}c.bindBuffer(c.ARRAY_BUFFER,b1.__webglLineDistanceBuffer);c.bufferData(c.ARRAY_BUFFER,bY,cc)}if(cf){for(ck=0,b6=cf.length;ck<b6;ck++){cm=cf[ck];if(cm.needsUpdate&&(cm.boundTo===undefined||cm.boundTo==="vertices")){b2=0;b7=cm.value.length;if(cm.size===1){for(ce=0;ce<b7;ce++){cm.array[ce]=cm.value[ce]}}else{if(cm.size===2){for(ce=0;ce<b7;ce++){ch=cm.value[ce];cm.array[b2]=ch.x;cm.array[b2+1]=ch.y;b2+=2}}else{if(cm.size===3){if(cm.type==="c"){for(ce=0;ce<b7;ce++){ch=cm.value[ce];cm.array[b2]=ch.r;cm.array[b2+1]=ch.g;cm.array[b2+2]=ch.b;b2+=3}}else{for(ce=0;ce<b7;ce++){ch=cm.value[ce];cm.array[b2]=ch.x;cm.array[b2+1]=ch.y;cm.array[b2+2]=ch.z;b2+=3}}}else{if(cm.size===4){for(ce=0;ce<b7;ce++){ch=cm.value[ce];cm.array[b2]=ch.x;cm.array[b2+1]=ch.y;cm.array[b2+2]=ch.z;cm.array[b2+3]=ch.w;b2+=4}}}}}c.bindBuffer(c.ARRAY_BUFFER,cm.buffer);c.bufferData(c.ARRAY_BUFFER,cm.array,cc)}}}}function P(b0,cb){var b8,cq,ch,cm,b1,cj,cr,ck,b6,cg,b9,cn,ci,b2=b0.vertices,b5=b0.colors,cd=b0.normals,cp=b2.length,b4=b5.length,bY=cd.length,b7=b0.__vertexArray,bZ=b0.__colorArray,co=b0.__normalArray,cf=b0.verticesNeedUpdate,cc=b0.colorsNeedUpdate,b3=b0.normalsNeedUpdate,ce=b0.__webglCustomAttributesList;if(cf){for(b8=0;b8<cp;b8++){cm=b2[b8];b1=b8*3;b7[b1]=cm.x;b7[b1+1]=cm.y;b7[b1+2]=cm.z}c.bindBuffer(c.ARRAY_BUFFER,b0.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,b7,cb)}if(cc){for(cq=0;cq<b4;cq++){cj=b5[cq];b1=cq*3;bZ[b1]=cj.r;bZ[b1+1]=cj.g;bZ[b1+2]=cj.b}c.bindBuffer(c.ARRAY_BUFFER,b0.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,bZ,cb)}if(b3){for(ch=0;ch<bY;ch++){cr=cd[ch];b1=ch*3;co[b1]=cr.x;co[b1+1]=cr.y;co[b1+2]=cr.z}c.bindBuffer(c.ARRAY_BUFFER,b0.__webglNormalBuffer);c.bufferData(c.ARRAY_BUFFER,co,cb)}if(ce){for(ck=0,b6=ce.length;ck<b6;ck++){cn=ce[ck];if(cn.needsUpdate&&(cn.boundTo===undefined||cn.boundTo==="vertices")){b1=0;b9=cn.value.length;if(cn.size===1){for(cg=0;cg<b9;cg++){cn.array[cg]=cn.value[cg]}}else{if(cn.size===2){for(cg=0;cg<b9;cg++){ci=cn.value[cg];cn.array[b1]=ci.x;cn.array[b1+1]=ci.y;b1+=2}}else{if(cn.size===3){if(cn.type==="c"){for(cg=0;cg<b9;cg++){ci=cn.value[cg];cn.array[b1]=ci.r;cn.array[b1+1]=ci.g;cn.array[b1+2]=ci.b;b1+=3}}else{for(cg=0;cg<b9;cg++){ci=cn.value[cg];cn.array[b1]=ci.x;cn.array[b1+1]=ci.y;cn.array[b1+2]=ci.z;b1+=3}}}else{if(cn.size===4){for(cg=0;cg<b9;cg++){ci=cn.value[cg];cn.array[b1]=ci.x;cn.array[b1+1]=ci.y;cn.array[b1+2]=ci.z;cn.array[b1+3]=ci.w;b1+=4}}}}}c.bindBuffer(c.ARRAY_BUFFER,cn.buffer);c.bufferData(c.ARRAY_BUFFER,cn.array,cb)}}}}function n(di,dp,dS,cc,dQ){if(!di.__inittedArrays){return}var cK=aO(dQ),b9=bJ(dQ),dh=br(dQ),cz=(cK===THREE.SmoothShading);var cQ,dB,dH,bZ,cg,b4,cV,ch,cJ,b0,cI,dN,c8,c7,c6,c5,dO,dM,dK,dI,dG,dD,dC,dA,df,de,dc,db,dw,dv,ds,dr,b8,b7,b6,b5,cF,cD,cC,cB,cn,cl,cj,ci,cM,dl,cP,cH,cs,da,dg,ct,cA,cL,dd,cR,c9,cU,cp=0,ce=0,dk=0,dL=0,cN=0,cy=0,cf=0,c0=0,cd=0,cO=0,bY=0,ca=0,ck=0,cE,b3=di.__vertexArray,cx=di.__uvArray,cb=di.__uv2Array,dq=di.__normalArray,du=di.__tangentArray,cX=di.__colorArray,dn=di.__skinIndexArray,dF=di.__skinWeightArray,dE=di.__morphTargetsArrays,cu=di.__morphNormalsArrays,cw=di.__webglCustomAttributesList,b2,dJ=di.__faceArray,cT=di.__lineArray,dj=dp.geometry,cr=dj.verticesNeedUpdate,cS=dj.elementsNeedUpdate,cY=dj.uvsNeedUpdate,b1=dj.normalsNeedUpdate,dP=dj.tangentsNeedUpdate,dt=dj.colorsNeedUpdate,dT=dj.morphTargetsNeedUpdate,cZ=dj.vertices,co=di.faces3,cm=di.faces4,dx=dj.faces,cW=dj.faceVertexUvs[0],cv=dj.faceVertexUvs[1],dy=dj.colors,cG=dj.skinIndices,dz=dj.skinWeights,dR=dj.morphTargets,dm=dj.morphNormals;if(cr){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];c8=cZ[bZ.a];c7=cZ[bZ.b];c6=cZ[bZ.c];b3[ce]=c8.x;b3[ce+1]=c8.y;b3[ce+2]=c8.z;b3[ce+3]=c7.x;b3[ce+4]=c7.y;b3[ce+5]=c7.z;b3[ce+6]=c6.x;b3[ce+7]=c6.y;b3[ce+8]=c6.z;ce+=9}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];c8=cZ[bZ.a];c7=cZ[bZ.b];c6=cZ[bZ.c];c5=cZ[bZ.d];b3[ce]=c8.x;b3[ce+1]=c8.y;b3[ce+2]=c8.z;b3[ce+3]=c7.x;b3[ce+4]=c7.y;b3[ce+5]=c7.z;b3[ce+6]=c6.x;b3[ce+7]=c6.y;b3[ce+8]=c6.z;b3[ce+9]=c5.x;b3[ce+10]=c5.y;b3[ce+11]=c5.z;ce+=12}c.bindBuffer(c.ARRAY_BUFFER,di.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,b3,dS)}if(dT){for(ct=0,cA=dR.length;ct<cA;ct++){bY=0;for(cQ=0,dB=co.length;cQ<dB;cQ++){cR=co[cQ];bZ=dx[cR];c8=dR[ct].vertices[bZ.a];c7=dR[ct].vertices[bZ.b];c6=dR[ct].vertices[bZ.c];cL=dE[ct];cL[bY]=c8.x;cL[bY+1]=c8.y;cL[bY+2]=c8.z;cL[bY+3]=c7.x;cL[bY+4]=c7.y;cL[bY+5]=c7.z;cL[bY+6]=c6.x;cL[bY+7]=c6.y;cL[bY+8]=c6.z;if(dQ.morphNormals){if(cz){c9=dm[ct].vertexNormals[cR];dG=c9.a;dD=c9.b;dC=c9.c}else{dG=dm[ct].faceNormals[cR];dD=dG;dC=dG}dd=cu[ct];dd[bY]=dG.x;dd[bY+1]=dG.y;dd[bY+2]=dG.z;dd[bY+3]=dD.x;dd[bY+4]=dD.y;dd[bY+5]=dD.z;dd[bY+6]=dC.x;dd[bY+7]=dC.y;dd[bY+8]=dC.z}bY+=9}for(cQ=0,dB=cm.length;cQ<dB;cQ++){cR=cm[cQ];bZ=dx[cR];c8=dR[ct].vertices[bZ.a];c7=dR[ct].vertices[bZ.b];c6=dR[ct].vertices[bZ.c];c5=dR[ct].vertices[bZ.d];cL=dE[ct];cL[bY]=c8.x;cL[bY+1]=c8.y;cL[bY+2]=c8.z;cL[bY+3]=c7.x;cL[bY+4]=c7.y;cL[bY+5]=c7.z;cL[bY+6]=c6.x;cL[bY+7]=c6.y;cL[bY+8]=c6.z;cL[bY+9]=c5.x;cL[bY+10]=c5.y;cL[bY+11]=c5.z;if(dQ.morphNormals){if(cz){c9=dm[ct].vertexNormals[cR];dG=c9.a;dD=c9.b;dC=c9.c;dA=c9.d}else{dG=dm[ct].faceNormals[cR];dD=dG;dC=dG;dA=dG}dd=cu[ct];dd[bY]=dG.x;dd[bY+1]=dG.y;dd[bY+2]=dG.z;dd[bY+3]=dD.x;dd[bY+4]=dD.y;dd[bY+5]=dD.z;dd[bY+6]=dC.x;dd[bY+7]=dC.y;dd[bY+8]=dC.z;dd[bY+9]=dA.x;dd[bY+10]=dA.y;dd[bY+11]=dA.z}bY+=12}c.bindBuffer(c.ARRAY_BUFFER,di.__webglMorphTargetsBuffers[ct]);c.bufferData(c.ARRAY_BUFFER,dE[ct],dS);if(dQ.morphNormals){c.bindBuffer(c.ARRAY_BUFFER,di.__webglMorphNormalsBuffers[ct]);c.bufferData(c.ARRAY_BUFFER,cu[ct],dS)}}}if(dz.length){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];dw=dz[bZ.a];dv=dz[bZ.b];ds=dz[bZ.c];dF[cO]=dw.x;dF[cO+1]=dw.y;dF[cO+2]=dw.z;dF[cO+3]=dw.w;dF[cO+4]=dv.x;dF[cO+5]=dv.y;dF[cO+6]=dv.z;dF[cO+7]=dv.w;dF[cO+8]=ds.x;dF[cO+9]=ds.y;dF[cO+10]=ds.z;dF[cO+11]=ds.w;b8=cG[bZ.a];b7=cG[bZ.b];b6=cG[bZ.c];dn[cO]=b8.x;dn[cO+1]=b8.y;dn[cO+2]=b8.z;dn[cO+3]=b8.w;dn[cO+4]=b7.x;dn[cO+5]=b7.y;dn[cO+6]=b7.z;dn[cO+7]=b7.w;dn[cO+8]=b6.x;dn[cO+9]=b6.y;dn[cO+10]=b6.z;dn[cO+11]=b6.w;cO+=12}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];dw=dz[bZ.a];dv=dz[bZ.b];ds=dz[bZ.c];dr=dz[bZ.d];dF[cO]=dw.x;dF[cO+1]=dw.y;dF[cO+2]=dw.z;dF[cO+3]=dw.w;dF[cO+4]=dv.x;dF[cO+5]=dv.y;dF[cO+6]=dv.z;dF[cO+7]=dv.w;dF[cO+8]=ds.x;dF[cO+9]=ds.y;dF[cO+10]=ds.z;dF[cO+11]=ds.w;dF[cO+12]=dr.x;dF[cO+13]=dr.y;dF[cO+14]=dr.z;dF[cO+15]=dr.w;b8=cG[bZ.a];b7=cG[bZ.b];b6=cG[bZ.c];b5=cG[bZ.d];dn[cO]=b8.x;dn[cO+1]=b8.y;dn[cO+2]=b8.z;dn[cO+3]=b8.w;dn[cO+4]=b7.x;dn[cO+5]=b7.y;dn[cO+6]=b7.z;dn[cO+7]=b7.w;dn[cO+8]=b6.x;dn[cO+9]=b6.y;dn[cO+10]=b6.z;dn[cO+11]=b6.w;dn[cO+12]=b5.x;dn[cO+13]=b5.y;dn[cO+14]=b5.z;dn[cO+15]=b5.w;cO+=16}if(cO>0){c.bindBuffer(c.ARRAY_BUFFER,di.__webglSkinIndicesBuffer);c.bufferData(c.ARRAY_BUFFER,dn,dS);c.bindBuffer(c.ARRAY_BUFFER,di.__webglSkinWeightsBuffer);c.bufferData(c.ARRAY_BUFFER,dF,dS)}}if(dt&&b9){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];ch=bZ.vertexColors;cJ=bZ.color;if(ch.length===3&&b9===THREE.VertexColors){df=ch[0];de=ch[1];dc=ch[2]}else{df=cJ;de=cJ;dc=cJ}cX[cd]=df.r;cX[cd+1]=df.g;cX[cd+2]=df.b;cX[cd+3]=de.r;cX[cd+4]=de.g;cX[cd+5]=de.b;cX[cd+6]=dc.r;cX[cd+7]=dc.g;cX[cd+8]=dc.b;cd+=9}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];ch=bZ.vertexColors;cJ=bZ.color;if(ch.length===4&&b9===THREE.VertexColors){df=ch[0];de=ch[1];dc=ch[2];db=ch[3]}else{df=cJ;de=cJ;dc=cJ;db=cJ}cX[cd]=df.r;cX[cd+1]=df.g;cX[cd+2]=df.b;cX[cd+3]=de.r;cX[cd+4]=de.g;cX[cd+5]=de.b;cX[cd+6]=dc.r;cX[cd+7]=dc.g;cX[cd+8]=dc.b;cX[cd+9]=db.r;cX[cd+10]=db.g;cX[cd+11]=db.b;cd+=12}if(cd>0){c.bindBuffer(c.ARRAY_BUFFER,di.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,cX,dS)}}if(dP&&dj.hasTangents){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];b0=bZ.vertexTangents;dO=b0[0];dM=b0[1];dK=b0[2];du[cf]=dO.x;du[cf+1]=dO.y;du[cf+2]=dO.z;du[cf+3]=dO.w;du[cf+4]=dM.x;du[cf+5]=dM.y;du[cf+6]=dM.z;du[cf+7]=dM.w;du[cf+8]=dK.x;du[cf+9]=dK.y;du[cf+10]=dK.z;du[cf+11]=dK.w;cf+=12}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];b0=bZ.vertexTangents;dO=b0[0];dM=b0[1];dK=b0[2];dI=b0[3];du[cf]=dO.x;du[cf+1]=dO.y;du[cf+2]=dO.z;du[cf+3]=dO.w;du[cf+4]=dM.x;du[cf+5]=dM.y;du[cf+6]=dM.z;du[cf+7]=dM.w;du[cf+8]=dK.x;du[cf+9]=dK.y;du[cf+10]=dK.z;du[cf+11]=dK.w;du[cf+12]=dI.x;du[cf+13]=dI.y;du[cf+14]=dI.z;du[cf+15]=dI.w;cf+=16}c.bindBuffer(c.ARRAY_BUFFER,di.__webglTangentBuffer);c.bufferData(c.ARRAY_BUFFER,du,dS)}if(b1&&cK){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];cg=bZ.vertexNormals;b4=bZ.normal;if(cg.length===3&&cz){for(cP=0;cP<3;cP++){cs=cg[cP];dq[cy]=cs.x;dq[cy+1]=cs.y;dq[cy+2]=cs.z;cy+=3}}else{for(cP=0;cP<3;cP++){dq[cy]=b4.x;dq[cy+1]=b4.y;dq[cy+2]=b4.z;cy+=3}}}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];cg=bZ.vertexNormals;b4=bZ.normal;if(cg.length===4&&cz){for(cP=0;cP<4;cP++){cs=cg[cP];dq[cy]=cs.x;dq[cy+1]=cs.y;dq[cy+2]=cs.z;cy+=3}}else{for(cP=0;cP<4;cP++){dq[cy]=b4.x;dq[cy+1]=b4.y;dq[cy+2]=b4.z;cy+=3}}}c.bindBuffer(c.ARRAY_BUFFER,di.__webglNormalBuffer);c.bufferData(c.ARRAY_BUFFER,dq,dS)}if(cY&&cW&&dh){for(cQ=0,dB=co.length;cQ<dB;cQ++){dH=co[cQ];cI=cW[dH];if(cI===undefined){continue}for(cP=0;cP<3;cP++){da=cI[cP];cx[dk]=da.x;cx[dk+1]=da.y;dk+=2}}for(cQ=0,dB=cm.length;cQ<dB;cQ++){dH=cm[cQ];cI=cW[dH];if(cI===undefined){continue}for(cP=0;cP<4;cP++){da=cI[cP];cx[dk]=da.x;cx[dk+1]=da.y;dk+=2}}if(dk>0){c.bindBuffer(c.ARRAY_BUFFER,di.__webglUVBuffer);c.bufferData(c.ARRAY_BUFFER,cx,dS)}}if(cY&&cv&&dh){for(cQ=0,dB=co.length;cQ<dB;cQ++){dH=co[cQ];dN=cv[dH];if(dN===undefined){continue}for(cP=0;cP<3;cP++){dg=dN[cP];cb[dL]=dg.x;cb[dL+1]=dg.y;dL+=2}}for(cQ=0,dB=cm.length;cQ<dB;cQ++){dH=cm[cQ];dN=cv[dH];if(dN===undefined){continue}for(cP=0;cP<4;cP++){dg=dN[cP];cb[dL]=dg.x;cb[dL+1]=dg.y;dL+=2}}if(dL>0){c.bindBuffer(c.ARRAY_BUFFER,di.__webglUV2Buffer);c.bufferData(c.ARRAY_BUFFER,cb,dS)}}if(cS){for(cQ=0,dB=co.length;cQ<dB;cQ++){dJ[cN]=cp;dJ[cN+1]=cp+1;dJ[cN+2]=cp+2;cN+=3;cT[c0]=cp;cT[c0+1]=cp+1;cT[c0+2]=cp;cT[c0+3]=cp+2;cT[c0+4]=cp+1;cT[c0+5]=cp+2;c0+=6;cp+=3}for(cQ=0,dB=cm.length;cQ<dB;cQ++){dJ[cN]=cp;dJ[cN+1]=cp+1;dJ[cN+2]=cp+3;dJ[cN+3]=cp+1;dJ[cN+4]=cp+2;dJ[cN+5]=cp+3;cN+=6;cT[c0]=cp;cT[c0+1]=cp+1;cT[c0+2]=cp;cT[c0+3]=cp+3;cT[c0+4]=cp+1;cT[c0+5]=cp+2;cT[c0+6]=cp+2;cT[c0+7]=cp+3;c0+=8;cp+=4}c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,di.__webglFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,dJ,dS);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,di.__webglLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,cT,dS)}if(cw){for(cP=0,cH=cw.length;cP<cH;cP++){b2=cw[cP];if(!b2.__original.needsUpdate){continue}ca=0;ck=0;if(b2.size===1){if(b2.boundTo===undefined||b2.boundTo==="vertices"){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];b2.array[ca]=b2.value[bZ.a];b2.array[ca+1]=b2.value[bZ.b];b2.array[ca+2]=b2.value[bZ.c];ca+=3}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];b2.array[ca]=b2.value[bZ.a];b2.array[ca+1]=b2.value[bZ.b];b2.array[ca+2]=b2.value[bZ.c];b2.array[ca+3]=b2.value[bZ.d];ca+=4}}else{if(b2.boundTo==="faces"){for(cQ=0,dB=co.length;cQ<dB;cQ++){cE=b2.value[co[cQ]];b2.array[ca]=cE;b2.array[ca+1]=cE;b2.array[ca+2]=cE;ca+=3}for(cQ=0,dB=cm.length;cQ<dB;cQ++){cE=b2.value[cm[cQ]];b2.array[ca]=cE;b2.array[ca+1]=cE;b2.array[ca+2]=cE;b2.array[ca+3]=cE;ca+=4}}}}else{if(b2.size===2){if(b2.boundTo===undefined||b2.boundTo==="vertices"){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];c8=b2.value[bZ.a];c7=b2.value[bZ.b];c6=b2.value[bZ.c];b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c7.x;b2.array[ca+3]=c7.y;b2.array[ca+4]=c6.x;b2.array[ca+5]=c6.y;ca+=6}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];c8=b2.value[bZ.a];c7=b2.value[bZ.b];c6=b2.value[bZ.c];c5=b2.value[bZ.d];b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c7.x;b2.array[ca+3]=c7.y;b2.array[ca+4]=c6.x;b2.array[ca+5]=c6.y;b2.array[ca+6]=c5.x;b2.array[ca+7]=c5.y;ca+=8}}else{if(b2.boundTo==="faces"){for(cQ=0,dB=co.length;cQ<dB;cQ++){cE=b2.value[co[cQ]];c8=cE;c7=cE;c6=cE;b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c7.x;b2.array[ca+3]=c7.y;b2.array[ca+4]=c6.x;b2.array[ca+5]=c6.y;ca+=6}for(cQ=0,dB=cm.length;cQ<dB;cQ++){cE=b2.value[cm[cQ]];c8=cE;c7=cE;c6=cE;c5=cE;b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c7.x;b2.array[ca+3]=c7.y;b2.array[ca+4]=c6.x;b2.array[ca+5]=c6.y;b2.array[ca+6]=c5.x;b2.array[ca+7]=c5.y;ca+=8}}}}else{if(b2.size===3){var cq;if(b2.type==="c"){cq=["r","g","b"]}else{cq=["x","y","z"]}if(b2.boundTo===undefined||b2.boundTo==="vertices"){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];c8=b2.value[bZ.a];c7=b2.value[bZ.b];c6=b2.value[bZ.c];b2.array[ca]=c8[cq[0]];b2.array[ca+1]=c8[cq[1]];b2.array[ca+2]=c8[cq[2]];b2.array[ca+3]=c7[cq[0]];b2.array[ca+4]=c7[cq[1]];b2.array[ca+5]=c7[cq[2]];b2.array[ca+6]=c6[cq[0]];b2.array[ca+7]=c6[cq[1]];b2.array[ca+8]=c6[cq[2]];ca+=9}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];c8=b2.value[bZ.a];c7=b2.value[bZ.b];c6=b2.value[bZ.c];c5=b2.value[bZ.d];b2.array[ca]=c8[cq[0]];b2.array[ca+1]=c8[cq[1]];b2.array[ca+2]=c8[cq[2]];b2.array[ca+3]=c7[cq[0]];b2.array[ca+4]=c7[cq[1]];b2.array[ca+5]=c7[cq[2]];b2.array[ca+6]=c6[cq[0]];b2.array[ca+7]=c6[cq[1]];b2.array[ca+8]=c6[cq[2]];b2.array[ca+9]=c5[cq[0]];b2.array[ca+10]=c5[cq[1]];b2.array[ca+11]=c5[cq[2]];ca+=12}}else{if(b2.boundTo==="faces"){for(cQ=0,dB=co.length;cQ<dB;cQ++){cE=b2.value[co[cQ]];c8=cE;c7=cE;c6=cE;b2.array[ca]=c8[cq[0]];b2.array[ca+1]=c8[cq[1]];b2.array[ca+2]=c8[cq[2]];b2.array[ca+3]=c7[cq[0]];b2.array[ca+4]=c7[cq[1]];b2.array[ca+5]=c7[cq[2]];b2.array[ca+6]=c6[cq[0]];b2.array[ca+7]=c6[cq[1]];b2.array[ca+8]=c6[cq[2]];ca+=9}for(cQ=0,dB=cm.length;cQ<dB;cQ++){cE=b2.value[cm[cQ]];c8=cE;c7=cE;c6=cE;c5=cE;b2.array[ca]=c8[cq[0]];b2.array[ca+1]=c8[cq[1]];b2.array[ca+2]=c8[cq[2]];b2.array[ca+3]=c7[cq[0]];b2.array[ca+4]=c7[cq[1]];b2.array[ca+5]=c7[cq[2]];b2.array[ca+6]=c6[cq[0]];b2.array[ca+7]=c6[cq[1]];b2.array[ca+8]=c6[cq[2]];b2.array[ca+9]=c5[cq[0]];b2.array[ca+10]=c5[cq[1]];b2.array[ca+11]=c5[cq[2]];ca+=12}}else{if(b2.boundTo==="faceVertices"){for(cQ=0,dB=co.length;cQ<dB;cQ++){cE=b2.value[co[cQ]];c8=cE[0];c7=cE[1];c6=cE[2];b2.array[ca]=c8[cq[0]];b2.array[ca+1]=c8[cq[1]];b2.array[ca+2]=c8[cq[2]];b2.array[ca+3]=c7[cq[0]];b2.array[ca+4]=c7[cq[1]];b2.array[ca+5]=c7[cq[2]];b2.array[ca+6]=c6[cq[0]];b2.array[ca+7]=c6[cq[1]];b2.array[ca+8]=c6[cq[2]];ca+=9}for(cQ=0,dB=cm.length;cQ<dB;cQ++){cE=b2.value[cm[cQ]];c8=cE[0];c7=cE[1];c6=cE[2];c5=cE[3];b2.array[ca]=c8[cq[0]];b2.array[ca+1]=c8[cq[1]];b2.array[ca+2]=c8[cq[2]];b2.array[ca+3]=c7[cq[0]];b2.array[ca+4]=c7[cq[1]];b2.array[ca+5]=c7[cq[2]];b2.array[ca+6]=c6[cq[0]];b2.array[ca+7]=c6[cq[1]];b2.array[ca+8]=c6[cq[2]];b2.array[ca+9]=c5[cq[0]];b2.array[ca+10]=c5[cq[1]];b2.array[ca+11]=c5[cq[2]];ca+=12}}}}}else{if(b2.size===4){if(b2.boundTo===undefined||b2.boundTo==="vertices"){for(cQ=0,dB=co.length;cQ<dB;cQ++){bZ=dx[co[cQ]];c8=b2.value[bZ.a];c7=b2.value[bZ.b];c6=b2.value[bZ.c];b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c8.z;b2.array[ca+3]=c8.w;b2.array[ca+4]=c7.x;b2.array[ca+5]=c7.y;b2.array[ca+6]=c7.z;b2.array[ca+7]=c7.w;b2.array[ca+8]=c6.x;b2.array[ca+9]=c6.y;b2.array[ca+10]=c6.z;b2.array[ca+11]=c6.w;ca+=12}for(cQ=0,dB=cm.length;cQ<dB;cQ++){bZ=dx[cm[cQ]];c8=b2.value[bZ.a];c7=b2.value[bZ.b];c6=b2.value[bZ.c];c5=b2.value[bZ.d];b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c8.z;b2.array[ca+3]=c8.w;b2.array[ca+4]=c7.x;b2.array[ca+5]=c7.y;b2.array[ca+6]=c7.z;b2.array[ca+7]=c7.w;b2.array[ca+8]=c6.x;b2.array[ca+9]=c6.y;b2.array[ca+10]=c6.z;b2.array[ca+11]=c6.w;b2.array[ca+12]=c5.x;b2.array[ca+13]=c5.y;b2.array[ca+14]=c5.z;b2.array[ca+15]=c5.w;ca+=16}}else{if(b2.boundTo==="faces"){for(cQ=0,dB=co.length;cQ<dB;cQ++){cE=b2.value[co[cQ]];c8=cE;c7=cE;c6=cE;b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c8.z;b2.array[ca+3]=c8.w;b2.array[ca+4]=c7.x;b2.array[ca+5]=c7.y;b2.array[ca+6]=c7.z;b2.array[ca+7]=c7.w;b2.array[ca+8]=c6.x;b2.array[ca+9]=c6.y;b2.array[ca+10]=c6.z;b2.array[ca+11]=c6.w;ca+=12}for(cQ=0,dB=cm.length;cQ<dB;cQ++){cE=b2.value[cm[cQ]];c8=cE;c7=cE;c6=cE;c5=cE;b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c8.z;b2.array[ca+3]=c8.w;b2.array[ca+4]=c7.x;b2.array[ca+5]=c7.y;b2.array[ca+6]=c7.z;b2.array[ca+7]=c7.w;b2.array[ca+8]=c6.x;b2.array[ca+9]=c6.y;b2.array[ca+10]=c6.z;b2.array[ca+11]=c6.w;b2.array[ca+12]=c5.x;b2.array[ca+13]=c5.y;b2.array[ca+14]=c5.z;b2.array[ca+15]=c5.w;ca+=16}}else{if(b2.boundTo==="faceVertices"){for(cQ=0,dB=co.length;cQ<dB;cQ++){cE=b2.value[co[cQ]];c8=cE[0];c7=cE[1];c6=cE[2];b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c8.z;b2.array[ca+3]=c8.w;b2.array[ca+4]=c7.x;b2.array[ca+5]=c7.y;b2.array[ca+6]=c7.z;b2.array[ca+7]=c7.w;b2.array[ca+8]=c6.x;b2.array[ca+9]=c6.y;b2.array[ca+10]=c6.z;b2.array[ca+11]=c6.w;ca+=12}for(cQ=0,dB=cm.length;cQ<dB;cQ++){cE=b2.value[cm[cQ]];c8=cE[0];c7=cE[1];c6=cE[2];c5=cE[3];b2.array[ca]=c8.x;b2.array[ca+1]=c8.y;b2.array[ca+2]=c8.z;b2.array[ca+3]=c8.w;b2.array[ca+4]=c7.x;b2.array[ca+5]=c7.y;b2.array[ca+6]=c7.z;b2.array[ca+7]=c7.w;b2.array[ca+8]=c6.x;b2.array[ca+9]=c6.y;b2.array[ca+10]=c6.z;b2.array[ca+11]=c6.w;b2.array[ca+12]=c5.x;b2.array[ca+13]=c5.y;b2.array[ca+14]=c5.z;b2.array[ca+15]=c5.w;ca+=16}}}}}}}}c.bindBuffer(c.ARRAY_BUFFER,b2.buffer);c.bufferData(c.ARRAY_BUFFER,b2.array,dS)}}if(cc){delete di.__inittedArrays;delete di.__colorArray;delete di.__normalArray;delete di.__tangentArray;delete di.__uvArray;delete di.__uv2Array;delete di.__faceArray;delete di.__vertexArray;delete di.__lineArray;delete di.__skinIndexArray;delete di.__skinWeightArray}}function au(b6,b0,b7){var b1=b6.attributes;var b4=b1.index;var b3=b1.position;var b5=b1.normal;var bY=b1.uv;var bZ=b1.color;var b8=b1.tangent;if(b6.elementsNeedUpdate&&b4!==undefined){c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,b4.buffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,b4.array,b0)}if(b6.verticesNeedUpdate&&b3!==undefined){c.bindBuffer(c.ARRAY_BUFFER,b3.buffer);c.bufferData(c.ARRAY_BUFFER,b3.array,b0)}if(b6.normalsNeedUpdate&&b5!==undefined){c.bindBuffer(c.ARRAY_BUFFER,b5.buffer);c.bufferData(c.ARRAY_BUFFER,b5.array,b0)}if(b6.uvsNeedUpdate&&bY!==undefined){c.bindBuffer(c.ARRAY_BUFFER,bY.buffer);c.bufferData(c.ARRAY_BUFFER,bY.array,b0)}if(b6.colorsNeedUpdate&&bZ!==undefined){c.bindBuffer(c.ARRAY_BUFFER,bZ.buffer);c.bufferData(c.ARRAY_BUFFER,bZ.array,b0)}if(b6.tangentsNeedUpdate&&b8!==undefined){c.bindBuffer(c.ARRAY_BUFFER,b8.buffer);c.bufferData(c.ARRAY_BUFFER,b8.array,b0)}if(b7){for(var b2 in b6.attributes){delete b6.attributes[b2].array}}}this.renderBufferImmediate=function(cd,b1,b3){if(cd.hasPositions&&!cd.__webglVertexBuffer){cd.__webglVertexBuffer=c.createBuffer()}if(cd.hasNormals&&!cd.__webglNormalBuffer){cd.__webglNormalBuffer=c.createBuffer()}if(cd.hasUvs&&!cd.__webglUvBuffer){cd.__webglUvBuffer=c.createBuffer()}if(cd.hasColors&&!cd.__webglColorBuffer){cd.__webglColorBuffer=c.createBuffer()}if(cd.hasPositions){c.bindBuffer(c.ARRAY_BUFFER,cd.__webglVertexBuffer);c.bufferData(c.ARRAY_BUFFER,cd.positionArray,c.DYNAMIC_DRAW);c.enableVertexAttribArray(b1.attributes.position);c.vertexAttribPointer(b1.attributes.position,3,c.FLOAT,false,0,0)}if(cd.hasNormals){c.bindBuffer(c.ARRAY_BUFFER,cd.__webglNormalBuffer);if(b3.shading===THREE.FlatShading){var cb,ca,b8,b0,b6,cf,bZ,b5,ce,bY,b4,cc,b9,b7,b2=cd.count*3;for(b7=0;b7<b2;b7+=9){b9=cd.normalArray;b0=b9[b7];bZ=b9[b7+1];bY=b9[b7+2];b6=b9[b7+3];b5=b9[b7+4];b4=b9[b7+5];cf=b9[b7+6];ce=b9[b7+7];cc=b9[b7+8];cb=(b0+b6+cf)/3;ca=(bZ+b5+ce)/3;b8=(bY+b4+cc)/3;b9[b7]=cb;b9[b7+1]=ca;b9[b7+2]=b8;b9[b7+3]=cb;b9[b7+4]=ca;b9[b7+5]=b8;b9[b7+6]=cb;b9[b7+7]=ca;b9[b7+8]=b8}}c.bufferData(c.ARRAY_BUFFER,cd.normalArray,c.DYNAMIC_DRAW);c.enableVertexAttribArray(b1.attributes.normal);c.vertexAttribPointer(b1.attributes.normal,3,c.FLOAT,false,0,0)}if(cd.hasUvs&&b3.map){c.bindBuffer(c.ARRAY_BUFFER,cd.__webglUvBuffer);c.bufferData(c.ARRAY_BUFFER,cd.uvArray,c.DYNAMIC_DRAW);c.enableVertexAttribArray(b1.attributes.uv);c.vertexAttribPointer(b1.attributes.uv,2,c.FLOAT,false,0,0)}if(cd.hasColors&&b3.vertexColors!==THREE.NoColors){c.bindBuffer(c.ARRAY_BUFFER,cd.__webglColorBuffer);c.bufferData(c.ARRAY_BUFFER,cd.colorArray,c.DYNAMIC_DRAW);c.enableVertexAttribArray(b1.attributes.color);c.vertexAttribPointer(b1.attributes.color,3,c.FLOAT,false,0,0)}c.drawArrays(c.TRIANGLES,0,cd.count);cd.count=0};this.renderBufferDirect=function(ck,co,bZ,cc,b2,cr){if(cc.visible===false){return}var b7,b8,ci,cl,cn,cd;b7=aN(ck,co,bZ,cc,cr);b8=b7.attributes;var cf=false,cj=cc.wireframe?1:0,cm=(b2.id*16777215)+(b7.id*2)+cj;if(cm!==z){z=cm;cf=true}if(cf){bv()}if(cr instanceof THREE.Mesh){var b5=b2.attributes.index;if(b5){var b3=b2.offsets;if(b3.length>1){cf=true}for(var ch=0,ca=b3.length;ch<ca;ch++){var b1=b3[ch].index;if(cf){var cq=b2.attributes.position;var cb=cq.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cq.buffer);af(b8.position);c.vertexAttribPointer(b8.position,cb,c.FLOAT,false,0,b1*cb*4);var cp=b2.attributes.normal;if(b8.normal>=0&&cp){var b0=cp.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cp.buffer);af(b8.normal);c.vertexAttribPointer(b8.normal,b0,c.FLOAT,false,0,b1*b0*4)}var b4=b2.attributes.uv;if(b8.uv>=0&&b4){var bY=b4.itemSize;c.bindBuffer(c.ARRAY_BUFFER,b4.buffer);af(b8.uv);c.vertexAttribPointer(b8.uv,bY,c.FLOAT,false,0,b1*bY*4)}var cg=b2.attributes.color;if(b8.color>=0&&cg){var b6=cg.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cg.buffer);af(b8.color);c.vertexAttribPointer(b8.color,b6,c.FLOAT,false,0,b1*b6*4)}var b9=b2.attributes.tangent;if(b8.tangent>=0&&b9){var ce=b9.itemSize;c.bindBuffer(c.ARRAY_BUFFER,b9.buffer);af(b8.tangent);c.vertexAttribPointer(b8.tangent,ce,c.FLOAT,false,0,b1*ce*4)}c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,b5.buffer)}c.drawElements(c.TRIANGLES,b3[ch].count,c.UNSIGNED_SHORT,b3[ch].start*2);aL.info.render.calls++;aL.info.render.vertices+=b3[ch].count;aL.info.render.faces+=b3[ch].count/3}}else{if(cf){var cq=b2.attributes.position;var cb=cq.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cq.buffer);af(b8.position);c.vertexAttribPointer(b8.position,cb,c.FLOAT,false,0,0);var cp=b2.attributes.normal;if(b8.normal>=0&&cp){var b0=cp.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cp.buffer);af(b8.normal);c.vertexAttribPointer(b8.normal,b0,c.FLOAT,false,0,0)}var b4=b2.attributes.uv;if(b8.uv>=0&&b4){var bY=b4.itemSize;c.bindBuffer(c.ARRAY_BUFFER,b4.buffer);af(b8.uv);c.vertexAttribPointer(b8.uv,bY,c.FLOAT,false,0,0)}var cg=b2.attributes.color;if(b8.color>=0&&cg){var b6=cg.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cg.buffer);af(b8.color);c.vertexAttribPointer(b8.color,b6,c.FLOAT,false,0,0)}var b9=b2.attributes.tangent;if(b8.tangent>=0&&b9){var ce=b9.itemSize;c.bindBuffer(c.ARRAY_BUFFER,b9.buffer);af(b8.tangent);c.vertexAttribPointer(b8.tangent,ce,c.FLOAT,false,0,0)}}c.drawArrays(c.TRIANGLES,0,cq.numItems/3);aL.info.render.calls++;aL.info.render.vertices+=cq.numItems/3;aL.info.render.faces+=cq.numItems/3/3}}else{if(cr instanceof THREE.ParticleSystem){if(cf){var cq=b2.attributes.position;var cb=cq.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cq.buffer);af(b8.position);c.vertexAttribPointer(b8.position,cb,c.FLOAT,false,0,0);var cg=b2.attributes.color;if(b8.color>=0&&cg){var b6=cg.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cg.buffer);af(b8.color);c.vertexAttribPointer(b8.color,b6,c.FLOAT,false,0,0)}c.drawArrays(c.POINTS,0,cq.numItems/3);aL.info.render.calls++;aL.info.render.points+=cq.numItems/3}}else{if(cr instanceof THREE.Line){if(cf){var cq=b2.attributes.position;var cb=cq.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cq.buffer);af(b8.position);c.vertexAttribPointer(b8.position,cb,c.FLOAT,false,0,0);var cg=b2.attributes.color;if(b8.color>=0&&cg){var b6=cg.itemSize;c.bindBuffer(c.ARRAY_BUFFER,cg.buffer);af(b8.color);c.vertexAttribPointer(b8.color,b6,c.FLOAT,false,0,0)}aF(cc.linewidth);c.drawArrays(c.LINE_STRIP,0,cq.numItems/3);aL.info.render.calls++;aL.info.render.points+=cq.numItems}}}}};this.renderBuffer=function(b8,b4,bY,b9,b2,b1){if(b9.visible===false){return}var b7,b5,cb,ce,cd,bZ,b6,cc;b7=aN(b8,b4,bY,b9,b1);b5=b7.attributes;var b0=false,ca=b9.wireframe?1:0,b3=(b2.id*16777215)+(b7.id*2)+ca;if(b3!==z){z=b3;b0=true}if(b0){bv()}if(!b9.morphTargets&&b5.position>=0){if(b0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglVertexBuffer);af(b5.position);c.vertexAttribPointer(b5.position,3,c.FLOAT,false,0,0)}}else{if(b1.morphTargetBase){u(b9,b2,b1)}}if(b0){if(b2.__webglCustomAttributesList){for(b6=0,cc=b2.__webglCustomAttributesList.length;b6<cc;b6++){bZ=b2.__webglCustomAttributesList[b6];if(b5[bZ.buffer.belongsToAttribute]>=0){c.bindBuffer(c.ARRAY_BUFFER,bZ.buffer);af(b5[bZ.buffer.belongsToAttribute]);c.vertexAttribPointer(b5[bZ.buffer.belongsToAttribute],bZ.size,c.FLOAT,false,0,0)}}}if(b5.color>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglColorBuffer);af(b5.color);c.vertexAttribPointer(b5.color,3,c.FLOAT,false,0,0)}if(b5.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglNormalBuffer);af(b5.normal);c.vertexAttribPointer(b5.normal,3,c.FLOAT,false,0,0)}if(b5.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglTangentBuffer);af(b5.tangent);c.vertexAttribPointer(b5.tangent,4,c.FLOAT,false,0,0)}if(b5.uv>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglUVBuffer);af(b5.uv);c.vertexAttribPointer(b5.uv,2,c.FLOAT,false,0,0)}if(b5.uv2>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglUV2Buffer);af(b5.uv2);c.vertexAttribPointer(b5.uv2,2,c.FLOAT,false,0,0)}if(b9.skinning&&b5.skinIndex>=0&&b5.skinWeight>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglSkinIndicesBuffer);af(b5.skinIndex);c.vertexAttribPointer(b5.skinIndex,4,c.FLOAT,false,0,0);c.bindBuffer(c.ARRAY_BUFFER,b2.__webglSkinWeightsBuffer);af(b5.skinWeight);c.vertexAttribPointer(b5.skinWeight,4,c.FLOAT,false,0,0)}if(b5.lineDistance>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglLineDistanceBuffer);af(b5.lineDistance);c.vertexAttribPointer(b5.lineDistance,1,c.FLOAT,false,0,0)}}if(b1 instanceof THREE.Mesh){if(b9.wireframe){aF(b9.wireframeLinewidth);if(b0){c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,b2.__webglLineBuffer)}c.drawElements(c.LINES,b2.__webglLineCount,c.UNSIGNED_SHORT,0)}else{if(b0){c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,b2.__webglFaceBuffer)}c.drawElements(c.TRIANGLES,b2.__webglFaceCount,c.UNSIGNED_SHORT,0)}aL.info.render.calls++;aL.info.render.vertices+=b2.__webglFaceCount;aL.info.render.faces+=b2.__webglFaceCount/3}else{if(b1 instanceof THREE.Line){ce=(b1.type===THREE.LineStrip)?c.LINE_STRIP:c.LINES;aF(b9.linewidth);c.drawArrays(ce,0,b2.__webglLineCount);aL.info.render.calls++}else{if(b1 instanceof THREE.ParticleSystem){c.drawArrays(c.POINTS,0,b2.__webglParticleCount);aL.info.render.calls++;aL.info.render.points+=b2.__webglParticleCount}else{if(b1 instanceof THREE.Ribbon){c.drawArrays(c.TRIANGLE_STRIP,0,b2.__webglVertexCount);aL.info.render.calls++}}}}};function af(bY){if(!H[bY]){c.enableVertexAttribArray(bY);H[bY]=true}}function bv(){for(var bY in H){if(H[bY]){c.disableVertexAttribArray(bY);H[bY]=false}}}function u(b6,b2,b1){var b4=b6.program.attributes;if(b1.morphTargetBase!==-1&&b4.position>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglMorphTargetsBuffers[b1.morphTargetBase]);af(b4.position);c.vertexAttribPointer(b4.position,3,c.FLOAT,false,0,0)}else{if(b4.position>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglVertexBuffer);af(b4.position);c.vertexAttribPointer(b4.position,3,c.FLOAT,false,0,0)}}if(b1.morphTargetForcedOrder.length){var bY=0;var bZ=b1.morphTargetForcedOrder;var b8=b1.morphTargetInfluences;while(bY<b6.numSupportedMorphTargets&&bY<bZ.length){if(b4["morphTarget"+bY]>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglMorphTargetsBuffers[bZ[bY]]);af(b4["morphTarget"+bY]);c.vertexAttribPointer(b4["morphTarget"+bY],3,c.FLOAT,false,0,0)}if(b4["morphNormal"+bY]>=0&&b6.morphNormals){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglMorphNormalsBuffers[bZ[bY]]);af(b4["morphNormal"+bY]);c.vertexAttribPointer(b4["morphNormal"+bY],3,c.FLOAT,false,0,0)}b1.__webglMorphTargetInfluences[bY]=b8[bZ[bY]];bY++}}else{var b7,b0=[];var b8=b1.morphTargetInfluences;var b5,b9=b8.length;for(b5=0;b5<b9;b5++){b7=b8[b5];if(b7>0){b0.push([b7,b5])}}if(b0.length>b6.numSupportedMorphTargets){b0.sort(X);b0.length=b6.numSupportedMorphTargets}else{if(b0.length>b6.numSupportedMorphNormals){b0.sort(X)}else{if(b0.length===0){b0.push([0,0])}}}var b3,bY=0;while(bY<b6.numSupportedMorphTargets){if(b0[bY]){b3=b0[bY][1];if(b4["morphTarget"+bY]>=0){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglMorphTargetsBuffers[b3]);af(b4["morphTarget"+bY]);c.vertexAttribPointer(b4["morphTarget"+bY],3,c.FLOAT,false,0,0)}if(b4["morphNormal"+bY]>=0&&b6.morphNormals){c.bindBuffer(c.ARRAY_BUFFER,b2.__webglMorphNormalsBuffers[b3]);af(b4["morphNormal"+bY]);c.vertexAttribPointer(b4["morphNormal"+bY],3,c.FLOAT,false,0,0)}b1.__webglMorphTargetInfluences[bY]=b8[b3]}else{b1.__webglMorphTargetInfluences[bY]=0}bY++}}if(b6.program.uniforms.morphTargetInfluences!==null){c.uniform1fv(b6.program.uniforms.morphTargetInfluences,b1.__webglMorphTargetInfluences)}}function aE(bZ,bY){if(bZ.z!==bY.z){return bY.z-bZ.z}else{return bY.id-bZ.id}}function X(bZ,bY){return bY[0]-bZ[0]}this.render=function(b4,b8,b5,b6){if(b8 instanceof THREE.Camera===false){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var b2,b9,b3,b0,bY,b1=b4.__lights,bZ=b4.fog;aZ=-1;bX=true;if(this.autoUpdateScene){b4.updateMatrixWorld()}if(b8.parent===undefined){b8.updateMatrixWorld()}b8.matrixWorldInverse.getInverse(b8.matrixWorld);aX.multiplyMatrices(b8.projectionMatrix,b8.matrixWorldInverse);bq.setFromMatrix(aX);if(this.autoUpdateObjects){this.initWebGLObjects(b4)}o(this.renderPluginsPre,b4,b8);aL.info.render.calls=0;aL.info.render.vertices=0;aL.info.render.faces=0;aL.info.render.points=0;this.setRenderTarget(b5);if(this.autoClear||b6){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil)}bY=b4.__webglObjects;for(b2=0,b9=bY.length;b2<b9;b2++){b3=bY[b2];b0=b3.object;b3.render=false;if(b0.visible){if(!(b0 instanceof THREE.Mesh||b0 instanceof THREE.ParticleSystem)||!(b0.frustumCulled)||bq.intersectsObject(b0)){be(b0,b8);am(b3);b3.render=true;if(this.sortObjects===true){if(b0.renderDepth!==null){b3.z=b0.renderDepth}else{R.getPositionFromMatrix(b0.matrixWorld);R.applyProjection(aX);b3.z=R.z}b3.id=b0.id}}}}if(this.sortObjects){bY.sort(aE)}bY=b4.__webglObjectsImmediate;for(b2=0,b9=bY.length;b2<b9;b2++){b3=bY[b2];b0=b3.object;if(b0.visible){be(b0,b8);aP(b3)}}if(b4.overrideMaterial){var b7=b4.overrideMaterial;this.setBlending(b7.blending,b7.blendEquation,b7.blendSrc,b7.blendDst);this.setDepthTest(b7.depthTest);this.setDepthWrite(b7.depthWrite);bU(b7.polygonOffset,b7.polygonOffsetFactor,b7.polygonOffsetUnits);bt(b4.__webglObjects,false,"",b8,b1,bZ,true,b7);bI(b4.__webglObjectsImmediate,"",b8,b1,bZ,false,b7)}else{var b7=null;this.setBlending(THREE.NoBlending);bt(b4.__webglObjects,true,"opaque",b8,b1,bZ,false,b7);bI(b4.__webglObjectsImmediate,"opaque",b8,b1,bZ,false,b7);bt(b4.__webglObjects,false,"transparent",b8,b1,bZ,true,b7);bI(b4.__webglObjectsImmediate,"transparent",b8,b1,bZ,true,b7)}o(this.renderPluginsPost,b4,b8);if(b5&&b5.generateMipmaps&&b5.minFilter!==THREE.NearestFilter&&b5.minFilter!==THREE.LinearFilter){aU(b5)}this.setDepthTest(true);this.setDepthWrite(true)};function o(bY,b2,b1){if(!bY.length){return}for(var b0=0,bZ=bY.length;b0<bZ;b0++){aj=null;aI=null;i=-1;a=-1;bw=-1;bi=-1;k=-1;z=-1;aZ=-1;bX=true;bY[b0].render(b2,b1,x,aR);aj=null;aI=null;i=-1;a=-1;bw=-1;bi=-1;k=-1;z=-1;aZ=-1;bX=true}}function bt(bY,cb,b7,ca,b4,bZ,b8,cc){var b6,b2,b3,b9,b0,b1,cd;if(cb){b0=bY.length-1;b1=-1;cd=-1}else{b0=0;b1=bY.length;cd=1}for(var b5=b0;b5!==b1;b5+=cd){b6=bY[b5];if(b6.render){b2=b6.object;b3=b6.buffer;if(cc){b9=cc}else{b9=b6[b7];if(!b9){continue}if(b8){aL.setBlending(b9.blending,b9.blendEquation,b9.blendSrc,b9.blendDst)}aL.setDepthTest(b9.depthTest);aL.setDepthWrite(b9.depthWrite);bU(b9.polygonOffset,b9.polygonOffsetFactor,b9.polygonOffsetUnits)}aL.setMaterialFaces(b9);if(b3 instanceof THREE.BufferGeometry){aL.renderBufferDirect(ca,b4,bZ,b9,b3,b2)}else{aL.renderBuffer(ca,b4,bZ,b9,b3,b2)}}}}function bI(bY,b5,b8,b1,bZ,b6,b9){var b4,b0,b7,b3;for(var b2=0,ca=bY.length;b2<ca;b2++){b4=bY[b2];b0=b4.object;if(b0.visible){if(b9){b7=b9}else{b7=b4[b5];if(!b7){continue}if(b6){aL.setBlending(b7.blending,b7.blendEquation,b7.blendSrc,b7.blendDst)}aL.setDepthTest(b7.depthTest);aL.setDepthWrite(b7.depthWrite);bU(b7.polygonOffset,b7.polygonOffsetFactor,b7.polygonOffsetUnits)}aL.renderImmediateObject(b8,b1,bZ,b7,b0)}}}this.renderImmediateObject=function(b2,b0,b3,b1,bZ){var bY=aN(b2,b0,b3,b1,bZ);z=-1;aL.setMaterialFaces(b1);if(bZ.immediateRenderCallback){bZ.immediateRenderCallback(bY,c,bq)}else{bZ.render(function(b4){aL.renderBufferImmediate(b4,bY,b1)})}};function aP(b0){var bY=b0.object,bZ=bY.material;if(bZ.transparent){b0.transparent=bZ;b0.opaque=null}else{b0.opaque=bZ;b0.transparent=null}}function am(b3){var b1=b3.object,b0=b3.buffer,b2,bZ,bY;bY=b1.material;if(bY instanceof THREE.MeshFaceMaterial){bZ=b0.materialIndex;b2=bY.materials[bZ];if(b2.transparent){b3.transparent=b2;b3.opaque=null}else{b3.opaque=b2;b3.transparent=null}}else{b2=bY;if(b2){if(b2.transparent){b3.transparent=b2;b3.opaque=null}else{b3.opaque=b2;b3.transparent=null}}}}function av(b6,b3){var b1,b8,b5,b9,b4,bZ,b2={};var b7=b6.morphTargets.length;var bY=b6.morphNormals.length;var ca=b3 instanceof THREE.MeshFaceMaterial;b6.geometryGroups={};for(b1=0,b8=b6.faces.length;b1<b8;b1++){b5=b6.faces[b1];b9=ca?b5.materialIndex:0;if(b2[b9]===undefined){b2[b9]={hash:b9,counter:0}}bZ=b2[b9].hash+"_"+b2[b9].counter;if(b6.geometryGroups[bZ]===undefined){b6.geometryGroups[bZ]={faces3:[],faces4:[],materialIndex:b9,vertices:0,numMorphTargets:b7,numMorphNormals:bY}}b4=b5 instanceof THREE.Face3?3:4;if(b6.geometryGroups[bZ].vertices+b4>65535){b2[b9].counter+=1;bZ=b2[b9].hash+"_"+b2[b9].counter;if(b6.geometryGroups[bZ]===undefined){b6.geometryGroups[bZ]={faces3:[],faces4:[],materialIndex:b9,vertices:0,numMorphTargets:b7,numMorphNormals:bY}}}if(b5 instanceof THREE.Face3){b6.geometryGroups[bZ].faces3.push(b1)}else{b6.geometryGroups[bZ].faces4.push(b1)}b6.geometryGroups[bZ].vertices+=b4}b6.geometryGroupsList=[];for(var b0 in b6.geometryGroups){b6.geometryGroups[b0].id=Q++;b6.geometryGroupsList.push(b6.geometryGroups[b0])}}this.initWebGLObjects=function(bZ){if(!bZ.__webglObjects){bZ.__webglObjects=[];bZ.__webglObjectsImmediate=[];bZ.__webglSprites=[];bZ.__webglFlares=[]}while(bZ.__objectsAdded.length){ap(bZ.__objectsAdded[0],bZ);bZ.__objectsAdded.splice(0,1)}while(bZ.__objectsRemoved.length){I(bZ.__objectsRemoved[0],bZ);bZ.__objectsRemoved.splice(0,1)}for(var b0=0,bY=bZ.__webglObjects.length;b0<bY;b0++){G(bZ.__webglObjects[b0].object)}};function ap(bZ,b2){var b1,b3,b0,bY;if(!bZ.__webglInit){bZ.__webglInit=true;bZ._modelViewMatrix=new THREE.Matrix4();bZ._normalMatrix=new THREE.Matrix3();if(bZ.geometry!==undefined&&bZ.geometry.__webglInit===undefined){bZ.geometry.__webglInit=true;bZ.geometry.addEventListener("dispose",aW)}if(bZ instanceof THREE.Mesh){b3=bZ.geometry;b0=bZ.material;if(b3 instanceof THREE.Geometry){if(b3.geometryGroups===undefined){av(b3,b0)}for(b1 in b3.geometryGroups){bY=b3.geometryGroups[b1];if(!bY.__webglVertexBuffer){aB(bY);ai(bY,bZ);b3.verticesNeedUpdate=true;b3.morphTargetsNeedUpdate=true;b3.elementsNeedUpdate=true;b3.uvsNeedUpdate=true;b3.normalsNeedUpdate=true;b3.tangentsNeedUpdate=true;b3.colorsNeedUpdate=true}}}else{if(b3 instanceof THREE.BufferGeometry){y(b3)}}}else{if(bZ instanceof THREE.Ribbon){b3=bZ.geometry;if(!b3.__webglVertexBuffer){aa(b3);bR(b3,bZ);b3.verticesNeedUpdate=true;b3.colorsNeedUpdate=true;b3.normalsNeedUpdate=true}}else{if(bZ instanceof THREE.Line){b3=bZ.geometry;if(!b3.__webglVertexBuffer){if(b3 instanceof THREE.Geometry){ab(b3);E(b3,bZ);b3.verticesNeedUpdate=true;b3.colorsNeedUpdate=true;b3.lineDistancesNeedUpdate=true}else{if(b3 instanceof THREE.BufferGeometry){y(b3)}}}}else{if(bZ instanceof THREE.ParticleSystem){b3=bZ.geometry;if(!b3.__webglVertexBuffer){if(b3 instanceof THREE.Geometry){B(b3);bH(b3,bZ);b3.verticesNeedUpdate=true;b3.colorsNeedUpdate=true}else{if(b3 instanceof THREE.BufferGeometry){y(b3)}}}}}}}}if(!bZ.__webglActive){if(bZ instanceof THREE.Mesh){b3=bZ.geometry;if(b3 instanceof THREE.BufferGeometry){C(b2.__webglObjects,b3,bZ)}else{if(b3 instanceof THREE.Geometry){for(b1 in b3.geometryGroups){bY=b3.geometryGroups[b1];C(b2.__webglObjects,bY,bZ)}}}}else{if(bZ instanceof THREE.Ribbon||bZ instanceof THREE.Line||bZ instanceof THREE.ParticleSystem){b3=bZ.geometry;C(b2.__webglObjects,b3,bZ)}else{if(bZ instanceof THREE.ImmediateRenderObject||bZ.immediateRenderCallback){aA(b2.__webglObjectsImmediate,bZ)}else{if(bZ instanceof THREE.Sprite){b2.__webglSprites.push(bZ)}else{if(bZ instanceof THREE.LensFlare){b2.__webglFlares.push(bZ)}}}}}bZ.__webglActive=true}}function C(b0,bY,bZ){b0.push({buffer:bY,object:bZ,opaque:null,transparent:null})}function aA(bZ,bY){bZ.push({object:bY,opaque:null,transparent:null})}function G(b0){var b4=b0.geometry,bY,b2,b3;if(b0 instanceof THREE.Mesh){if(b4 instanceof THREE.BufferGeometry){if(b4.verticesNeedUpdate||b4.elementsNeedUpdate||b4.uvsNeedUpdate||b4.normalsNeedUpdate||b4.colorsNeedUpdate||b4.tangentsNeedUpdate){au(b4,c.DYNAMIC_DRAW,!b4.dynamic)}b4.verticesNeedUpdate=false;b4.elementsNeedUpdate=false;b4.uvsNeedUpdate=false;b4.normalsNeedUpdate=false;b4.colorsNeedUpdate=false;b4.tangentsNeedUpdate=false}else{for(var b1=0,bZ=b4.geometryGroupsList.length;b1<bZ;b1++){bY=b4.geometryGroupsList[b1];b3=F(b0,bY);if(b4.buffersNeedUpdate){ai(bY,b0)}b2=b3.attributes&&h(b3);if(b4.verticesNeedUpdate||b4.morphTargetsNeedUpdate||b4.elementsNeedUpdate||b4.uvsNeedUpdate||b4.normalsNeedUpdate||b4.colorsNeedUpdate||b4.tangentsNeedUpdate||b2){n(bY,b0,c.DYNAMIC_DRAW,!b4.dynamic,b3)}}b4.verticesNeedUpdate=false;b4.morphTargetsNeedUpdate=false;b4.elementsNeedUpdate=false;b4.uvsNeedUpdate=false;b4.normalsNeedUpdate=false;b4.colorsNeedUpdate=false;b4.tangentsNeedUpdate=false;b4.buffersNeedUpdate=false;b3.attributes&&ar(b3)}}else{if(b0 instanceof THREE.Ribbon){b3=F(b0,b4);b2=b3.attributes&&h(b3);if(b4.verticesNeedUpdate||b4.colorsNeedUpdate||b4.normalsNeedUpdate||b2){P(b4,c.DYNAMIC_DRAW)}b4.verticesNeedUpdate=false;b4.colorsNeedUpdate=false;b4.normalsNeedUpdate=false;b3.attributes&&ar(b3)}else{if(b0 instanceof THREE.Line){if(b4 instanceof THREE.BufferGeometry){if(b4.verticesNeedUpdate||b4.colorsNeedUpdate){au(b4,c.DYNAMIC_DRAW,!b4.dynamic)}b4.verticesNeedUpdate=false;b4.colorsNeedUpdate=false}else{b3=F(b0,b4);b2=b3.attributes&&h(b3);if(b4.verticesNeedUpdate||b4.colorsNeedUpdate||b4.lineDistancesNeedUpdate||b2){bl(b4,c.DYNAMIC_DRAW)}b4.verticesNeedUpdate=false;b4.colorsNeedUpdate=false;b4.lineDistancesNeedUpdate=false;b3.attributes&&ar(b3)}}else{if(b0 instanceof THREE.ParticleSystem){if(b4 instanceof THREE.BufferGeometry){if(b4.verticesNeedUpdate||b4.colorsNeedUpdate){au(b4,c.DYNAMIC_DRAW,!b4.dynamic)}b4.verticesNeedUpdate=false;b4.colorsNeedUpdate=false}else{b3=F(b0,b4);b2=b3.attributes&&h(b3);if(b4.verticesNeedUpdate||b4.colorsNeedUpdate||b0.sortParticles||b2){a4(b4,c.DYNAMIC_DRAW,b0)}b4.verticesNeedUpdate=false;b4.colorsNeedUpdate=false;b3.attributes&&ar(b3)}}}}}}function h(bZ){for(var bY in bZ.attributes){if(bZ.attributes[bY].needsUpdate){return true}}return false}function ar(bZ){for(var bY in bZ.attributes){bZ.attributes[bY].needsUpdate=false}}function I(bY,bZ){if(bY instanceof THREE.Mesh||bY instanceof THREE.ParticleSystem||bY instanceof THREE.Ribbon||bY instanceof THREE.Line){bV(bZ.__webglObjects,bY)}else{if(bY instanceof THREE.Sprite){ax(bZ.__webglSprites,bY)}else{if(bY instanceof THREE.LensFlare){ax(bZ.__webglFlares,bY)}else{if(bY instanceof THREE.ImmediateRenderObject||bY.immediateRenderCallback){bV(bZ.__webglObjectsImmediate,bY)}}}}bY.__webglActive=false}function bV(bZ,bY){for(var b0=bZ.length-1;b0>=0;b0--){if(bZ[b0].object===bY){bZ.splice(b0,1)}}}function ax(bZ,bY){for(var b0=bZ.length-1;b0>=0;b0--){if(bZ[b0]===bY){bZ.splice(b0,1)}}}this.initMaterial=function(b8,b6,bZ,b4){b8.addEventListener("dispose",bf);var cd,ca,b9,b7,cc,b2,bY,b3,cb;if(b8 instanceof THREE.MeshDepthMaterial){cb="depth"}else{if(b8 instanceof THREE.MeshNormalMaterial){cb="normal"}else{if(b8 instanceof THREE.MeshBasicMaterial){cb="basic"}else{if(b8 instanceof THREE.MeshLambertMaterial){cb="lambert"}else{if(b8 instanceof THREE.MeshPhongMaterial){cb="phong"}else{if(b8 instanceof THREE.LineBasicMaterial){cb="basic"}else{if(b8 instanceof THREE.LineDashedMaterial){cb="dashed"}else{if(b8 instanceof THREE.ParticleBasicMaterial){cb="particle_basic"}}}}}}}}if(cb){an(b8,THREE.ShaderLib[cb])}b2=bd(b6);b3=V(b6);bY=aG(b4);cc={map:!!b8.map,envMap:!!b8.envMap,lightMap:!!b8.lightMap,bumpMap:!!b8.bumpMap,normalMap:!!b8.normalMap,specularMap:!!b8.specularMap,vertexColors:b8.vertexColors,fog:bZ,useFog:b8.fog,fogExp:bZ instanceof THREE.FogExp2,sizeAttenuation:b8.sizeAttenuation,skinning:b8.skinning,maxBones:bY,useVertexTexture:U&&b4&&b4.useVertexTexture,boneTextureWidth:b4&&b4.boneTextureWidth,boneTextureHeight:b4&&b4.boneTextureHeight,morphTargets:b8.morphTargets,morphNormals:b8.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:b2.directional,maxPointLights:b2.point,maxSpotLights:b2.spot,maxHemiLights:b2.hemi,maxShadows:b3,shadowMapEnabled:this.shadowMapEnabled&&b4.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:b8.alphaTest,metal:b8.metal,perPixel:b8.perPixel,wrapAround:b8.wrapAround,doubleSided:b8.side===THREE.DoubleSide,flipSided:b8.side===THREE.BackSide};b8.program=g(cb,b8.fragmentShader,b8.vertexShader,b8.uniforms,b8.attributes,b8.defines,cc);var b5=b8.program.attributes;if(b8.morphTargets){b8.numSupportedMorphTargets=0;var b1,b0="morphTarget";for(b7=0;b7<this.maxMorphTargets;b7++){b1=b0+b7;if(b5[b1]>=0){b8.numSupportedMorphTargets++}}}if(b8.morphNormals){b8.numSupportedMorphNormals=0;var b1,b0="morphNormal";for(b7=0;b7<this.maxMorphNormals;b7++){b1=b0+b7;if(b5[b1]>=0){b8.numSupportedMorphNormals++}}}b8.uniformsList=[];for(cd in b8.uniforms){b8.uniformsList.push([b8.uniforms[cd],cd])}};function an(bZ,bY){bZ.uniforms=THREE.UniformsUtils.clone(bY.uniforms);bZ.vertexShader=bY.vertexShader;bZ.fragmentShader=bY.fragmentShader}function aN(b3,b0,bY,b4,bZ){bc=0;if(b4.needsUpdate){if(b4.program){M(b4)}aL.initMaterial(b4,b0,bY,bZ);b4.needsUpdate=false}if(b4.morphTargets){if(!bZ.__webglMorphTargetInfluences){bZ.__webglMorphTargetInfluences=new Float32Array(aL.maxMorphTargets)}}var b2=false;var b1=b4.program,b7=b1.uniforms,b5=b4.uniforms;if(b1!==aj){c.useProgram(b1);aj=b1;b2=true}if(b4.id!==aZ){aZ=b4.id;b2=true}if(b2||b3!==aI){c.uniformMatrix4fv(b7.projectionMatrix,false,b3.projectionMatrix.elements);if(b3!==aI){aI=b3}}if(b4.skinning){if(U&&bZ.useVertexTexture){if(b7.boneTexture!==null){var b6=at();c.uniform1i(b7.boneTexture,b6);aL.setTexture(bZ.boneTexture,b6)}}else{if(b7.boneGlobalMatrices!==null){c.uniformMatrix4fv(b7.boneGlobalMatrices,false,bZ.boneMatrices)}}}if(b2){if(bY&&b4.fog){W(b5,bY)}if(b4 instanceof THREE.MeshPhongMaterial||b4 instanceof THREE.MeshLambertMaterial||b4.lights){if(bX){f(b1,b0);bX=false}a9(b5,bn)}if(b4 instanceof THREE.MeshBasicMaterial||b4 instanceof THREE.MeshLambertMaterial||b4 instanceof THREE.MeshPhongMaterial){bE(b5,b4)}if(b4 instanceof THREE.LineBasicMaterial){ao(b5,b4)}else{if(b4 instanceof THREE.LineDashedMaterial){ao(b5,b4);ad(b5,b4)}else{if(b4 instanceof THREE.ParticleBasicMaterial){bm(b5,b4)}else{if(b4 instanceof THREE.MeshPhongMaterial){J(b5,b4)}else{if(b4 instanceof THREE.MeshLambertMaterial){bF(b5,b4)}else{if(b4 instanceof THREE.MeshDepthMaterial){b5.mNear.value=b3.near;b5.mFar.value=b3.far;b5.opacity.value=b4.opacity}else{if(b4 instanceof THREE.MeshNormalMaterial){b5.opacity.value=b4.opacity}}}}}}}if(bZ.receiveShadow&&!b4._shadowPass){bM(b5,b0)}O(b1,b4.uniformsList);if(b4 instanceof THREE.ShaderMaterial||b4 instanceof THREE.MeshPhongMaterial||b4.envMap){if(b7.cameraPosition!==null){R.getPositionFromMatrix(b3.matrixWorld);c.uniform3f(b7.cameraPosition,R.x,R.y,R.z)}}if(b4 instanceof THREE.MeshPhongMaterial||b4 instanceof THREE.MeshLambertMaterial||b4 instanceof THREE.ShaderMaterial||b4.skinning){if(b7.viewMatrix!==null){c.uniformMatrix4fv(b7.viewMatrix,false,b3.matrixWorldInverse.elements)}}}t(b7,bZ);if(b7.modelMatrix!==null){c.uniformMatrix4fv(b7.modelMatrix,false,bZ.matrixWorld.elements)}return b1}function bE(bZ,b0){bZ.opacity.value=b0.opacity;if(aL.gammaInput){bZ.diffuse.value.copyGammaToLinear(b0.color)}else{bZ.diffuse.value=b0.color}bZ.map.value=b0.map;bZ.lightMap.value=b0.lightMap;bZ.specularMap.value=b0.specularMap;if(b0.bumpMap){bZ.bumpMap.value=b0.bumpMap;bZ.bumpScale.value=b0.bumpScale}if(b0.normalMap){bZ.normalMap.value=b0.normalMap;bZ.normalScale.value.copy(b0.normalScale)}var bY;if(b0.map){bY=b0.map}else{if(b0.specularMap){bY=b0.specularMap}else{if(b0.normalMap){bY=b0.normalMap}else{if(b0.bumpMap){bY=b0.bumpMap}}}}if(bY!==undefined){var b2=bY.offset;var b1=bY.repeat;bZ.offsetRepeat.value.set(b2.x,b2.y,b1.x,b1.y)}bZ.envMap.value=b0.envMap;bZ.flipEnvMap.value=(b0.envMap instanceof THREE.WebGLRenderTargetCube)?1:-1;if(aL.gammaInput){bZ.reflectivity.value=b0.reflectivity}else{bZ.reflectivity.value=b0.reflectivity}bZ.refractionRatio.value=b0.refractionRatio;bZ.combine.value=b0.combine;bZ.useRefract.value=b0.envMap&&b0.envMap.mapping instanceof THREE.CubeRefractionMapping}function ao(bY,bZ){bY.diffuse.value=bZ.color;bY.opacity.value=bZ.opacity}function ad(bY,bZ){bY.dashSize.value=bZ.dashSize;bY.totalSize.value=bZ.dashSize+bZ.gapSize;bY.scale.value=bZ.scale}function bm(bY,bZ){bY.psColor.value=bZ.color;bY.opacity.value=bZ.opacity;bY.size.value=bZ.size;bY.scale.value=aV.height/2;bY.map.value=bZ.map}function W(bY,bZ){bY.fogColor.value=bZ.color;if(bZ instanceof THREE.Fog){bY.fogNear.value=bZ.near;bY.fogFar.value=bZ.far}else{if(bZ instanceof THREE.FogExp2){bY.fogDensity.value=bZ.density}}}function J(bY,bZ){bY.shininess.value=bZ.shininess;if(aL.gammaInput){bY.ambient.value.copyGammaToLinear(bZ.ambient);bY.emissive.value.copyGammaToLinear(bZ.emissive);bY.specular.value.copyGammaToLinear(bZ.specular)}else{bY.ambient.value=bZ.ambient;bY.emissive.value=bZ.emissive;bY.specular.value=bZ.specular}if(bZ.wrapAround){bY.wrapRGB.value.copy(bZ.wrapRGB)}}function bF(bY,bZ){if(aL.gammaInput){bY.ambient.value.copyGammaToLinear(bZ.ambient);bY.emissive.value.copyGammaToLinear(bZ.emissive)}else{bY.ambient.value=bZ.ambient;bY.emissive.value=bZ.emissive}if(bZ.wrapAround){bY.wrapRGB.value.copy(bZ.wrapRGB)}}function a9(bY,bZ){bY.ambientLightColor.value=bZ.ambient;bY.directionalLightColor.value=bZ.directional.colors;bY.directionalLightDirection.value=bZ.directional.positions;bY.pointLightColor.value=bZ.point.colors;bY.pointLightPosition.value=bZ.point.positions;bY.pointLightDistance.value=bZ.point.distances;bY.spotLightColor.value=bZ.spot.colors;bY.spotLightPosition.value=bZ.spot.positions;bY.spotLightDistance.value=bZ.spot.distances;bY.spotLightDirection.value=bZ.spot.directions;bY.spotLightAngleCos.value=bZ.spot.anglesCos;bY.spotLightExponent.value=bZ.spot.exponents;bY.hemisphereLightSkyColor.value=bZ.hemi.skyColors;bY.hemisphereLightGroundColor.value=bZ.hemi.groundColors;bY.hemisphereLightDirection.value=bZ.hemi.positions}function bM(bY,b2){if(bY.shadowMatrix){var b1=0;for(var b3=0,b0=b2.length;b3<b0;b3++){var bZ=b2[b3];if(!bZ.castShadow){continue}if(bZ instanceof THREE.SpotLight||(bZ instanceof THREE.DirectionalLight&&!bZ.shadowCascade)){bY.shadowMap.value[b1]=bZ.shadowMap;bY.shadowMapSize.value[b1]=bZ.shadowMapSize;bY.shadowMatrix.value[b1]=bZ.shadowMatrix;bY.shadowDarkness.value[b1]=bZ.shadowDarkness;bY.shadowBias.value[b1]=bZ.shadowBias;b1++}}}}function t(bY,bZ){c.uniformMatrix4fv(bY.modelViewMatrix,false,bZ._modelViewMatrix.elements);if(bY.normalMatrix){c.uniformMatrix3fv(bY.normalMatrix,false,bZ._normalMatrix.elements)}}function at(){var bY=bc;if(bY>=bG){console.warn("WebGLRenderer: trying to use "+bY+" texture units while this GPU supports only "+bG)}bc+=1;return bY}function O(b3,b9){var bY,b7,b5,b8,b4,ca,b2,b6,b0,b1,bZ;for(b0=0,b1=b9.length;b0<b1;b0++){b8=b3.uniforms[b9[b0][1]];if(!b8){continue}bY=b9[b0][0];b5=bY.type;b7=bY.value;if(b5==="i"){c.uniform1i(b8,b7)}else{if(b5==="f"){c.uniform1f(b8,b7)}else{if(b5==="v2"){c.uniform2f(b8,b7.x,b7.y)}else{if(b5==="v3"){c.uniform3f(b8,b7.x,b7.y,b7.z)}else{if(b5==="v4"){c.uniform4f(b8,b7.x,b7.y,b7.z,b7.w)}else{if(b5==="c"){c.uniform3f(b8,b7.r,b7.g,b7.b)}else{if(b5==="iv1"){c.uniform1iv(b8,b7)}else{if(b5==="iv"){c.uniform3iv(b8,b7)}else{if(b5==="fv1"){c.uniform1fv(b8,b7)}else{if(b5==="fv"){c.uniform3fv(b8,b7)}else{if(b5==="v2v"){if(bY._array===undefined){bY._array=new Float32Array(2*b7.length)}for(b2=0,b6=b7.length;b2<b6;b2++){bZ=b2*2;bY._array[bZ]=b7[b2].x;bY._array[bZ+1]=b7[b2].y}c.uniform2fv(b8,bY._array)}else{if(b5==="v3v"){if(bY._array===undefined){bY._array=new Float32Array(3*b7.length)}for(b2=0,b6=b7.length;b2<b6;b2++){bZ=b2*3;bY._array[bZ]=b7[b2].x;bY._array[bZ+1]=b7[b2].y;bY._array[bZ+2]=b7[b2].z}c.uniform3fv(b8,bY._array)}else{if(b5==="v4v"){if(bY._array===undefined){bY._array=new Float32Array(4*b7.length)}for(b2=0,b6=b7.length;b2<b6;b2++){bZ=b2*4;bY._array[bZ]=b7[b2].x;bY._array[bZ+1]=b7[b2].y;bY._array[bZ+2]=b7[b2].z;bY._array[bZ+3]=b7[b2].w}c.uniform4fv(b8,bY._array)}else{if(b5==="m4"){if(bY._array===undefined){bY._array=new Float32Array(16)}b7.flattenToArray(bY._array);c.uniformMatrix4fv(b8,false,bY._array)}else{if(b5==="m4v"){if(bY._array===undefined){bY._array=new Float32Array(16*b7.length)}for(b2=0,b6=b7.length;b2<b6;b2++){b7[b2].flattenToArrayOffset(bY._array,b2*16)}c.uniformMatrix4fv(b8,false,bY._array)}else{if(b5==="t"){b4=b7;ca=at();c.uniform1i(b8,ca);if(!b4){continue}if(b4.image instanceof Array&&b4.image.length===6){bj(b4,ca)}else{if(b4 instanceof THREE.WebGLRenderTargetCube){a7(b4,ca)}else{aL.setTexture(b4,ca)}}}else{if(b5==="tv"){if(bY._array===undefined){bY._array=[]}for(b2=0,b6=bY.value.length;b2<b6;b2++){bY._array[b2]=at()}c.uniform1iv(b8,bY._array);for(b2=0,b6=bY.value.length;b2<b6;b2++){b4=bY.value[b2];ca=bY._array[b2];if(!b4){continue}aL.setTexture(b4,ca)}}}}}}}}}}}}}}}}}}}}function be(bY,bZ){bY._modelViewMatrix.multiplyMatrices(bZ.matrixWorldInverse,bY.matrixWorld);bY._normalMatrix.getInverse(bY._modelViewMatrix);bY._normalMatrix.transpose()}function a2(b1,b0,bY,bZ){b1[b0]=bY.r*bY.r*bZ;b1[b0+1]=bY.g*bY.g*bZ;b1[b0+2]=bY.b*bY.b*bZ}function a3(b1,b0,bZ,bY){b1[b0]=bZ.r*bY;b1[b0+1]=bZ.g*bY;b1[b0+2]=bZ.b*bY}function f(bY,b3){var cB,cp,cg,cx,cs=0,cC=0,cD=0,cn,b0,b7,co,b6,cr,ce,ck=bn,cc=ck.directional.colors,b1=ck.directional.positions,cy=ck.point.colors,cu=ck.point.positions,cm=ck.point.distances,cz=ck.spot.colors,b2=ck.spot.positions,cv=ck.spot.distances,cb=ck.spot.directions,b4=ck.spot.anglesCos,cd=ck.spot.exponents,bZ=ck.hemi.skyColors,cA=ck.hemi.groundColors,ca=ck.hemi.positions,cE=0,cj=0,cf=0,b8=0,cl=0,ci=0,ch=0,b5=0,b9=0,cw=0,ct=0,cq=0;for(cB=0,cp=b3.length;cB<cp;cB++){cg=b3[cB];if(cg.onlyShadow){continue}cn=cg.color;co=cg.intensity;ce=cg.distance;if(cg instanceof THREE.AmbientLight){if(!cg.visible){continue}if(aL.gammaInput){cs+=cn.r*cn.r;cC+=cn.g*cn.g;cD+=cn.b*cn.b}else{cs+=cn.r;cC+=cn.g;cD+=cn.b}}else{if(cg instanceof THREE.DirectionalLight){cl+=1;if(!cg.visible){continue}aJ.getPositionFromMatrix(cg.matrixWorld);R.getPositionFromMatrix(cg.target.matrixWorld);aJ.sub(R);aJ.normalize();if(aJ.x===0&&aJ.y===0&&aJ.z===0){continue}b9=cE*3;b1[b9]=aJ.x;b1[b9+1]=aJ.y;b1[b9+2]=aJ.z;if(aL.gammaInput){a2(cc,b9,cn,co*co)}else{a3(cc,b9,cn,co)}cE+=1}else{if(cg instanceof THREE.PointLight){ci+=1;if(!cg.visible){continue}cw=cj*3;if(aL.gammaInput){a2(cy,cw,cn,co*co)}else{a3(cy,cw,cn,co)}R.getPositionFromMatrix(cg.matrixWorld);cu[cw]=R.x;cu[cw+1]=R.y;cu[cw+2]=R.z;cm[cj]=ce;cj+=1}else{if(cg instanceof THREE.SpotLight){ch+=1;if(!cg.visible){continue}ct=cf*3;if(aL.gammaInput){a2(cz,ct,cn,co*co)}else{a3(cz,ct,cn,co)}R.getPositionFromMatrix(cg.matrixWorld);b2[ct]=R.x;b2[ct+1]=R.y;b2[ct+2]=R.z;cv[cf]=ce;aJ.copy(R);R.getPositionFromMatrix(cg.target.matrixWorld);aJ.sub(R);aJ.normalize();cb[ct]=aJ.x;cb[ct+1]=aJ.y;cb[ct+2]=aJ.z;b4[cf]=Math.cos(cg.angle);cd[cf]=cg.exponent;cf+=1}else{if(cg instanceof THREE.HemisphereLight){b5+=1;if(!cg.visible){continue}aJ.getPositionFromMatrix(cg.matrixWorld);aJ.normalize();if(aJ.x===0&&aJ.y===0&&aJ.z===0){continue}cq=b8*3;ca[cq]=aJ.x;ca[cq+1]=aJ.y;ca[cq+2]=aJ.z;b0=cg.color;b7=cg.groundColor;if(aL.gammaInput){b6=co*co;a2(bZ,cq,b0,b6);a2(cA,cq,b7,b6)}else{a3(bZ,cq,b0,co);a3(cA,cq,b7,co)}b8+=1}}}}}}for(cB=cE*3,cp=Math.max(cc.length,cl*3);cB<cp;cB++){cc[cB]=0}for(cB=cj*3,cp=Math.max(cy.length,ci*3);cB<cp;cB++){cy[cB]=0}for(cB=cf*3,cp=Math.max(cz.length,ch*3);cB<cp;cB++){cz[cB]=0}for(cB=b8*3,cp=Math.max(bZ.length,b5*3);cB<cp;cB++){bZ[cB]=0}for(cB=b8*3,cp=Math.max(cA.length,b5*3);cB<cp;cB++){cA[cB]=0}ck.directional.length=cE;ck.point.length=cj;ck.spot.length=cf;ck.hemi.length=b8;ck.ambient[0]=cs;ck.ambient[1]=cC;ck.ambient[2]=cD}this.setFaceCulling=function(bZ,bY){if(bZ===THREE.CullFaceNone){c.disable(c.CULL_FACE)}else{if(bY===THREE.FrontFaceDirectionCW){c.frontFace(c.CW)}else{c.frontFace(c.CCW)}if(bZ===THREE.CullFaceBack){c.cullFace(c.BACK)}else{if(bZ===THREE.CullFaceFront){c.cullFace(c.FRONT)}else{c.cullFace(c.FRONT_AND_BACK)}}c.enable(c.CULL_FACE)}};this.setMaterialFaces=function(b0){var bY=b0.side===THREE.DoubleSide;var bZ=b0.side===THREE.BackSide;if(bi!==bY){if(bY){c.disable(c.CULL_FACE)}else{c.enable(c.CULL_FACE)}bi=bY}if(k!==bZ){if(bZ){c.frontFace(c.CW)}else{c.frontFace(c.CCW)}k=bZ}};this.setDepthTest=function(bY){if(a!==bY){if(bY){c.enable(c.DEPTH_TEST)}else{c.disable(c.DEPTH_TEST)}a=bY}};this.setDepthWrite=function(bY){if(bw!==bY){c.depthMask(bY);bw=bY}};function aF(bY){if(bY!==bk){c.lineWidth(bY);bk=bY}}function bU(b0,bZ,bY){if(aH!==b0){if(b0){c.enable(c.POLYGON_OFFSET_FILL)}else{c.disable(c.POLYGON_OFFSET_FILL)}aH=b0}if(b0&&(bL!==bZ||a8!==bY)){c.polygonOffset(bZ,bY);bL=bZ;a8=bY}}this.setBlending=function(bZ,bY,b0,b1){if(bZ!==i){if(bZ===THREE.NoBlending){c.disable(c.BLEND)}else{if(bZ===THREE.AdditiveBlending){c.enable(c.BLEND);c.blendEquation(c.FUNC_ADD);c.blendFunc(c.SRC_ALPHA,c.ONE)}else{if(bZ===THREE.SubtractiveBlending){c.enable(c.BLEND);c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ZERO,c.ONE_MINUS_SRC_COLOR)}else{if(bZ===THREE.MultiplyBlending){c.enable(c.BLEND);c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ZERO,c.SRC_COLOR)}else{if(bZ===THREE.CustomBlending){c.enable(c.BLEND)}else{c.enable(c.BLEND);c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD);c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA)}}}}}i=bZ}if(bZ===THREE.CustomBlending){if(bY!==ag){c.blendEquation(aQ(bY));ag=bY}if(b0!==bN||b1!==aq){c.blendFunc(aQ(b0),aQ(b1));bN=b0;aq=b1}}else{ag=null;bN=null;aq=null}};function L(bZ){var b0,bY,b2=[];for(var b1 in bZ){b0=bZ[b1];if(b0===false){continue}bY="#define "+b1+" "+b0;b2.push(bY)}return b2.join("\n")}function g(b7,bY,b3,ck,cb,ch,b9){var ce,ci,cj,ca,bZ;var cd=[];if(b7){cd.push(b7)}else{cd.push(bY);cd.push(b3)}for(cj in ch){cd.push(cj);cd.push(ch[cj])}for(ce in b9){cd.push(ce);cd.push(b9[ce])}bZ=cd.join();for(ce=0,ci=bB.length;ce<ci;ce++){var b6=bB[ce];if(b6.code===bZ){b6.usedTimes++;return b6.program}}var b0="SHADOWMAP_TYPE_BASIC";if(b9.shadowMapType===THREE.PCFShadowMap){b0="SHADOWMAP_TYPE_PCF"}else{if(b9.shadowMapType===THREE.PCFSoftShadowMap){b0="SHADOWMAP_TYPE_PCF_SOFT"}}var b2=L(ch);ca=c.createProgram();var b1=["precision "+j+" float;",b2,aT?"#define VERTEX_TEXTURES":"",aL.gammaInput?"#define GAMMA_INPUT":"",aL.gammaOutput?"#define GAMMA_OUTPUT":"",aL.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+b9.maxDirLights,"#define MAX_POINT_LIGHTS "+b9.maxPointLights,"#define MAX_SPOT_LIGHTS "+b9.maxSpotLights,"#define MAX_HEMI_LIGHTS "+b9.maxHemiLights,"#define MAX_SHADOWS "+b9.maxShadows,"#define MAX_BONES "+b9.maxBones,b9.map?"#define USE_MAP":"",b9.envMap?"#define USE_ENVMAP":"",b9.lightMap?"#define USE_LIGHTMAP":"",b9.bumpMap?"#define USE_BUMPMAP":"",b9.normalMap?"#define USE_NORMALMAP":"",b9.specularMap?"#define USE_SPECULARMAP":"",b9.vertexColors?"#define USE_COLOR":"",b9.skinning?"#define USE_SKINNING":"",b9.useVertexTexture?"#define BONE_TEXTURE":"",b9.boneTextureWidth?"#define N_BONE_PIXEL_X "+b9.boneTextureWidth.toFixed(1):"",b9.boneTextureHeight?"#define N_BONE_PIXEL_Y "+b9.boneTextureHeight.toFixed(1):"",b9.morphTargets?"#define USE_MORPHTARGETS":"",b9.morphNormals?"#define USE_MORPHNORMALS":"",b9.perPixel?"#define PHONG_PER_PIXEL":"",b9.wrapAround?"#define WRAP_AROUND":"",b9.doubleSided?"#define DOUBLE_SIDED":"",b9.flipSided?"#define FLIP_SIDED":"",b9.shadowMapEnabled?"#define USE_SHADOWMAP":"",b9.shadowMapEnabled?"#define "+b0:"",b9.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",b9.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",b9.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n");var b5=["precision "+j+" float;",(b9.bumpMap||b9.normalMap)?"#extension GL_OES_standard_derivatives : enable":"",b2,"#define MAX_DIR_LIGHTS "+b9.maxDirLights,"#define MAX_POINT_LIGHTS "+b9.maxPointLights,"#define MAX_SPOT_LIGHTS "+b9.maxSpotLights,"#define MAX_HEMI_LIGHTS "+b9.maxHemiLights,"#define MAX_SHADOWS "+b9.maxShadows,b9.alphaTest?"#define ALPHATEST "+b9.alphaTest:"",aL.gammaInput?"#define GAMMA_INPUT":"",aL.gammaOutput?"#define GAMMA_OUTPUT":"",aL.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",(b9.useFog&&b9.fog)?"#define USE_FOG":"",(b9.useFog&&b9.fogExp)?"#define FOG_EXP2":"",b9.map?"#define USE_MAP":"",b9.envMap?"#define USE_ENVMAP":"",b9.lightMap?"#define USE_LIGHTMAP":"",b9.bumpMap?"#define USE_BUMPMAP":"",b9.normalMap?"#define USE_NORMALMAP":"",b9.specularMap?"#define USE_SPECULARMAP":"",b9.vertexColors?"#define USE_COLOR":"",b9.metal?"#define METAL":"",b9.perPixel?"#define PHONG_PER_PIXEL":"",b9.wrapAround?"#define WRAP_AROUND":"",b9.doubleSided?"#define DOUBLE_SIDED":"",b9.flipSided?"#define FLIP_SIDED":"",b9.shadowMapEnabled?"#define USE_SHADOWMAP":"",b9.shadowMapEnabled?"#define "+b0:"",b9.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",b9.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n");var cf=d("fragment",b5+bY);var b4=d("vertex",b1+b3);c.attachShader(ca,b4);c.attachShader(ca,cf);c.linkProgram(ca);if(!c.getProgramParameter(ca,c.LINK_STATUS)){console.error("Could not initialise shader\nVALIDATE_STATUS: "+c.getProgramParameter(ca,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]")}c.deleteShader(cf);c.deleteShader(b4);ca.uniforms={};ca.attributes={};var b8,cc,cl,cg;b8=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"];if(b9.useVertexTexture){b8.push("boneTexture")}else{b8.push("boneGlobalMatrices")}for(cc in ck){b8.push(cc)}ac(ca,b8);b8=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(cg=0;cg<b9.maxMorphTargets;cg++){b8.push("morphTarget"+cg)}for(cg=0;cg<b9.maxMorphNormals;cg++){b8.push("morphNormal"+cg)}for(cl in cb){b8.push(cl)}v(ca,b8);ca.id=ay++;bB.push({program:ca,code:bZ,usedTimes:1});aL.info.memory.programs=bB.length;return ca}function ac(b0,bY){var b1,bZ,b2;for(b1=0,bZ=bY.length;b1<bZ;b1++){b2=bY[b1];b0.uniforms[b2]=c.getUniformLocation(b0,b2)}}function v(b0,bY){var b1,bZ,b2;for(b1=0,bZ=bY.length;b1<bZ;b1++){b2=bY[b1];b0.attributes[b2]=c.getAttribLocation(b0,b2)}}function Y(bZ){var b1=bZ.split("\n");for(var b0=0,bY=b1.length;b0<bY;b0++){b1[b0]=(b0+1)+": "+b1[b0]}return b1.join("\n")}function d(bZ,bY){var b0;if(bZ==="fragment"){b0=c.createShader(c.FRAGMENT_SHADER)}else{if(bZ==="vertex"){b0=c.createShader(c.VERTEX_SHADER)}}c.shaderSource(b0,bY);c.compileShader(b0);if(!c.getShaderParameter(b0,c.COMPILE_STATUS)){console.error(c.getShaderInfoLog(b0));console.error(Y(bY));return null}return b0}function a5(bY){return(bY&(bY-1))===0}function ah(bY,bZ,b0){if(b0){c.texParameteri(bY,c.TEXTURE_WRAP_S,aQ(bZ.wrapS));c.texParameteri(bY,c.TEXTURE_WRAP_T,aQ(bZ.wrapT));c.texParameteri(bY,c.TEXTURE_MAG_FILTER,aQ(bZ.magFilter));c.texParameteri(bY,c.TEXTURE_MIN_FILTER,aQ(bZ.minFilter))}else{c.texParameteri(bY,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(bY,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(bY,c.TEXTURE_MAG_FILTER,aM(bZ.magFilter));c.texParameteri(bY,c.TEXTURE_MIN_FILTER,aM(bZ.minFilter))}if(p&&bZ.type!==THREE.FloatType){if(bZ.anisotropy>1||bZ.__oldAnisotropy){c.texParameterf(bY,p.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(bZ.anisotropy,bz));bZ.__oldAnisotropy=bZ.anisotropy}}}this.setTexture=function(b5,b7){if(b5.needsUpdate){if(!b5.__webglInit){b5.__webglInit=true;b5.addEventListener("dispose",ae);b5.__webglTexture=c.createTexture();aL.info.memory.textures++}c.activeTexture(c.TEXTURE0+b7);c.bindTexture(c.TEXTURE_2D,b5.__webglTexture);c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL,b5.flipY);c.pixelStorei(c.UNPACK_PREMULTIPLY_ALPHA_WEBGL,b5.premultiplyAlpha);c.pixelStorei(c.UNPACK_ALIGNMENT,b5.unpackAlignment);var b1=b5.image,b4=a5(b1.width)&&a5(b1.height),bY=aQ(b5.format),b0=aQ(b5.type);ah(c.TEXTURE_2D,b5,b4);var bZ,b2=b5.mipmaps;if(b5 instanceof THREE.DataTexture){if(b2.length>0&&b4){for(var b3=0,b6=b2.length;b3<b6;b3++){bZ=b2[b3];c.texImage2D(c.TEXTURE_2D,b3,bY,bZ.width,bZ.height,0,bY,b0,bZ.data)}b5.generateMipmaps=false}else{c.texImage2D(c.TEXTURE_2D,0,bY,b1.width,b1.height,0,bY,b0,b1.data)}}else{if(b5 instanceof THREE.CompressedTexture){for(var b3=0,b6=b2.length;b3<b6;b3++){bZ=b2[b3];c.compressedTexImage2D(c.TEXTURE_2D,b3,bY,bZ.width,bZ.height,0,bZ.data)}}else{if(b2.length>0&&b4){for(var b3=0,b6=b2.length;b3<b6;b3++){bZ=b2[b3];c.texImage2D(c.TEXTURE_2D,b3,bY,bY,b0,bZ)}b5.generateMipmaps=false}else{c.texImage2D(c.TEXTURE_2D,0,bY,bY,b0,b5.image)}}}if(b5.generateMipmaps&&b4){c.generateMipmap(c.TEXTURE_2D)}b5.needsUpdate=false;if(b5.onUpdate){b5.onUpdate()}}else{c.activeTexture(c.TEXTURE0+b7);c.bindTexture(c.TEXTURE_2D,b5.__webglTexture)}};function r(b3,b4){if(b3.width<=b4&&b3.height<=b4){return b3}var b2=Math.max(b3.width,b3.height);var b1=Math.floor(b3.width*b4/b2);var bZ=Math.floor(b3.height*b4/b2);var b0=document.createElement("canvas");b0.width=b1;b0.height=bZ;var bY=b0.getContext("2d");bY.drawImage(b3,0,0,b3.width,b3.height,0,0,b1,bZ);return b0}function bj(b9,ca){if(b9.image.length===6){if(b9.needsUpdate){if(!b9.image.__webglTextureCube){b9.image.__webglTextureCube=c.createTexture();aL.info.memory.textures++}c.activeTexture(c.TEXTURE0+ca);c.bindTexture(c.TEXTURE_CUBE_MAP,b9.image.__webglTextureCube);c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL,b9.flipY);var b1=b9 instanceof THREE.CompressedTexture;var bY=[];for(var b7=0;b7<6;b7++){if(aL.autoScaleCubemaps&&!b1){bY[b7]=r(b9.image[b7],al)}else{bY[b7]=b9.image[b7]}}var b4=bY[0],b8=a5(b4.width)&&a5(b4.height),bZ=aQ(b9.format),b2=aQ(b9.type);ah(c.TEXTURE_CUBE_MAP,b9,b8);for(var b7=0;b7<6;b7++){if(b1){var b0,b3=bY[b7].mipmaps;for(var b5=0,b6=b3.length;b5<b6;b5++){b0=b3[b5];c.compressedTexImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+b7,b5,bZ,b0.width,b0.height,0,b0.data)}}else{c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+b7,0,bZ,bZ,b2,bY[b7])}}if(b9.generateMipmaps&&b8){c.generateMipmap(c.TEXTURE_CUBE_MAP)}b9.needsUpdate=false;if(b9.onUpdate){b9.onUpdate()}}else{c.activeTexture(c.TEXTURE0+ca);c.bindTexture(c.TEXTURE_CUBE_MAP,b9.image.__webglTextureCube)}}}function a7(bY,bZ){c.activeTexture(c.TEXTURE0+bZ);c.bindTexture(c.TEXTURE_CUBE_MAP,bY.__webglTexture)}function a6(b0,bZ,bY){c.bindFramebuffer(c.FRAMEBUFFER,b0);c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,bY,bZ.__webglTexture,0)}function q(bY,bZ){c.bindRenderbuffer(c.RENDERBUFFER,bY);if(bZ.depthBuffer&&!bZ.stencilBuffer){c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_COMPONENT16,bZ.width,bZ.height);c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_ATTACHMENT,c.RENDERBUFFER,bY)}else{if(bZ.depthBuffer&&bZ.stencilBuffer){c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_STENCIL,bZ.width,bZ.height);c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_STENCIL_ATTACHMENT,c.RENDERBUFFER,bY)}else{c.renderbufferStorage(c.RENDERBUFFER,c.RGBA4,bZ.width,bZ.height)}}}this.setRenderTarget=function(b2){var b4=(b2 instanceof THREE.WebGLRenderTargetCube);if(b2&&!b2.__webglFramebuffer){if(b2.depthBuffer===undefined){b2.depthBuffer=true}if(b2.stencilBuffer===undefined){b2.stencilBuffer=true}b2.addEventListener("dispose",N);b2.__webglTexture=c.createTexture();aL.info.memory.textures++;var b5=a5(b2.width)&&a5(b2.height),bY=aQ(b2.format),b0=aQ(b2.type);if(b4){b2.__webglFramebuffer=[];b2.__webglRenderbuffer=[];c.bindTexture(c.TEXTURE_CUBE_MAP,b2.__webglTexture);ah(c.TEXTURE_CUBE_MAP,b2,b5);for(var b1=0;b1<6;b1++){b2.__webglFramebuffer[b1]=c.createFramebuffer();b2.__webglRenderbuffer[b1]=c.createRenderbuffer();c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+b1,0,bY,b2.width,b2.height,0,bY,b0,null);a6(b2.__webglFramebuffer[b1],b2,c.TEXTURE_CUBE_MAP_POSITIVE_X+b1);q(b2.__webglRenderbuffer[b1],b2)}if(b5){c.generateMipmap(c.TEXTURE_CUBE_MAP)}}else{b2.__webglFramebuffer=c.createFramebuffer();if(b2.shareDepthFrom){b2.__webglRenderbuffer=b2.shareDepthFrom.__webglRenderbuffer}else{b2.__webglRenderbuffer=c.createRenderbuffer()}c.bindTexture(c.TEXTURE_2D,b2.__webglTexture);ah(c.TEXTURE_2D,b2,b5);c.texImage2D(c.TEXTURE_2D,0,bY,b2.width,b2.height,0,bY,b0,null);a6(b2.__webglFramebuffer,b2,c.TEXTURE_2D);if(b2.shareDepthFrom){if(b2.depthBuffer&&!b2.stencilBuffer){c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_ATTACHMENT,c.RENDERBUFFER,b2.__webglRenderbuffer)}else{if(b2.depthBuffer&&b2.stencilBuffer){c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_STENCIL_ATTACHMENT,c.RENDERBUFFER,b2.__webglRenderbuffer)}}}else{q(b2.__webglRenderbuffer,b2)}if(b5){c.generateMipmap(c.TEXTURE_2D)}}if(b4){c.bindTexture(c.TEXTURE_CUBE_MAP,null)}else{c.bindTexture(c.TEXTURE_2D,null)}c.bindRenderbuffer(c.RENDERBUFFER,null);c.bindFramebuffer(c.FRAMEBUFFER,null)}var b7,bZ,b8,b6,b3;if(b2){if(b4){b7=b2.__webglFramebuffer[b2.activeCubeFace]}else{b7=b2.__webglFramebuffer}bZ=b2.width;b8=b2.height;b6=0;b3=0}else{b7=null;bZ=bP;b8=aS;b6=a1;b3=a0}if(b7!==bD){c.bindFramebuffer(c.FRAMEBUFFER,b7);c.viewport(b6,b3,bZ,b8);bD=b7}x=bZ;aR=b8};function aU(bY){if(bY instanceof THREE.WebGLRenderTargetCube){c.bindTexture(c.TEXTURE_CUBE_MAP,bY.__webglTexture);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null)}else{c.bindTexture(c.TEXTURE_2D,bY.__webglTexture);c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}}function aM(bY){if(bY===THREE.NearestFilter||bY===THREE.NearestMipMapNearestFilter||bY===THREE.NearestMipMapLinearFilter){return c.NEAREST}return c.LINEAR}function aQ(bY){if(bY===THREE.RepeatWrapping){return c.REPEAT}if(bY===THREE.ClampToEdgeWrapping){return c.CLAMP_TO_EDGE}if(bY===THREE.MirroredRepeatWrapping){return c.MIRRORED_REPEAT}if(bY===THREE.NearestFilter){return c.NEAREST}if(bY===THREE.NearestMipMapNearestFilter){return c.NEAREST_MIPMAP_NEAREST}if(bY===THREE.NearestMipMapLinearFilter){return c.NEAREST_MIPMAP_LINEAR}if(bY===THREE.LinearFilter){return c.LINEAR}if(bY===THREE.LinearMipMapNearestFilter){return c.LINEAR_MIPMAP_NEAREST}if(bY===THREE.LinearMipMapLinearFilter){return c.LINEAR_MIPMAP_LINEAR}if(bY===THREE.UnsignedByteType){return c.UNSIGNED_BYTE}if(bY===THREE.UnsignedShort4444Type){return c.UNSIGNED_SHORT_4_4_4_4}if(bY===THREE.UnsignedShort5551Type){return c.UNSIGNED_SHORT_5_5_5_1}if(bY===THREE.UnsignedShort565Type){return c.UNSIGNED_SHORT_5_6_5}if(bY===THREE.ByteType){return c.BYTE}if(bY===THREE.ShortType){return c.SHORT}if(bY===THREE.UnsignedShortType){return c.UNSIGNED_SHORT}if(bY===THREE.IntType){return c.INT}if(bY===THREE.UnsignedIntType){return c.UNSIGNED_INT}if(bY===THREE.FloatType){return c.FLOAT}if(bY===THREE.AlphaFormat){return c.ALPHA}if(bY===THREE.RGBFormat){return c.RGB}if(bY===THREE.RGBAFormat){return c.RGBA}if(bY===THREE.LuminanceFormat){return c.LUMINANCE}if(bY===THREE.LuminanceAlphaFormat){return c.LUMINANCE_ALPHA}if(bY===THREE.AddEquation){return c.FUNC_ADD}if(bY===THREE.SubtractEquation){return c.FUNC_SUBTRACT}if(bY===THREE.ReverseSubtractEquation){return c.FUNC_REVERSE_SUBTRACT}if(bY===THREE.ZeroFactor){return c.ZERO}if(bY===THREE.OneFactor){return c.ONE}if(bY===THREE.SrcColorFactor){return c.SRC_COLOR}if(bY===THREE.OneMinusSrcColorFactor){return c.ONE_MINUS_SRC_COLOR}if(bY===THREE.SrcAlphaFactor){return c.SRC_ALPHA}if(bY===THREE.OneMinusSrcAlphaFactor){return c.ONE_MINUS_SRC_ALPHA}if(bY===THREE.DstAlphaFactor){return c.DST_ALPHA}if(bY===THREE.OneMinusDstAlphaFactor){return c.ONE_MINUS_DST_ALPHA}if(bY===THREE.DstColorFactor){return c.DST_COLOR}if(bY===THREE.OneMinusDstColorFactor){return c.ONE_MINUS_DST_COLOR}if(bY===THREE.SrcAlphaSaturateFactor){return c.SRC_ALPHA_SATURATE}if(aC!==undefined){if(bY===THREE.RGB_S3TC_DXT1_Format){return aC.COMPRESSED_RGB_S3TC_DXT1_EXT}if(bY===THREE.RGBA_S3TC_DXT1_Format){return aC.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(bY===THREE.RGBA_S3TC_DXT3_Format){return aC.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(bY===THREE.RGBA_S3TC_DXT5_Format){return aC.COMPRESSED_RGBA_S3TC_DXT5_EXT}}return 0}function aG(b1){if(U&&b1&&b1.useVertexTexture){return 1024}else{var bZ=c.getParameter(c.MAX_VERTEX_UNIFORM_VECTORS);var b0=Math.floor((bZ-20)/4);var bY=b0;if(b1!==undefined&&b1 instanceof THREE.SkinnedMesh){bY=Math.min(b1.bones.length,bY);if(bY<b1.bones.length){console.warn("WebGLRenderer: too many bones - "+b1.bones.length+", this GPU supports just "+bY+" (try OpenGL instead of ANGLE)")}}return bY}}function bd(b0){var bZ,b3,bY,b1,b5,b2,b4;b1=b5=b2=b4=0;for(bZ=0,b3=b0.length;bZ<b3;bZ++){bY=b0[bZ];if(bY.onlyShadow){continue}if(bY instanceof THREE.DirectionalLight){b1++}if(bY instanceof THREE.PointLight){b5++}if(bY instanceof THREE.SpotLight){b2++}if(bY instanceof THREE.HemisphereLight){b4++}}return{directional:b1,point:b5,spot:b2,hemi:b4}}function V(b0){var bZ,b2,bY,b1=0;for(bZ=0,b2=b0.length;bZ<b2;bZ++){bY=b0[bZ];if(!bY.castShadow){continue}if(bY instanceof THREE.SpotLight){b1++}if(bY instanceof THREE.DirectionalLight&&!bY.shadowCascade){b1++}}return b1}function bo(){try{if(!(c=aV.getContext("experimental-webgl",{alpha:bA,premultipliedAlpha:aY,antialias:bW,stencil:e,preserveDrawingBuffer:T}))){throw"Error creating WebGL context."}}catch(bY){console.error(bY)}m=c.getExtension("OES_texture_float");bb=c.getExtension("OES_standard_derivatives");p=c.getExtension("EXT_texture_filter_anisotropic")||c.getExtension("MOZ_EXT_texture_filter_anisotropic")||c.getExtension("WEBKIT_EXT_texture_filter_anisotropic");aC=c.getExtension("WEBGL_compressed_texture_s3tc")||c.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||c.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");if(!m){console.log("THREE.WebGLRenderer: Float textures not supported.")}if(!bb){console.log("THREE.WebGLRenderer: Standard derivatives not supported.")}if(!p){console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.")}if(!aC){console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}if(c.getShaderPrecisionFormat===undefined){c.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}}}function ba(){c.clearColor(0,0,0,1);c.clearDepth(1);c.clearStencil(0);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendEquation(c.FUNC_ADD);c.blendFunc(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA);c.clearColor(bp.r,bp.g,bp.b,S)}this.shadowMapPlugin=new THREE.ShadowMapPlugin();this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin());this.addPostPlugin(new THREE.LensFlarePlugin())};THREE.WebGLRenderTarget=function(c,a,b){THREE.EventDispatcher.call(this);this.width=c;this.height=a;b=b||{};this.wrapS=b.wrapS!==undefined?b.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=b.wrapT!==undefined?b.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=b.magFilter!==undefined?b.magFilter:THREE.LinearFilter;this.minFilter=b.minFilter!==undefined?b.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=b.anisotropy!==undefined?b.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=b.format!==undefined?b.format:THREE.RGBAFormat;this.type=b.type!==undefined?b.type:THREE.UnsignedByteType;this.depthBuffer=b.depthBuffer!==undefined?b.depthBuffer:true;this.stencilBuffer=b.stencilBuffer!==undefined?b.stencilBuffer:true;this.generateMipmaps=true;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;a.shareDepthFrom=this.shareDepthFrom;return a};THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.WebGLRenderTargetCube=function(c,a,b){THREE.WebGLRenderTarget.call(this,c,a,b);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3();this.positionScreen=new THREE.Vector4();this.visible=true};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.v3=new THREE.RenderableVertex();this.centroidModel=new THREE.Vector3();this.normalModel=new THREE.Vector3();this.normalModelView=new THREE.Vector3();this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];this.vertexNormalsModelView=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];this.color=null;this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.v3=new THREE.RenderableVertex();this.v4=new THREE.RenderableVertex();this.centroidModel=new THREE.Vector3();this.normalModel=new THREE.Vector3();this.normalModelView=new THREE.Vector3();this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];this.vertexNormalsModelView=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];this.color=null;this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.object=null;this.z=null};THREE.RenderableParticle=function(){this.object=null;this.x=null;this.y=null;this.z=null;this.rotation=null;this.scale=new THREE.Vector2();this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.material=null};THREE.GeometryUtils={merge:function(o,k){var v,h,n=o.vertices.length,s=o.faceVertexUvs[0].length,m=k instanceof THREE.Mesh?k.geometry:k,d=o.vertices,c=m.vertices,b=o.faces,a=m.faces,A=o.faceVertexUvs[0],z=m.faceVertexUvs[0];if(k instanceof THREE.Mesh){k.matrixAutoUpdate&&k.updateMatrix();v=k.matrix;h=new THREE.Matrix3();h.getInverse(v);h.transpose()}for(var w=0,l=c.length;w<l;w++){var B=c[w];var r=B.clone();if(v){r.applyMatrix4(v)}d.push(r)}for(w=0,l=a.length;w<l;w++){var g=a[w],q,C,t,p=g.vertexNormals,y=g.vertexColors;if(g instanceof THREE.Face3){q=new THREE.Face3(g.a+n,g.b+n,g.c+n)}else{if(g instanceof THREE.Face4){q=new THREE.Face4(g.a+n,g.b+n,g.c+n,g.d+n)}}q.normal.copy(g.normal);if(h){q.normal.applyMatrix3(h).normalize()}for(var u=0,x=p.length;u<x;u++){C=p[u].clone();if(h){C.applyMatrix3(h).normalize()}q.vertexNormals.push(C)}q.color.copy(g.color);for(var u=0,x=y.length;u<x;u++){t=y[u];q.vertexColors.push(t.clone())}q.materialIndex=g.materialIndex;q.centroid.copy(g.centroid);if(v){q.centroid.applyMatrix4(v)}b.push(q)}for(w=0,l=z.length;w<l;w++){var f=z[w],e=[];for(var u=0,x=f.length;u<x;u++){e.push(new THREE.Vector2(f[u].x,f[u].y))}A.push(e)}},removeMaterials:function(f,g){var a={};for(var d=0,c=g.length;d<c;d++){a[g[d]]=true}var e,b=[];for(var d=0,c=f.faces.length;d<c;d++){e=f.faces[d];if(!(e.materialIndex in a)){b.push(e)}}f.faces=b},randomPointInTriangle:function(h,f,k){var g,e,j,d=new THREE.Vector3(),i=THREE.GeometryUtils.__v1;g=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();if((g+e)>1){g=1-g;e=1-e}j=1-g-e;d.copy(h);d.multiplyScalar(g);i.copy(f);i.multiplyScalar(e);d.add(i);i.copy(k);i.multiplyScalar(j);d.add(i);return d},randomPointInFace:function(f,g,e){var d,c,b,j;if(f instanceof THREE.Face3){d=g.vertices[f.a];c=g.vertices[f.b];b=g.vertices[f.c];return THREE.GeometryUtils.randomPointInTriangle(d,c,b)}else{if(f instanceof THREE.Face4){d=g.vertices[f.a];c=g.vertices[f.b];b=g.vertices[f.c];j=g.vertices[f.d];var i,h;if(e){if(f._area1&&f._area2){i=f._area1;h=f._area2}else{i=THREE.GeometryUtils.triangleArea(d,c,j);h=THREE.GeometryUtils.triangleArea(c,b,j);f._area1=i;f._area2=h}}else{i=THREE.GeometryUtils.triangleArea(d,c,j),h=THREE.GeometryUtils.triangleArea(c,b,j)}var a=THREE.GeometryUtils.random()*(i+h);if(a<i){return THREE.GeometryUtils.randomPointInTriangle(d,c,j)}else{return THREE.GeometryUtils.randomPointInTriangle(c,b,j)}}}},randomPointsInGeometry:function(b,k){var e,o,a=b.faces,c=b.vertices,f=a.length,q=0,t=[],s,p,m,l;for(o=0;o<f;o++){e=a[o];if(e instanceof THREE.Face3){s=c[e.a];p=c[e.b];m=c[e.c];e._area=THREE.GeometryUtils.triangleArea(s,p,m)}else{if(e instanceof THREE.Face4){s=c[e.a];p=c[e.b];m=c[e.c];l=c[e.d];e._area1=THREE.GeometryUtils.triangleArea(s,p,l);e._area2=THREE.GeometryUtils.triangleArea(p,m,l);e._area=e._area1+e._area2}}q+=e._area;t[o]=q}function h(n){function r(x,v){if(v<x){return x}var w=x+Math.floor((v-x)/2);if(t[w]>n){return r(x,w-1)}else{if(t[w]<n){return r(w+1,v)}else{return w}}}var i=r(0,t.length-1);return i}var j,d,g=[];var u={};for(o=0;o<k;o++){j=THREE.GeometryUtils.random()*q;d=h(j);g[o]=THREE.GeometryUtils.randomPointInFace(a[d],b,true);if(!u[d]){u[d]=1}else{u[d]+=1}}return g},triangleArea:function(b,a,e){var d=THREE.GeometryUtils.__v1,c=THREE.GeometryUtils.__v2;d.subVectors(a,b);c.subVectors(e,b);d.cross(c);return 0.5*d.length()},center:function(c){c.computeBoundingBox();var b=c.boundingBox;var a=new THREE.Vector3();a.addVectors(b.min,b.max);a.multiplyScalar(-0.5);c.applyMatrix(new THREE.Matrix4().makeTranslation(a.x,a.y,a.z));c.computeBoundingBox();return a},normalizeUVs:function(g){var b=g.faceVertexUvs[0];for(var f=0,a=b.length;f<a;f++){var e=b[f];for(var c=0,d=e.length;c<d;c++){if(e[c].x!==1){e[c].x=e[c].x-Math.floor(e[c].x)}if(e[c].y!==1){e[c].y=e[c].y-Math.floor(e[c].y)}}}},triangulateQuads:function(g){var u,m,t,v;var e=[];var f=[];var w=[];for(u=0,m=g.faceUvs.length;u<m;u++){f[u]=[]}for(u=0,m=g.faceVertexUvs.length;u<m;u++){w[u]=[]}for(u=0,m=g.faces.length;u<m;u++){var k=g.faces[u];if(k instanceof THREE.Face4){var C=k.a;var B=k.b;var A=k.c;var z=k.d;var s=new THREE.Face3();var r=new THREE.Face3();s.color.copy(k.color);r.color.copy(k.color);s.materialIndex=k.materialIndex;r.materialIndex=k.materialIndex;s.a=C;s.b=B;s.c=z;r.a=B;r.b=A;r.c=z;if(k.vertexColors.length===4){s.vertexColors[0]=k.vertexColors[0].clone();s.vertexColors[1]=k.vertexColors[1].clone();s.vertexColors[2]=k.vertexColors[3].clone();r.vertexColors[0]=k.vertexColors[1].clone();r.vertexColors[1]=k.vertexColors[2].clone();r.vertexColors[2]=k.vertexColors[3].clone()}e.push(s,r);for(t=0,v=g.faceVertexUvs.length;t<v;t++){if(g.faceVertexUvs[t].length){var n=g.faceVertexUvs[t][u];var q=n[0];var p=n[1];var o=n[2];var l=n[3];var y=[q.clone(),p.clone(),l.clone()];var x=[p.clone(),o.clone(),l.clone()];w[t].push(y,x)}}for(t=0,v=g.faceUvs.length;t<v;t++){if(g.faceUvs[t].length){var h=g.faceUvs[t][u];f[t].push(h,h)}}}else{e.push(k);for(t=0,v=g.faceUvs.length;t<v;t++){f[t].push(g.faceUvs[t][u])}for(t=0,v=g.faceVertexUvs.length;t<v;t++){w[t].push(g.faceVertexUvs[t][u])}}}g.faces=e;g.faceUvs=f;g.faceVertexUvs=w;g.computeCentroids();g.computeFaceNormals();g.computeVertexNormals();if(g.hasTangents){g.computeTangents()}},setMaterialIndex:function(g,d,f,c){var a=g.faces;var h=f||0;var b=c||a.length-1;for(var e=h;e<=b;e++){a[e].materialIndex=d}}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3();THREE.GeometryUtils.__v2=new THREE.Vector3();THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(c,b,d,f){var g=new Image();var e=new THREE.Texture(g,b);var a=new THREE.ImageLoader();a.addEventListener("load",function(h){e.image=h.content;e.needsUpdate=true;if(d){d(e)}});a.addEventListener("error",function(h){if(f){f(h.message)}});a.crossOrigin=this.crossOrigin;a.load(c,g);e.sourceFile=c;return e},loadCompressedTexture:function(b,a,c,f){var e=new THREE.CompressedTexture();e.mapping=a;var d=new XMLHttpRequest();d.onload=function(){var g=d.response;var h=THREE.ImageUtils.parseDDS(g,true);e.format=h.format;e.mipmaps=h.mipmaps;e.image.width=h.width;e.image.height=h.height;e.generateMipmaps=false;e.needsUpdate=true;if(c){c(e)}};d.onerror=f;d.open("GET",b,true);d.responseType="arraybuffer";d.send(null);return e},loadTextureCube:function(e,b,g,d){var h=[];h.loadCount=0;var f=new THREE.Texture();f.image=h;if(b!==undefined){f.mapping=b}f.flipY=false;for(var c=0,j=e.length;c<j;++c){var a=new Image();h[c]=a;a.onload=function(){h.loadCount+=1;if(h.loadCount===6){f.needsUpdate=true;if(g){g(f)}}};a.onerror=d;a.crossOrigin=this.crossOrigin;a.src=e[c]}return f},loadCompressedTextureCube:function(h,b,k,g){var l=[];l.loadCount=0;var j=new THREE.CompressedTexture();j.image=l;if(b!==undefined){j.mapping=b}j.flipY=false;j.generateMipmaps=false;var d=function(n,i){return function(){var o=n.response;var p=THREE.ImageUtils.parseDDS(o,true);i.format=p.format;i.mipmaps=p.mipmaps;i.width=p.width;i.height=p.height;l.loadCount+=1;if(l.loadCount===6){j.format=p.format;j.needsUpdate=true;if(k){k(j)}}}};if(h instanceof Array){for(var f=0,m=h.length;f<m;++f){var a={};l[f]=a;var e=new XMLHttpRequest();e.onload=d(e,a);e.onerror=g;var c=h[f];e.open("GET",c,true);e.responseType="arraybuffer";e.send(null)}}else{var c=h;var e=new XMLHttpRequest();e.onload=function(){var o=e.response;var p=THREE.ImageUtils.parseDDS(o,true);if(p.isCubemap){var n=p.mipmaps.length/p.mipmapCount;for(var r=0;r<n;r++){l[r]={mipmaps:[]};for(var q=0;q<p.mipmapCount;q++){l[r].mipmaps.push(p.mipmaps[r*p.mipmapCount+q]);l[r].format=p.format;l[r].width=p.width;l[r].height=p.height}}j.format=p.format;j.needsUpdate=true;if(k){k(j)}}};e.onerror=g;e.open("GET",c,true);e.responseType="arraybuffer";e.send(null)}return j},parseDDS:function(E,ac){var N={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};var D=542327876;var R=1,C=2,ae=4,F=8,T=4096,P=131072,y=524288,f=8388608;var W=8,m=4194304,l=4096;var V=512,O=1024,aa=2048,M=4096,Z=8192,L=16384,X=32768,q=2097152;var B=1,G=2,ah=4,t=64,U=512,z=131072;function ag(i){return i.charCodeAt(0)+(i.charCodeAt(1)<<8)+(i.charCodeAt(2)<<16)+(i.charCodeAt(3)<<24)}function x(i){return String.fromCharCode(i&255,(i>>8)&255,(i>>16)&255,(i>>24)&255)}var k=ag("DXT1");var j=ag("DXT3");var g=ag("DXT5");var b=31;var A=0;var Y=1;var af=2;var ab=3;var K=4;var p=7;var Q=20;var d=21;var o=27;var s=28;var r=29;var n=30;var h=new Int32Array(E,0,b);if(h[A]!==D){console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header");return N}if(!h[Q]&ah){console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code");return N}var I;var H=h[d];switch(H){case k:I=8;N.format=THREE.RGB_S3TC_DXT1_Format;break;case j:I=16;N.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:I=16;N.format=THREE.RGBA_S3TC_DXT5_Format;break;default:console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",x(H));return N}N.mipmapCount=1;if(h[af]&P&&ac!==false){N.mipmapCount=Math.max(1,h[p])}N.isCubemap=h[s]&V?true:false;N.width=h[K];N.height=h[ab];var S=h[Y]+4;var a=N.width;var e=N.height;var w=N.isCubemap?6:1;for(var v=0;v<w;v++){for(var ad=0;ad<N.mipmapCount;ad++){var u=Math.max(4,a)/4*Math.max(4,e)/4*I;var J=new Uint8Array(E,S,u);var c={data:J,width:a,height:e};N.mipmaps.push(c);S+=u;a=Math.max(a*0.5,1);e=Math.max(e*0.5,1)}a=N.width;e=N.height}return N},getNormalMap:function(q,C){var d=function(x,i){return[x[1]*i[2]-x[2]*i[1],x[2]*i[0]-x[0]*i[2],x[0]*i[1]-x[1]*i[0]]};var v=function(x,i){return[x[0]-i[0],x[1]-i[1],x[2]-i[2]]};var s=function(x){var i=Math.sqrt(x[0]*x[0]+x[1]*x[1]+x[2]*x[2]);return[x[0]/i,x[1]/i,x[2]/i]};C=C|1;var r=q.width;var p=q.height;var e=document.createElement("canvas");e.width=r;e.height=p;var c=e.getContext("2d");c.drawImage(q,0,0);var D=c.getImageData(0,0,r,p).data;var w=c.createImageData(r,p);var k=w.data;for(var m=0;m<r;m++){for(var l=0;l<p;l++){var f=l-1<0?0:l-1;var h=l+1>p-1?p-1:l+1;var g=m-1<0?0:m-1;var j=m+1>r-1?r-1:m+1;var u=[];var B=[0,0,D[(l*r+m)*4]/255*C];u.push([-1,0,D[(l*r+g)*4]/255*C]);u.push([-1,-1,D[(f*r+g)*4]/255*C]);u.push([0,-1,D[(f*r+m)*4]/255*C]);u.push([1,-1,D[(f*r+j)*4]/255*C]);u.push([1,0,D[(l*r+j)*4]/255*C]);u.push([1,1,D[(h*r+j)*4]/255*C]);u.push([0,1,D[(h*r+m)*4]/255*C]);u.push([-1,1,D[(h*r+g)*4]/255*C]);var o=[];var z=u.length;for(var t=0;t<z;t++){var b=u[t];var a=u[(t+1)%z];b=v(b,B);a=v(a,B);o.push(s(d(b,a)))}var A=[0,0,0];for(var t=0;t<o.length;t++){A[0]+=o[t][0];A[1]+=o[t][1];A[2]+=o[t][2]}A[0]/=o.length;A[1]/=o.length;A[2]/=o.length;var n=(l*r+m)*4;k[n]=((A[0]+1)/2*255)|0;k[n+1]=((A[1]+1)/2*255)|0;k[n+2]=(A[2]*255)|0;k[n+3]=255}}c.putImageData(w,0,0);return e},generateDataTexture:function(c,l,d){var m=c*l;var f=new Uint8Array(3*m);var a=Math.floor(d.r*255);var h=Math.floor(d.g*255);var k=Math.floor(d.b*255);for(var e=0;e<m;e++){f[e*3]=a;f[e*3+1]=h;f[e*3+2]=k}var j=new THREE.DataTexture(f,c,l,THREE.RGBFormat);j.needsUpdate=true;return j}};THREE.SceneUtils={createMultiMaterialObject:function(e,b){var d=new THREE.Object3D();for(var c=0,a=b.length;c<a;c++){d.add(new THREE.Mesh(e,b[c]))}return d},detach:function(c,a,b){c.applyMatrix(a.matrixWorld);a.remove(c);b.add(c)},attach:function(d,c,a){var b=new THREE.Matrix4();b.getInverse(a.matrixWorld);d.applyMatrix(b);c.remove(d);a.add(d)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(d){var a=d.familyName.toLowerCase();var b=this;b.faces[a]=b.faces[a]||{};b.faces[a][d.cssFontWeight]=b.faces[a][d.cssFontWeight]||{};b.faces[a][d.cssFontWeight][d.cssFontStyle]=d;var c=b.faces[a][d.cssFontWeight][d.cssFontStyle]=d;return d},drawText:function(n){var a=[],e=[];var j,c,l=this.getFace(),g=this.size/l.resolution,h=0,m=String(n).split(""),d=m.length;var f=[];for(j=0;j<d;j++){var o=new THREE.Path();var k=this.extractGlyphPoints(m[j],l,g,h,o);h+=k.offset;f.push(k.path)}var b=h/2;return{paths:f,offset:b}},extractGlyphPoints:function(C,j,G,f,r){var H=[];var v,s,d,e,u,b,E,B,l,k,h,g,q,A,o,z,n,w,a,m=j.glyphs[C]||j.glyphs["?"];if(!m){return}if(m.o){e=m._cachedOutline||(m._cachedOutline=m.o.split(" "));b=e.length;E=G;B=G;for(v=0;v<b;){u=e[v++];switch(u){case"m":l=e[v++]*E+f;k=e[v++]*B;r.moveTo(l,k);break;case"l":l=e[v++]*E+f;k=e[v++]*B;r.lineTo(l,k);break;case"q":h=e[v++]*E+f;g=e[v++]*B;o=e[v++]*E+f;z=e[v++]*B;r.quadraticCurveTo(o,z,h,g);a=H[H.length-1];if(a){q=a.x;A=a.y;for(s=1,d=this.divisions;s<=d;s++){var p=s/d;var F=THREE.Shape.Utils.b2(p,q,o,h);var D=THREE.Shape.Utils.b2(p,A,z,g)}}break;case"b":h=e[v++]*E+f;g=e[v++]*B;o=e[v++]*E+f;z=e[v++]*-B;n=e[v++]*E+f;w=e[v++]*-B;r.bezierCurveTo(h,g,o,z,n,w);a=H[H.length-1];if(a){q=a.x;A=a.y;for(s=1,d=this.divisions;s<=d;s++){var p=s/d;var F=THREE.Shape.Utils.b3(p,q,o,n,h);var D=THREE.Shape.Utils.b3(p,A,z,w,g)}}break}}}return{offset:m.ha*G,path:r}}};THREE.FontUtils.generateShapes=function(i,j){j=j||{};var l=j.size!==undefined?j.size:100;var h=j.curveSegments!==undefined?j.curveSegments:4;var d=j.font!==undefined?j.font:"helvetiker";var g=j.weight!==undefined?j.weight:"normal";var a=j.style!==undefined?j.style:"normal";THREE.FontUtils.size=l;THREE.FontUtils.divisions=h;THREE.FontUtils.face=d;THREE.FontUtils.weight=g;THREE.FontUtils.style=a;var f=THREE.FontUtils.drawText(i);var k=f.paths;var c=[];for(var b=0,e=k.length;b<e;b++){Array.prototype.push.apply(c,k[b].toShapes())}return c};(function(c){var b=1e-10;var e=function(g,r){var f=g.length;if(f<3){return null}var A=[],p=[],j=[];var x,q,o;if(d(g)>0){for(q=0;q<f;q++){p[q]=q}}else{for(q=0;q<f;q++){p[q]=(f-1)-q}}var i=f;var h=2*i;for(q=i-1;i>2;){if((h--)<=0){console.log("Warning, unable to triangulate polygon!");if(r){return j}return A}x=q;if(i<=x){x=0}q=x+1;if(i<=q){q=0}o=q+1;if(i<=o){o=0}if(a(g,x,q,o,i,p)){var m,l,k,z,y;m=p[x];l=p[q];k=p[o];A.push([g[m],g[l],g[k]]);j.push([p[x],p[q],p[o]]);for(z=q,y=q+1;y<i;z++,y++){p[z]=p[y]}i--;h=2*i}}if(r){return j}return A};var d=function(g){var j=g.length;var f=0;for(var i=j-1,h=0;h<j;i=h++){f+=g[i].x*g[h].y-g[h].x*g[i].y}return f*0.5};var a=function(G,A,z,t,F,N){var E;var x,r,L,J;var i,g,D,C;x=G[N[A]].x;r=G[N[A]].y;L=G[N[z]].x;J=G[N[z]].y;i=G[N[t]].x;g=G[N[t]].y;if(b>(((L-x)*(g-r))-((J-r)*(i-x)))){return false}var h,f,y,s,M,K;var l,k,I,H,o,m;var j,q,B;h=i-L;f=g-J;y=x-i;s=r-g;M=L-x;K=J-r;for(E=0;E<F;E++){if((E===A)||(E===z)||(E===t)){continue}D=G[N[E]].x;C=G[N[E]].y;l=D-x;k=C-r;I=D-L;H=C-J;o=D-i;m=C-g;B=h*H-f*I;j=M*k-K*l;q=y*m-s*o;if((B>=0)&&(q>=0)&&(j>=0)){return false}}return true};c.Triangulate=e;c.Triangulate.area=d;return c})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)};THREE.Curve.prototype.getPoints=function(a){if(!a){a=5}var c,b=[];for(c=0;c<=a;c++){b.push(this.getPoint(c/a))}return b};THREE.Curve.prototype.getSpacedPoints=function(a){if(!a){a=5}var c,b=[];for(c=0;c<=a;c++){b.push(this.getPointAt(c/a))}return b};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(b){if(!b){b=(this.__arcLengthDivisions)?(this.__arcLengthDivisions):200}if(this.cacheArcLengths&&(this.cacheArcLengths.length==b+1)&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;var a=[];var f,d=this.getPoint(0);var e,c=0;a.push(0);for(e=1;e<=b;e++){f=this.getPoint(e/b);c+=f.distanceTo(d);a.push(c);d=f}this.cacheArcLengths=a;return a};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=true;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(m,a){var b=this.getLengths();var e=0,j=b.length;var k;if(a){k=a}else{k=m*b[j-1]}var h=0,d=j-1,l;while(h<=d){e=Math.floor(h+(d-h)/2);l=b[e]-k;if(l<0){h=e+1;continue}else{if(l>0){d=e-1;continue}else{d=e;break}}}e=d;if(b[e]==k){var o=e/(j-1);return o}var f=b[e];var n=b[e+1];var c=n-f;var g=(k-f)/c;var o=(e+g)/(j-1);return o};THREE.Curve.prototype.getTangent=function(b){var g=0.0001;var d=b-g;var c=b+g;if(d<0){d=0}if(c>1){c=1}var f=this.getPoint(d);var e=this.getPoint(c);var a=e.clone().sub(f);return a.normalize()};THREE.Curve.prototype.getTangentAt=function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)};THREE.LineCurve=function(b,a){this.v1=b;this.v2=a};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(b){var a=this.v2.clone().sub(this.v1);a.multiplyScalar(b).add(this.v1);return a};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){var b=this.v2.clone().sub(this.v1);return b.normalize()};THREE.QuadraticBezierCurve=function(a,c,b){this.v0=a;this.v1=c;this.v2=b};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(c){var b,a;b=THREE.Shape.Utils.b2(c,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(c,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(c){var b,a;b=THREE.Curve.Utils.tangentQuadraticBezier(c,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(c,this.v0.y,this.v1.y,this.v2.y);var d=new THREE.Vector2(b,a);d.normalize();return d};THREE.CubicBezierCurve=function(a,d,c,b){this.v0=a;this.v1=d;this.v2=c;this.v3=b};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(c){var b,a;b=THREE.Shape.Utils.b3(c,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(c,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(c){var b,a;b=THREE.Curve.Utils.tangentCubicBezier(c,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(c,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var d=new THREE.Vector2(b,a);d.normalize();return d};THREE.SplineCurve=function(a){this.points=(a==undefined)?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(d){var b=new THREE.Vector2();var h=[];var e=this.points,a,g,f;a=(e.length-1)*d;g=Math.floor(a);f=a-g;h[0]=g==0?g:g-1;h[1]=g;h[2]=g>e.length-2?e.length-1:g+1;h[3]=g>e.length-3?e.length-1:g+2;b.x=THREE.Curve.Utils.interpolate(e[h[0]].x,e[h[1]].x,e[h[2]].x,e[h[3]].x,f);b.y=THREE.Curve.Utils.interpolate(e[h[0]].y,e[h[1]].y,e[h[2]].y,e[h[3]].y,f);return b};THREE.EllipseCurve=function(f,e,g,a,d,c,b){this.aX=f;this.aY=e;this.xRadius=g;this.yRadius=a;this.aStartAngle=d;this.aEndAngle=c;this.aClockwise=b};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(c){var e=this.aEndAngle-this.aStartAngle;if(!this.aClockwise){c=1-c}var d=this.aStartAngle+c*e;var b=this.aX+this.xRadius*Math.cos(d);var a=this.aY+this.yRadius*Math.sin(d);return new THREE.Vector2(b,a)};THREE.ArcCurve=function(e,d,f,c,b,a){THREE.EllipseCurve.call(this,e,d,f,f,c,b,a)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.Curve.Utils={tangentQuadraticBezier:function(a,d,c,b){return 2*(1-a)*(c-d)+2*a*(b-c)},tangentCubicBezier:function(a,e,d,c,b){return -3*e*(1-a)*(1-a)+3*d*(1-a)*(1-a)-6*a*d*(1-a)+6*a*c*(1-a)-3*a*a*c+3*a*a*b},tangentSpline:function(i,h,g,f,d){var e=6*i*i-6*i;var b=3*i*i-4*i+1;var c=-6*i*i+6*i;var a=3*i*i-2*i;return e+b+c+a},interpolate:function(h,g,e,d,i){var f=(e-h)*0.5;var c=(d-g)*0.5;var b=i*i;var a=i*b;return(2*g-2*e+f+c)*a+(-3*g+3*e-2*f-c)*b+f*i+g}};THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(b,a){this.v1=b;this.v2=a},function(a){var b=new THREE.Vector3();b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,c,b){this.v0=a;this.v1=c;this.v2=b},function(c){var b,a,d;b=THREE.Shape.Utils.b2(c,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(c,this.v0.y,this.v1.y,this.v2.y);d=THREE.Shape.Utils.b2(c,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,a,d)});THREE.CubicBezierCurve3=THREE.Curve.create(function(a,d,c,b){this.v0=a;this.v1=d;this.v2=c;this.v3=b},function(c){var b,a,d;b=THREE.Shape.Utils.b3(c,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(c,this.v0.y,this.v1.y,this.v2.y,this.v3.y);d=THREE.Shape.Utils.b3(c,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,a,d)});THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=(a==undefined)?[]:a},function(l){var j=new THREE.Vector3();var d=[];var i=this.points,g,a,b;g=(i.length-1)*l;a=Math.floor(g);b=g-a;d[0]=a==0?a:a-1;d[1]=a;d[2]=a>i.length-2?i.length-1:a+1;d[3]=a>i.length-3?i.length-1:a+2;var k=i[d[0]],h=i[d[1]],f=i[d[2]],e=i[d[3]];j.x=THREE.Curve.Utils.interpolate(k.x,h.x,f.x,e.x,b);j.y=THREE.Curve.Utils.interpolate(k.y,h.y,f.y,e.y,b);j.z=THREE.Curve.Utils.interpolate(k.z,h.z,f.z,e.z,b);return j});THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=(a==undefined)?[]:a},function(d){var b=new THREE.Vector3();var h=[];var e=this.points,a,g,f;a=(e.length-0)*d;g=Math.floor(a);f=a-g;g+=g>0?0:(Math.floor(Math.abs(g)/e.length)+1)*e.length;h[0]=(g-1)%e.length;h[1]=(g)%e.length;h[2]=(g+1)%e.length;h[3]=(g+2)%e.length;b.x=THREE.Curve.Utils.interpolate(e[h[0]].x,e[h[1]].x,e[h[2]].x,e[h[3]].x,f);b.y=THREE.Curve.Utils.interpolate(e[h[0]].y,e[h[1]].y,e[h[2]].y,e[h[3]].y,f);b.z=THREE.Curve.Utils.interpolate(e[h[0]].z,e[h[1]].z,e[h[2]].z,e[h[3]].z,f);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var b=this.curves[0].getPoint(0);var a=this.curves[this.curves.length-1].getPoint(1);if(!b.equals(a)){this.curves.push(new THREE.LineCurve(a,b))}};THREE.CurvePath.prototype.getPoint=function(c){var h=c*this.getLength();var g=this.getCurveLengths();var b=0,e,f;while(b<g.length){if(g[b]>=h){e=g[b]-h;f=this.curves[b];var a=1-e/f.getLength();return f.getPointAt(a);break}b++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var d=[],c=0;var b,a=this.curves.length;for(b=0;b<a;b++){c+=this.curves[b].getLength();d.push(c)}this.cacheLengths=d;return d};THREE.CurvePath.prototype.getBoundingBox=function(){var m=this.getPoints();var b,a,n;var f,e,d;b=a=Number.NEGATIVE_INFINITY;f=e=Number.POSITIVE_INFINITY;var c,g,l,h;var k=m[0] instanceof THREE.Vector3;h=k?new THREE.Vector3():new THREE.Vector2();for(g=0,l=m.length;g<l;g++){c=m[g];if(c.x>b){b=c.x}else{if(c.x<f){f=c.x}}if(c.y>a){a=c.y}else{if(c.y<e){e=c.y}}if(k){if(c.z>n){n=c.z}else{if(c.z<d){d=c.z}}}h.add(c)}var j={minX:f,minY:e,maxX:b,maxY:a,centroid:h.divideScalar(l)};if(k){j.maxZ=n;j.minZ=d}return j};THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,true);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,true);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(b){var c=new THREE.Geometry();for(var a=0;a<b.length;a++){c.vertices.push(new THREE.Vector3(b[a].x,b[a].y,b[a].z||0))}return c};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};THREE.CurvePath.prototype.getTransformedPoints=function(c,e){var b=this.getPoints(c);var d,a;if(!e){e=this.bends}for(d=0,a=e.length;d<a;d++){b=this.getWrapPoints(b,e[d])}return b};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(c,e){var b=this.getSpacedPoints(c);var d,a;if(!e){e=this.bends}for(d=0,a=e.length;d<a;d++){b=this.getWrapPoints(b,e[d])}return b};THREE.CurvePath.prototype.getWrapPoints=function(f,l){var a=this.getBoundingBox();var d,g,b,j,h,k;for(d=0,g=f.length;d<g;d++){b=f[d];j=b.x;h=b.y;k=j/a.maxX;k=l.getUtoTmapping(k,j);var c=l.getPoint(k);var e=l.getNormalVector(k).multiplyScalar(h);b.x=c.x+e.x;b.y=c.y+e.y}return f};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(c){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||c){if(this.parent){this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld);this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject);this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)}else{this.matrixWorld.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;c=true}for(var b=0,a=this.children.length;b<a;b++){this.children[b].updateMatrixWorld(c)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3();THREE.Gyroscope.prototype.translationObject=new THREE.Vector3();THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion();THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion();THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3();THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3();THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];if(a){this.fromPoints(a)}};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(b){this.moveTo(b[0].x,b[0].y);for(var a=1,c=b.length;a<c;a++){this.lineTo(b[a].x,b[a].y)}};THREE.Path.prototype.moveTo=function(a,c){var b=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:b})};THREE.Path.prototype.lineTo=function(a,g){var b=Array.prototype.slice.call(arguments);var e=this.actions[this.actions.length-1].args;var c=e[e.length-2];var d=e[e.length-1];var f=new THREE.LineCurve(new THREE.Vector2(c,d),new THREE.Vector2(a,g));this.curves.push(f);this.actions.push({action:THREE.PathActions.LINE_TO,args:b})};THREE.Path.prototype.quadraticCurveTo=function(e,b,g,f){var h=Array.prototype.slice.call(arguments);var a=this.actions[this.actions.length-1].args;var c=a[a.length-2];var i=a[a.length-1];var d=new THREE.QuadraticBezierCurve(new THREE.Vector2(c,i),new THREE.Vector2(e,b),new THREE.Vector2(g,f));this.curves.push(d);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:h})};THREE.Path.prototype.bezierCurveTo=function(e,c,k,j,g,f){var h=Array.prototype.slice.call(arguments);var a=this.actions[this.actions.length-1].args;var b=a[a.length-2];var i=a[a.length-1];var d=new THREE.CubicBezierCurve(new THREE.Vector2(b,i),new THREE.Vector2(e,c),new THREE.Vector2(k,j),new THREE.Vector2(g,f));this.curves.push(d);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:h})};THREE.Path.prototype.splineThru=function(g){var a=Array.prototype.slice.call(arguments);var d=this.actions[this.actions.length-1].args;var b=d[d.length-2];var c=d[d.length-1];var f=[new THREE.Vector2(b,c)];Array.prototype.push.apply(f,g);var e=new THREE.SplineCurve(f);this.curves.push(e);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:a})};THREE.Path.prototype.arc=function(h,f,g,d,a,b){var c=this.actions[this.actions.length-1].args;var e=c[c.length-2];var i=c[c.length-1];this.absarc(h+e,f+i,g,d,a,b)};THREE.Path.prototype.absarc=function(e,d,f,c,b,a){this.absellipse(e,d,f,f,c,b,a)};THREE.Path.prototype.ellipse=function(g,f,i,h,d,a,b){var c=this.actions[this.actions.length-1].args;var e=c[c.length-2];var j=c[c.length-1];this.absellipse(g+e,f+j,i,h,d,a,b)};THREE.Path.prototype.absellipse=function(f,e,j,g,c,a,b){var h=Array.prototype.slice.call(arguments);var d=new THREE.EllipseCurve(f,e,j,g,c,a,b);this.curves.push(d);var i=d.getPoint(b?1:0);h.push(i.x);h.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};THREE.Path.prototype.getSpacedPoints=function(b,d){if(!b){b=40}var c=[];for(var a=0;a<b;a++){c.push(this.getPoint(a/b))}return c};THREE.Path.prototype.getPoints=function(O,M){if(this.useSpacedPoints){console.log("tata");return this.getSpacedPoints(O,M)}O=O||12;var A=[];var J,u,r,c,E;var B,y,N,v,P,w,a,x,b,I,D,H,G;for(J=0,u=this.actions.length;J<u;J++){r=this.actions[J];c=r.action;E=r.args;switch(c){case THREE.PathActions.MOVE_TO:A.push(new THREE.Vector2(E[0],E[1]));break;case THREE.PathActions.LINE_TO:A.push(new THREE.Vector2(E[0],E[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:B=E[2];y=E[3];P=E[0];w=E[1];if(A.length>0){b=A[A.length-1];a=b.x;x=b.y}else{b=this.actions[J-1].args;a=b[b.length-2];x=b[b.length-1]}for(I=1;I<=O;I++){D=I/O;H=THREE.Shape.Utils.b2(D,a,P,B);G=THREE.Shape.Utils.b2(D,x,w,y);A.push(new THREE.Vector2(H,G))}break;case THREE.PathActions.BEZIER_CURVE_TO:B=E[4];y=E[5];P=E[0];w=E[1];N=E[2];v=E[3];if(A.length>0){b=A[A.length-1];a=b.x;x=b.y}else{b=this.actions[J-1].args;a=b[b.length-2];x=b[b.length-1]}for(I=1;I<=O;I++){D=I/O;H=THREE.Shape.Utils.b3(D,a,P,N,B);G=THREE.Shape.Utils.b3(D,x,w,v,y);A.push(new THREE.Vector2(H,G))}break;case THREE.PathActions.CSPLINE_THRU:b=this.actions[J-1].args;var k=new THREE.Vector2(b[b.length-2],b[b.length-1]);var f=[k];var F=O*E[0].length;f=f.concat(E[0]);var L=new THREE.SplineCurve(f);for(I=1;I<=F;I++){A.push(L.getPointAt(I/F))}break;case THREE.PathActions.ARC:var o=E[0],m=E[1],p=E[2],K=E[3],C=E[4],h=!!E[5];var z=C-K;var l;var d=O*2;for(I=1;I<=d;I++){D=I/d;if(!h){D=1-D}l=K+D*z;H=o+p*Math.cos(l);G=m+p*Math.sin(l);A.push(new THREE.Vector2(H,G))}break;case THREE.PathActions.ELLIPSE:var o=E[0],m=E[1],q=E[2],s=E[3],K=E[4],C=E[5],h=!!E[6];var z=C-K;var l;var d=O*2;for(I=1;I<=d;I++){D=I/d;if(!h){D=1-D}l=K+D*z;H=o+q*Math.cos(l);G=m+s*Math.sin(l);A.push(new THREE.Vector2(H,G))}break}}var e=A[A.length-1];var g=1e-10;if(Math.abs(e.x-A[0].x)<g&&Math.abs(e.y-A[0].y)<g){A.splice(A.length-1,1)}if(M){A.push(A[0])}return A};THREE.Path.prototype.toShapes=function(){var c,f,j,b,d;var e=[],h=new THREE.Path();for(c=0,f=this.actions.length;c<f;c++){j=this.actions[c];d=j.args;b=j.action;if(b==THREE.PathActions.MOVE_TO){if(h.actions.length!=0){e.push(h);h=new THREE.Path()}}h[b].apply(h,d)}if(h.actions.length!=0){e.push(h)}if(e.length==0){return[]}var l,k,a=[];var g=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(e.length==1){l=e[0];k=new THREE.Shape();k.actions=l.actions;k.curves=l.curves;a.push(k);return a}if(g){k=new THREE.Shape();for(c=0,f=e.length;c<f;c++){l=e[c];if(THREE.Shape.Utils.isClockWise(l.getPoints())){k.actions=l.actions;k.curves=l.curves;a.push(k);k=new THREE.Shape()}else{k.holes.push(l)}}}else{for(c=0,f=e.length;c<f;c++){l=e[c];if(THREE.Shape.Utils.isClockWise(l.getPoints())){if(k){a.push(k)}k=new THREE.Shape();k.actions=l.actions;k.curves=l.curves}else{k.holes.push(l)}}a.push(k)}return a};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(b){var a=new THREE.ExtrudeGeometry(this,b);return a};THREE.Shape.prototype.makeGeometry=function(a){var b=new THREE.ShapeGeometry(this,a);return b};THREE.Shape.prototype.getPointsHoles=function(c){var b,a=this.holes.length,d=[];for(b=0;b<a;b++){d[b]=this.holes[b].getTransformedPoints(c,this.bends)}return d};THREE.Shape.prototype.getSpacedPointsHoles=function(c){var b,a=this.holes.length,d=[];for(b=0;b<a;b++){d[b]=this.holes[b].getTransformedSpacedPoints(c,this.bends)}return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){if(this.useSpacedPoints){return this.extractAllSpacedPoints(a)}return this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};THREE.Shape.Utils={removeHoles:function(C,m){var k=C.concat();var A=k.concat();var x,c,t,L,z,u,B,i,J,s,r,q,M,D,o,n,O,N,b,a,I=[];for(J=0;J<m.length;J++){r=m[J];Array.prototype.push.apply(A,r);q=Number.POSITIVE_INFINITY;for(s=0;s<r.length;s++){o=r[s];var e=[];for(D=0;D<k.length;D++){n=k[D];M=o.distanceToSquared(n);e.push(M);if(M<q){q=M;z=s;u=D}}}x=(u-1)>=0?u-1:k.length-1;t=(z-1)>=0?z-1:r.length-1;var f=[r[z],k[u],k[x]];var H=THREE.FontUtils.Triangulate.area(f);var y=[r[z],r[t],k[u]];var G=THREE.FontUtils.Triangulate.area(y);var l=1;var E=-1;var v=u,F=z;u+=l;z+=E;if(u<0){u+=k.length}u%=k.length;if(z<0){z+=r.length}z%=r.length;x=(u-1)>=0?u-1:k.length-1;t=(z-1)>=0?z-1:r.length-1;f=[r[z],k[u],k[x]];var K=THREE.FontUtils.Triangulate.area(f);y=[r[z],r[t],k[u]];var w=THREE.FontUtils.Triangulate.area(y);if((H+G)>(K+w)){u=v;z=F;if(u<0){u+=k.length}u%=k.length;if(z<0){z+=r.length}z%=r.length;x=(u-1)>=0?u-1:k.length-1;t=(z-1)>=0?z-1:r.length-1}else{}O=k.slice(0,u);N=k.slice(u);b=r.slice(z);a=r.slice(0,z);var j=[r[z],k[u],k[x]];var g=[r[z],r[t],k[u]];I.push(j);I.push(g);k=O.concat(b).concat(a).concat(N)}return{shape:k,isolatedPts:I,allpoints:A}},triangulateShape:function(d,c){var h=THREE.Shape.Utils.removeHoles(d,c);var l=h.shape,a=h.allpoints,o=h.isolatedPts;var b=THREE.FontUtils.Triangulate(l,false);var e,n,k,m,p,j,g={},q={};for(e=0,n=a.length;e<n;e++){p=a[e].x+":"+a[e].y;if(g[p]!==undefined){console.log("Duplicate point",p)}g[p]=e}for(e=0,n=b.length;e<n;e++){m=b[e];for(k=0;k<3;k++){p=m[k].x+":"+m[k].y;j=g[p];if(j!==undefined){m[k]=j}}}for(e=0,n=o.length;e<n;e++){m=o[e];for(k=0;k<3;k++){p=m[k].x+":"+m[k].y;j=g[p];if(j!==undefined){m[k]=j}}}return b.concat(o)},isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(b,c){var a=1-b;return a*a*c},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,d,c,b){return this.b2p0(a,d)+this.b2p1(a,c)+this.b2p2(a,b)},b3p0:function(b,c){var a=1-b;return a*a*a*c},b3p1:function(b,c){var a=1-b;return 3*a*a*b*c},b3p2:function(b,c){var a=1-b;return 3*a*b*b*c},b3p3:function(a,b){return a*a*a*b},b3:function(a,e,d,c,b){return this.b3p0(a,e)+this.b3p1(a,d)+this.b3p2(a,c)+this.b3p3(a,b)}};THREE.AnimationHandler=(function(){var c=[];var b={};var d={};d.update=function(g){for(var f=0;f<c.length;f++){c[f].update(g)}};d.addToUpdate=function(f){if(c.indexOf(f)===-1){c.push(f)}};d.removeFromUpdate=function(g){var f=c.indexOf(g);if(f!==-1){c.splice(f,1)}};d.add=function(f){if(b[f.name]!==undefined){console.log("THREE.AnimationHandler.add: Warning! "+f.name+" already exists in library. Overwriting.")}b[f.name]=f;a(f)};d.get=function(f){if(typeof f==="string"){if(b[f]){return b[f]}else{console.log("THREE.AnimationHandler.get: Couldn't find animation "+f);return null}}else{}};d.parse=function(g){var h=[];if(g instanceof THREE.SkinnedMesh){for(var f=0;f<g.bones.length;f++){h.push(g.bones[f])}}else{e(g,h)}return h};var e=function(f,g){g.push(f);for(var h=0;h<f.children.length;h++){e(f.children[h],g)}};var a=function(j){if(j.initialized===true){return}for(var l=0;l<j.hierarchy.length;l++){for(var i=0;i<j.hierarchy[l].keys.length;i++){if(j.hierarchy[l].keys[i].time<0){j.hierarchy[l].keys[i].time=0}if(j.hierarchy[l].keys[i].rot!==undefined&&!(j.hierarchy[l].keys[i].rot instanceof THREE.Quaternion)){var f=j.hierarchy[l].keys[i].rot;j.hierarchy[l].keys[i].rot=new THREE.Quaternion(f[0],f[1],f[2],f[3])}}if(j.hierarchy[l].keys.length&&j.hierarchy[l].keys[0].morphTargets!==undefined){var p={};for(var i=0;i<j.hierarchy[l].keys.length;i++){for(var g=0;g<j.hierarchy[l].keys[i].morphTargets.length;g++){var n=j.hierarchy[l].keys[i].morphTargets[g];p[n]=-1}}j.hierarchy[l].usedMorphTargets=p;for(var i=0;i<j.hierarchy[l].keys.length;i++){var o={};for(var n in p){for(var g=0;g<j.hierarchy[l].keys[i].morphTargets.length;g++){if(j.hierarchy[l].keys[i].morphTargets[g]===n){o[n]=j.hierarchy[l].keys[i].morphTargetsInfluences[g];break}}if(g===j.hierarchy[l].keys[i].morphTargets.length){o[n]=0}}j.hierarchy[l].keys[i].morphTargetsInfluences=o}}for(var i=1;i<j.hierarchy[l].keys.length;i++){if(j.hierarchy[l].keys[i].time===j.hierarchy[l].keys[i-1].time){j.hierarchy[l].keys.splice(i,1);i--}}for(var i=0;i<j.hierarchy[l].keys.length;i++){j.hierarchy[l].keys[i].index=i}}var q=parseInt(j.length*j.fps,10);j.JIT={};j.JIT.hierarchy=[];for(var l=0;l<j.hierarchy.length;l++){j.JIT.hierarchy.push(new Array(q))}j.initialized=true};d.LINEAR=0;d.CATMULLROM=1;d.CATMULLROM_FORWARD=2;return d}());THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=false;this.isPaused=true;this.loop=true;this.interpolationType=c!==undefined?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3()};THREE.Animation.prototype.play=function(d,c){if(this.isPlaying===false){this.isPlaying=true;this.loop=d!==undefined?d:true;this.currentTime=c!==undefined?c:0;var g,b=this.hierarchy.length,e;for(g=0;g<b;g++){e=this.hierarchy[g];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD){e.useQuaternion=true}e.matrixAutoUpdate=true;if(e.animationCache===undefined){e.animationCache={};e.animationCache.prevKey={pos:0,rot:0,scl:0};e.animationCache.nextKey={pos:0,rot:0,scl:0};e.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:e.matrix}var f=e.animationCache.prevKey;var a=e.animationCache.nextKey;f.pos=this.data.hierarchy[g].keys[0];f.rot=this.data.hierarchy[g].keys[0];f.scl=this.data.hierarchy[g].keys[0];a.pos=this.getNextKeyWith("pos",g,1);a.rot=this.getNextKeyWith("rot",g,1);a.scl=this.getNextKeyWith("scl",g,1)}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){if(this.isPaused===true){THREE.AnimationHandler.addToUpdate(this)}else{THREE.AnimationHandler.removeFromUpdate(this)}this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.update=function(l){if(this.isPlaying===false){return}var g=["pos","rot","scl"];var d;var v;var b;var m,c;var s,e;var u;var k;var j;var r=this.data.JIT.hierarchy;var o,q;var f,w,p;this.currentTime+=l*this.timeScale;q=this.currentTime;o=this.currentTime=this.currentTime%this.data.length;j=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10);for(var n=0,a=this.hierarchy.length;n<a;n++){u=this.hierarchy[n];k=u.animationCache;for(var i=0;i<3;i++){d=g[i];s=k.prevKey[d];e=k.nextKey[d];if(e.time<=q){if(o<q){if(this.loop){s=this.data.hierarchy[n].keys[0];e=this.getNextKeyWith(d,n,1);while(e.time<o){s=e;e=this.getNextKeyWith(d,n,e.index+1)}}else{this.stop();return}}else{do{s=e;e=this.getNextKeyWith(d,n,e.index+1)}while(e.time<o)}k.prevKey[d]=s;k.nextKey[d]=e}u.matrixAutoUpdate=true;u.matrixWorldNeedsUpdate=true;v=(o-s.time)/(e.time-s.time);m=s[d];c=e[d];if(v<0||v>1){console.log("THREE.Animation.update: Warning! Scale out of bounds:"+v+" on bone "+n);v=v<0?0:1}if(d==="pos"){b=u.position;if(this.interpolationType===THREE.AnimationHandler.LINEAR){b.x=m[0]+(c[0]-m[0])*v;b.y=m[1]+(c[1]-m[1])*v;b.z=m[2]+(c[2]-m[2])*v}else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith("pos",n,s.index-1)["pos"];this.points[1]=m;this.points[2]=c;this.points[3]=this.getNextKeyWith("pos",n,e.index+1)["pos"];v=v*0.33+0.33;f=this.interpolateCatmullRom(this.points,v);b.x=f[0];b.y=f[1];b.z=f[2];if(this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){w=this.interpolateCatmullRom(this.points,v*1.01);this.target.set(w[0],w[1],w[2]);this.target.sub(b);this.target.y=0;this.target.normalize();p=Math.atan2(this.target.x,this.target.z);u.rotation.set(0,p,0)}}}}else{if(d==="rot"){THREE.Quaternion.slerp(m,c,u.quaternion,v)}else{if(d==="scl"){b=u.scale;b.x=m[0]+(c[0]-m[0])*v;b.y=m[1]+(c[1]-m[1])*v;b.z=m[2]+(c[2]-m[2])*v}}}}}};THREE.Animation.prototype.interpolateCatmullRom=function(n,b){var h=[],j=[],m,a,f,e,d,l,k,i,g;m=(n.length-1)*b;a=Math.floor(m);f=m-a;h[0]=a===0?a:a-1;h[1]=a;h[2]=a>n.length-2?a:a+1;h[3]=a>n.length-3?a:a+2;l=n[h[0]];k=n[h[1]];i=n[h[2]];g=n[h[3]];e=f*f;d=f*e;j[0]=this.interpolate(l[0],k[0],i[0],g[0],f,e,d);j[1]=this.interpolate(l[1],k[1],i[1],g[1],f,e,d);j[2]=this.interpolate(l[2],k[2],i[2],g[2],f,e,d);return j};THREE.Animation.prototype.interpolate=function(h,g,e,d,i,b,a){var f=(e-h)*0.5,c=(d-g)*0.5;return(2*(g-e)+f+c)*a+(-3*(g-e)-2*f-c)*b+f*i+g};THREE.Animation.prototype.getNextKeyWith=function(c,b,a){var d=this.data.hierarchy[b].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){a=a<d.length-1?a:d.length-1}else{a=a%d.length}for(;a<d.length;a++){if(d[a][c]!==undefined){return d[a]}}return this.data.hierarchy[b].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(c,b,a){var d=this.data.hierarchy[b].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){a=a>0?a:0}else{a=a>=0?a:a+d.length}for(;a>=0;a--){if(d[a][c]!==undefined){return d[a]}}return this.data.hierarchy[b].keys[d.length-1]};THREE.KeyFrameAnimation=function(j,e,i){this.root=j;this.data=THREE.AnimationHandler.get(e);this.hierarchy=THREE.AnimationHandler.parse(j);this.currentTime=0;this.timeScale=0.001;this.isPlaying=false;this.isPaused=true;this.loop=true;this.JITCompile=i!==undefined?i:true;for(var g=0,c=this.hierarchy.length;g<c;g++){var k=this.data.hierarchy[g].keys,a=this.data.hierarchy[g].sids,d=this.hierarchy[g];if(k.length&&a){for(var l=0;l<a.length;l++){var b=a[l],f=this.getNextKeyWith(b,g,0);if(f){f.apply(b)}}d.matrixAutoUpdate=false;this.data.hierarchy[g].node.updateMatrix();d.matrixWorldNeedsUpdate=true}}};THREE.KeyFrameAnimation.prototype.play=function(c,b){if(!this.isPlaying){this.isPlaying=true;this.loop=c!==undefined?c:true;this.currentTime=b!==undefined?b:0;this.startTimeMs=b;this.startTime=10000000;this.endTime=-this.startTime;var e,a=this.hierarchy.length,d,g;for(e=0;e<a;e++){d=this.hierarchy[e];g=this.data.hierarchy[e];d.useQuaternion=true;if(g.animationCache===undefined){g.animationCache={};g.animationCache.prevKey=null;g.animationCache.nextKey=null;g.animationCache.originalMatrix=d instanceof THREE.Bone?d.skinMatrix:d.matrix}var f=this.data.hierarchy[e].keys;if(f.length){g.animationCache.prevKey=f[0];g.animationCache.nextKey=f[1];this.startTime=Math.min(f[0].time,this.startTime);this.endTime=Math.max(f[f.length-1].time,this.endTime)}}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){if(this.isPaused){THREE.AnimationHandler.addToUpdate(this)}else{THREE.AnimationHandler.removeFromUpdate(this)}this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.removeFromUpdate(this);for(var b=0;b<this.data.hierarchy.length;b++){var d=this.hierarchy[b];var c=this.data.hierarchy[b];if(c.animationCache!==undefined){var a=c.animationCache.originalMatrix;if(d instanceof THREE.Bone){a.copy(d.skinMatrix);d.skinMatrix=a}else{a.copy(d.matrix);d.matrix=a}delete c.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(n){if(!this.isPlaying){return}var v,d;var w;var l;var g;var u=this.data.JIT.hierarchy;var q,t;var e;this.currentTime+=n*this.timeScale;t=this.currentTime;q=this.currentTime=this.currentTime%this.data.length;if(q<this.startTimeMs){q=this.currentTime=this.startTimeMs+q}g=parseInt(Math.min(q*this.data.fps,this.data.length*this.data.fps),10);e=q<t;if(e&&!this.loop){for(var o=0,a=this.hierarchy.length;o<a;o++){var j=this.data.hierarchy[o].keys,r=this.data.hierarchy[o].sids,b=j.length-1,f=this.hierarchy[o];if(j.length){for(var i=0;i<r.length;i++){var c=r[i],k=this.getPrevKeyWith(c,o,b);if(k){k.apply(c)}}this.data.hierarchy[o].node.updateMatrix();f.matrixWorldNeedsUpdate=true}}this.stop();return}if(q<this.startTime){return}for(var o=0,a=this.hierarchy.length;o<a;o++){w=this.hierarchy[o];l=this.data.hierarchy[o];var j=l.keys,m=l.animationCache;if(this.JITCompile&&u[o][g]!==undefined){if(w instanceof THREE.Bone){w.skinMatrix=u[o][g];w.matrixWorldNeedsUpdate=false}else{w.matrix=u[o][g];w.matrixWorldNeedsUpdate=true}}else{if(j.length){if(this.JITCompile&&m){if(w instanceof THREE.Bone){w.skinMatrix=m.originalMatrix}else{w.matrix=m.originalMatrix}}v=m.prevKey;d=m.nextKey;if(v&&d){if(d.time<=t){if(e&&this.loop){v=j[0];d=j[1];while(d.time<q){v=d;d=j[v.index+1]}}else{if(!e){var p=j.length-1;while(d.time<q&&d.index!==p){v=d;d=j[v.index+1]}}}m.prevKey=v;m.nextKey=d}if(d.time>=q){v.interpolate(d,q)}else{v.interpolate(d,d.time)}}this.data.hierarchy[o].node.updateMatrix();w.matrixWorldNeedsUpdate=true}}}if(this.JITCompile){if(u[0][g]===undefined){this.hierarchy[0].updateMatrixWorld(true);for(var o=0;o<this.hierarchy.length;o++){if(this.hierarchy[o] instanceof THREE.Bone){u[o][g]=this.hierarchy[o].skinMatrix.clone()}else{u[o][g]=this.hierarchy[o].matrix.clone()}}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,c,b){var d=this.data.hierarchy[c].keys;b=b%d.length;for(;b<d.length;b++){if(d[b].hasTarget(a)){return d[b]}}return d[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,c,b){var d=this.data.hierarchy[c].keys;b=b>=0?b:b+d.length;for(;b>=0;b--){if(d[b].hasTarget(a)){return d[b]}}return d[d.length-1]};THREE.CubeCamera=function(f,e,g){THREE.Object3D.call(this);var d=90,b=1;var c=new THREE.PerspectiveCamera(d,b,f,e);c.up.set(0,-1,0);c.lookAt(new THREE.Vector3(1,0,0));this.add(c);var j=new THREE.PerspectiveCamera(d,b,f,e);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(-1,0,0));this.add(j);var a=new THREE.PerspectiveCamera(d,b,f,e);a.up.set(0,0,1);a.lookAt(new THREE.Vector3(0,1,0));this.add(a);var i=new THREE.PerspectiveCamera(d,b,f,e);i.up.set(0,0,-1);i.lookAt(new THREE.Vector3(0,-1,0));this.add(i);var k=new THREE.PerspectiveCamera(d,b,f,e);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,1));this.add(k);var h=new THREE.PerspectiveCamera(d,b,f,e);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);this.renderTarget=new THREE.WebGLRenderTargetCube(g,g,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(n,o){var m=this.renderTarget;var l=m.generateMipmaps;m.generateMipmaps=false;m.activeCubeFace=0;n.render(o,c,m);m.activeCubeFace=1;n.render(o,j,m);m.activeCubeFace=2;n.render(o,a,m);m.activeCubeFace=3;n.render(o,i,m);m.activeCubeFace=4;n.render(o,k,m);m.generateMipmaps=l;m.activeCubeFace=5;n.render(o,h,m)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(h,a,e,g,b,f,d){THREE.Camera.call(this);this.fov=e;this.left=-h/2;this.right=h/2;this.top=a/2;this.bottom=-a/2;this.cameraO=new THREE.OrthographicCamera(h/-2,h/2,a/2,a/-2,f,d);this.cameraP=new THREE.PerspectiveCamera(e,h/a,g,b);this.zoom=1;this.toPerspective();var c=h/a};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=true;this.inOrthographicMode=false};THREE.CombinedCamera.prototype.toOrthographic=function(){var d=this.fov;var b=this.cameraP.aspect;var f=this.cameraP.near;var e=this.cameraP.far;var g=(f+e)/2;var h=Math.tan(d/2)*g;var a=2*h;var i=a*b;var c=i/2;h/=this.zoom;c/=this.zoom;this.cameraO.left=-c;this.cameraO.right=c;this.cameraO.top=h;this.cameraO.bottom=-h;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=false;this.inOrthographicMode=true};THREE.CombinedCamera.prototype.setSize=function(b,a){this.cameraP.aspect=b/a;this.left=-b/2;this.right=b/2;this.top=a/2;this.bottom=-a/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;if(this.inPerspectiveMode){this.toPerspective()}else{this.toOrthographic()}};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){if(this.inPerspectiveMode){this.toPerspective()}else{this.toPerspective();this.toOrthographic()}};THREE.CombinedCamera.prototype.setLens=function(c,b){if(b===undefined){b=24}var a=2*THREE.Math.radToDeg(Math.atan(b/(c*2)));this.setFov(a);return a};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;if(this.inPerspectiveMode){this.toPerspective()}else{this.toOrthographic()}};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.AsteriskGeometry=function(h,d){THREE.Geometry.call(this);var f=h;var e=d;var a=0.707*f;var m=0.707*e;var b=[[f,0,0],[e,0,0],[-f,0,0],[-e,0,0],[0,f,0],[0,e,0],[0,-f,0],[0,-e,0],[0,0,f],[0,0,e],[0,0,-f],[0,0,-e],[a,a,0],[m,m,0],[-a,-a,0],[-m,-m,0],[a,-a,0],[m,-m,0],[-a,a,0],[-m,m,0],[a,0,a],[m,0,m],[-a,0,-a],[-m,0,-m],[a,0,-a],[m,0,-m],[-a,0,a],[-m,0,m],[0,a,a],[0,m,m],[0,-a,-a],[0,-m,-m],[0,a,-a],[0,m,-m],[0,-a,a],[0,-m,m]];for(var c=0,l=b.length;c<l;c++){var k=b[c][0];var j=b[c][1];var g=b[c][2];this.vertices.push(new THREE.Vector3(k,j,g))}};THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(j,g,d,b){THREE.Geometry.call(this);j=j||50;d=d!==undefined?d:0;b=b!==undefined?b:Math.PI*2;g=g!==undefined?Math.max(3,g):8;var f,e=[],a=new THREE.Vector3(),m=new THREE.Vector2(0.5,0.5);this.vertices.push(a);e.push(m);for(f=0;f<=g;f++){var h=new THREE.Vector3();h.x=j*Math.cos(d+f/g*b);h.y=j*Math.sin(d+f/g*b);this.vertices.push(h);e.push(new THREE.Vector2((h.x/j+1)/2,-(h.y/j+1)/2+1))}var c=new THREE.Vector3(0,0,-1);for(f=1;f<=g;f++){var o=f;var l=f+1;var k=0;this.faces.push(new THREE.Face3(o,l,k,[c,c,c]));this.faceVertexUvs[0].push([e[f],e[f+1],m])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),j)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(a,i,e,b,h,d){THREE.Geometry.call(this);var k=this;this.width=a;this.height=i;this.depth=e;this.widthSegments=b||1;this.heightSegments=h||1;this.depthSegments=d||1;var j=this.width/2;var g=this.height/2;var c=this.depth/2;f("z","y",-1,-1,this.depth,this.height,j,0);f("z","y",1,-1,this.depth,this.height,-j,1);f("x","z",1,1,this.width,this.depth,g,2);f("x","z",1,-1,this.width,this.depth,-g,3);f("x","y",1,-1,this.width,this.height,c,4);f("x","y",-1,-1,this.width,this.height,-c,5);function f(B,A,l,s,D,C,O,x){var z,q,p,F=k.widthSegments,E=k.heightSegments,r=D/2,o=C/2,t=k.vertices.length;if((B==="x"&&A==="y")||(B==="y"&&A==="x")){z="z"}else{if((B==="x"&&A==="z")||(B==="z"&&A==="x")){z="y";E=k.depthSegments}else{if((B==="z"&&A==="y")||(B==="y"&&A==="z")){z="x";F=k.depthSegments}}}var G=F+1,n=E+1,N=D/F,I=C/E,M=new THREE.Vector3();M[z]=O>0?1:-1;for(p=0;p<n;p++){for(q=0;q<G;q++){var m=new THREE.Vector3();m[B]=(q*N-r)*l;m[A]=(p*I-o)*s;m[z]=O;k.vertices.push(m)}}for(p=0;p<E;p++){for(q=0;q<F;q++){var L=q+G*p;var K=q+G*(p+1);var J=(q+1)+G*(p+1);var H=(q+1)+G*p;var y=new THREE.Face4(L+t,K+t,J+t,H+t);y.normal.copy(M);y.vertexNormals.push(M.clone(),M.clone(),M.clone(),M.clone());y.materialIndex=x;k.faces.push(y);k.faceVertexUvs[0].push([new THREE.Vector2(q/F,1-p/E),new THREE.Vector2(q/F,1-(p+1)/E),new THREE.Vector2((q+1)/F,1-(p+1)/E),new THREE.Vector2((q+1)/F,1-p/E)])}}}this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(j,L,z,C,s,I){THREE.Geometry.call(this);j=j!==undefined?j:20;L=L!==undefined?L:20;z=z!==undefined?z:100;var B=z/2;var A=C||8;var w=s||1;var o,n,f=[],p=[];for(n=0;n<=w;n++){var t=[];var K=[];var q=n/w;var e=q*(L-j)+j;for(o=0;o<=A;o++){var r=o/A;var G=new THREE.Vector3();G.x=e*Math.sin(r*Math.PI*2);G.y=-q*z+B;G.z=e*Math.cos(r*Math.PI*2);this.vertices.push(G);t.push(this.vertices.length-1);K.push(new THREE.Vector2(r,1-q))}f.push(t);p.push(K)}var E=(L-j)/z;var l,i;for(o=0;o<A;o++){if(j!==0){l=this.vertices[f[0][o]].clone();i=this.vertices[f[0][o+1]].clone()}else{l=this.vertices[f[1][o]].clone();i=this.vertices[f[1][o+1]].clone()}l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*E).normalize();i.setY(Math.sqrt(i.x*i.x+i.z*i.z)*E).normalize();for(n=0;n<w;n++){var d=f[n][o];var c=f[n+1][o];var b=f[n+1][o+1];var a=f[n][o+1];var m=l.clone();var k=l.clone();var h=i.clone();var g=i.clone();var J=p[n][o].clone();var H=p[n+1][o].clone();var F=p[n+1][o+1].clone();var D=p[n][o+1].clone();this.faces.push(new THREE.Face4(d,c,b,a,[m,k,h,g]));this.faceVertexUvs[0].push([J,H,F,D])}}if(!I&&j>0){this.vertices.push(new THREE.Vector3(0,B,0));for(o=0;o<A;o++){var d=f[0][o];var c=f[0][o+1];var b=this.vertices.length-1;var m=new THREE.Vector3(0,1,0);var k=new THREE.Vector3(0,1,0);var h=new THREE.Vector3(0,1,0);var J=p[0][o].clone();var H=p[0][o+1].clone();var F=new THREE.Vector2(H.u,0);this.faces.push(new THREE.Face3(d,c,b,[m,k,h]));this.faceVertexUvs[0].push([J,H,F])}}if(!I&&L>0){this.vertices.push(new THREE.Vector3(0,-B,0));for(o=0;o<A;o++){var d=f[n][o+1];var c=f[n][o];var b=this.vertices.length-1;var m=new THREE.Vector3(0,-1,0);var k=new THREE.Vector3(0,-1,0);var h=new THREE.Vector3(0,-1,0);var J=p[n][o+1].clone();var H=p[n][o].clone();var F=new THREE.Vector2(H.u,1);this.faces.push(new THREE.Face3(d,c,b,[m,k,h]));this.faceVertexUvs[0].push([J,H,F])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(a,b){if(typeof(a)==="undefined"){a=[];return}THREE.Geometry.call(this);a=a instanceof Array?a:[a];this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(b,d){var a=b.length;for(var e=0;e<a;e++){var c=b[e];this.addShape(c,d)}};THREE.ExtrudeGeometry.prototype.addShape=function(E,N){var g=N.amount!==undefined?N.amount:100;var f=N.bevelThickness!==undefined?N.bevelThickness:6;var O=N.bevelSize!==undefined?N.bevelSize:f-2;var B=N.bevelSegments!==undefined?N.bevelSegments:3;var a=N.bevelEnabled!==undefined?N.bevelEnabled:true;var M=N.curveSegments!==undefined?N.curveSegments:12;var X=N.steps!==undefined?N.steps:1;var r=N.extrudePath;var S,u=false;var ak=N.material;var o=N.extrudeMaterial;var D=N.UVGenerator!==undefined?N.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;var W=this.shapebb;var x,aa,ae,at;if(r){S=r.getSpacedPoints(X);u=true;a=false;x=N.frames!==undefined?N.frames:new THREE.TubeGeometry.FrenetFrames(r,X,false);aa=new THREE.Vector3();ae=new THREE.Vector3();at=new THREE.Vector3()}if(!a){B=0;f=0;O=0}var aw,aq,ar;var Y=this;var K=[];var U=this.vertices.length;var C=E.extractPoints(M);var d=C.shape;var I=C.holes;var ag=!THREE.Shape.Utils.isClockWise(d);if(ag){d=d.reverse();for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];if(THREE.Shape.Utils.isClockWise(aw)){I[aq]=aw.reverse()}}ag=false}var q=THREE.Shape.Utils.triangulateShape(d,I);var aj=d;for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];d=d.concat(aw)}function P(i,h,b){if(!h){console.log("die")}return h.clone().multiplyScalar(b).add(i)}var av,ah,ad,Z,w,ai=d.length,p,n=q.length,V,c=aj.length;var T=180/Math.PI;function G(i,h,b){return y(i,h,b)}function A(j,i,h){var t=Math.atan2(i.y-j.y,i.x-j.x);var s=Math.atan2(h.y-j.y,h.x-j.x);if(t>s){s+=Math.PI*2}var k=(t+s)/2;var z=-Math.cos(k);var v=-Math.sin(k);var b=new THREE.Vector2(z,v);return b}function y(ax,z,t){var aC=THREE.ExtrudeGeometry.__v1,az=THREE.ExtrudeGeometry.__v2,aB=THREE.ExtrudeGeometry.__v3,ay=THREE.ExtrudeGeometry.__v4,j=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6,aE,aD,k,aA,aF,h;aC.set(ax.x-z.x,ax.y-z.y);az.set(ax.x-t.x,ax.y-t.y);aE=aC.normalize();aD=az.normalize();aB.set(-aE.y,aE.x);ay.set(aD.y,-aD.x);j.copy(ax).add(aB);i.copy(ax).add(ay);if(j.equals(i)){return ay.clone()}j.copy(z).add(aB);i.copy(t).add(ay);k=aE.dot(ay);aA=i.sub(j).dot(ay);if(k===0){console.log("Either infinite or no solutions!");if(aA===0){console.log("Its finite solutions.")}else{console.log("Too bad, no solutions.")}}aF=aA/k;if(aF<0){return A(ax,z,t)}h=aE.multiplyScalar(aF).add(j);return h.sub(ax).clone()}var an=[];for(var ap=0,R=aj.length,am=R-1,al=ap+1;ap<R;ap++,am++,al++){if(am===R){am=0}if(al===R){al=0}var J=aj[ap];var H=aj[am];var F=aj[al];an[ap]=G(aj[ap],aj[am],aj[al])}var Q=[],ac,e=an.concat();for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];ac=[];for(ap=0,R=aw.length,am=R-1,al=ap+1;ap<R;ap++,am++,al++){if(am===R){am=0}if(al===R){al=0}ac[ap]=G(aw[ap],aw[am],aw[al])}Q.push(ac);e=e.concat(ac)}for(av=0;av<B;av++){ad=av/B;Z=f*(1-ad);ah=O*(Math.sin(ad*Math.PI/2));for(ap=0,R=aj.length;ap<R;ap++){w=P(aj[ap],an[ap],ah);ab(w.x,w.y,-Z)}for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];ac=Q[aq];for(ap=0,R=aw.length;ap<R;ap++){w=P(aw[ap],ac[ap],ah);ab(w.x,w.y,-Z)}}}ah=O;for(ap=0;ap<ai;ap++){w=a?P(d[ap],e[ap],ah):d[ap];if(!u){ab(w.x,w.y,0)}else{ae.copy(x.normals[0]).multiplyScalar(w.x);aa.copy(x.binormals[0]).multiplyScalar(w.y);at.copy(S[0]).add(ae).add(aa);ab(at.x,at.y,at.z)}}var af;for(af=1;af<=X;af++){for(ap=0;ap<ai;ap++){w=a?P(d[ap],e[ap],ah):d[ap];if(!u){ab(w.x,w.y,g/X*af)}else{ae.copy(x.normals[af]).multiplyScalar(w.x);aa.copy(x.binormals[af]).multiplyScalar(w.y);at.copy(S[af]).add(ae).add(aa);ab(at.x,at.y,at.z)}}}for(av=B-1;av>=0;av--){ad=av/B;Z=f*(1-ad);ah=O*Math.sin(ad*Math.PI/2);for(ap=0,R=aj.length;ap<R;ap++){w=P(aj[ap],an[ap],ah);ab(w.x,w.y,g+Z)}for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];ac=Q[aq];for(ap=0,R=aw.length;ap<R;ap++){w=P(aw[ap],ac[ap],ah);if(!u){ab(w.x,w.y,g+Z)}else{ab(w.x,w.y+S[X-1].y,S[X-1].x+Z)}}}}L();au();function L(){if(a){var b=0;var h=ai*b;for(ap=0;ap<n;ap++){p=q[ap];m(p[2]+h,p[1]+h,p[0]+h,true)}b=X+B*2;h=ai*b;for(ap=0;ap<n;ap++){p=q[ap];m(p[0]+h,p[1]+h,p[2]+h,false)}}else{for(ap=0;ap<n;ap++){p=q[ap];m(p[2],p[1],p[0],true)}for(ap=0;ap<n;ap++){p=q[ap];m(p[0]+ai*X,p[1]+ai*X,p[2]+ai*X,false)}}}function au(){var b=0;ao(aj,b);b+=aj.length;for(aq=0,ar=I.length;aq<ar;aq++){aw=I[aq];ao(aw,b);b+=aw.length}}function ao(ay,h){var z,v;ap=ay.length;while(--ap>=0){z=ap;v=ap-1;if(v<0){v=ay.length-1}var aD=0,i=X+B*2;for(aD=0;aD<i;aD++){var ax=ai*aD;var t=ai*(aD+1);var aC=h+z+ax,aB=h+v+ax,aA=h+v+t,az=h+z+t;l(aC,aB,aA,az,ay,aD,i,z,v)}}}function ab(b,i,h){Y.vertices.push(new THREE.Vector3(b,i,h))}function m(i,h,s,k){i+=U;h+=U;s+=U;Y.faces.push(new THREE.Face3(i,h,s,null,null,ak));var j=k?D.generateBottomUV(Y,E,N,i,h,s):D.generateTopUV(Y,E,N,i,h,s);Y.faceVertexUvs[0].push(j)}function l(ax,z,t,s,h,j,ay,v,k){ax+=U;z+=U;t+=U;s+=U;Y.faces.push(new THREE.Face4(ax,z,t,s,null,null,o));var i=D.generateSideWallUV(Y,E,h,N,ax,z,t,s,j,ay,v,k);Y.faceVertexUvs[0].push(i)}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(g,h,d,k,j,i){var a=g.vertices[k].x,l=g.vertices[k].y,f=g.vertices[j].x,e=g.vertices[j].y,c=g.vertices[i].x,b=g.vertices[i].y;return[new THREE.Vector2(a,l),new THREE.Vector2(f,e),new THREE.Vector2(c,b)]},generateBottomUV:function(f,c,a,e,d,b){return this.generateTopUV(f,c,a,e,d,b)},generateSideWallUV:function(f,m,b,t,x,w,v,u,a,n,s,r){var k=f.vertices[x].x,i=f.vertices[x].y,g=f.vertices[x].z,q=f.vertices[w].x,p=f.vertices[w].y,o=f.vertices[w].z,e=f.vertices[v].x,d=f.vertices[v].y,c=f.vertices[v].z,l=f.vertices[u].x,j=f.vertices[u].y,h=f.vertices[u].z;if(Math.abs(i-p)<0.01){return[new THREE.Vector2(k,1-g),new THREE.Vector2(q,1-o),new THREE.Vector2(e,1-c),new THREE.Vector2(l,1-h)]}else{return[new THREE.Vector2(i,1-g),new THREE.Vector2(p,1-o),new THREE.Vector2(d,1-c),new THREE.Vector2(j,1-h)]}}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2();THREE.ExtrudeGeometry.__v2=new THREE.Vector2();THREE.ExtrudeGeometry.__v3=new THREE.Vector2();THREE.ExtrudeGeometry.__v4=new THREE.Vector2();THREE.ExtrudeGeometry.__v5=new THREE.Vector2();THREE.ExtrudeGeometry.__v6=new THREE.Vector2();THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);if(a instanceof Array===false){a=[a]}this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(b,c){for(var d=0,a=b.length;d<a;d++){this.addShape(b[d],c)}return this};THREE.ShapeGeometry.prototype.addShape=function(e,h){if(h===undefined){h={}}var d=h.curveSegments!==undefined?h.curveSegments:12;var q=h.material;var A=h.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:h.UVGenerator;var r=this.shapebb;var y,x,t,v;var p=this.vertices.length;var B=e.extractPoints(d);var j=B.shape;var m=B.holes;var o=!THREE.Shape.Utils.isClockWise(j);if(o){j=j.reverse();for(y=0,x=m.length;y<x;y++){t=m[y];if(THREE.Shape.Utils.isClockWise(t)){m[y]=t.reverse()}}o=false}var f=THREE.Shape.Utils.triangulateShape(j,m);var w=j;for(y=0,x=m.length;y<x;y++){t=m[y];j=j.concat(t)}var z,k=j.length;var n,F=f.length;var g,u=w.length;for(y=0;y<k;y++){z=j[y];this.vertices.push(new THREE.Vector3(z.x,z.y,0))}for(y=0;y<F;y++){n=f[y];var E=n[0]+p;var D=n[1]+p;var C=n[2]+p;this.faces.push(new THREE.Face3(E,D,C,null,null,q));this.faceVertexUvs[0].push(A.generateBottomUV(this,e,h,E,D,C))}};THREE.LatheGeometry=function(t,q,n,p){THREE.Geometry.call(this);q=q||12;n=n||0;p=p||2*Math.PI;var A=1/(t.length-1);var z=1/q;for(var u=0,l=q;u<=l;u++){var g=n+u*z*p;var C=Math.cos(g),m=Math.sin(g);for(var r=0,w=t.length;r<w;r++){var o=t[r];var y=new THREE.Vector3();y.x=C*o.x-m*o.y;y.y=m*o.x+C*o.y;y.z=o.z;this.vertices.push(y)}}var e=t.length;for(var u=0,l=q;u<l;u++){for(var r=0,w=t.length-1;r<w;r++){var k=r+e*u;var E=k;var D=k+e;var C=k+1+e;var B=k+1;this.faces.push(new THREE.Face4(E,D,C,B));var x=u*z;var h=r*A;var v=x+z;var f=h+A;this.faceVertexUvs[0].push([new THREE.Vector2(x,h),new THREE.Vector2(v,h),new THREE.Vector2(v,f),new THREE.Vector2(x,f)])}}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(p,o,e,n){THREE.Geometry.call(this);this.width=p;this.height=o;this.widthSegments=e||1;this.heightSegments=n||1;var h,f;var i=p/2;var g=o/2;var r=this.widthSegments;var q=this.heightSegments;var s=r+1;var m=q+1;var B=this.width/r;var u=this.height/q;var A=new THREE.Vector3(0,0,1);for(f=0;f<m;f++){for(h=0;h<s;h++){var l=h*B-i;var k=f*u-g;this.vertices.push(new THREE.Vector3(l,-k,0))}}for(f=0;f<q;f++){for(h=0;h<r;h++){var z=h+s*f;var w=h+s*(f+1);var v=(h+1)+s*(f+1);var t=(h+1)+s*f;var j=new THREE.Face4(z,w,v,t);j.normal.copy(A);j.vertexNormals.push(A.clone(),A.clone(),A.clone(),A.clone());this.faces.push(j);this.faceVertexUvs[0].push([new THREE.Vector2(h/r,1-f/q),new THREE.Vector2(h/r,1-(f+1)/q),new THREE.Vector2((h+1)/r,1-(f+1)/q),new THREE.Vector2((h+1)/r,1-f/q)])}}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(f,e,r,t,z,g,w){THREE.Geometry.call(this);this.radius=f||50;this.widthSegments=Math.max(3,Math.floor(e)||8);this.heightSegments=Math.max(2,Math.floor(r)||6);t=t!==undefined?t:0;z=z!==undefined?z:Math.PI*2;g=g!==undefined?g:0;w=w!==undefined?w:Math.PI;var n,m,h=[],o=[];for(m=0;m<=this.heightSegments;m++){var s=[];var F=[];for(n=0;n<=this.widthSegments;n++){var q=n/this.widthSegments;var p=m/this.heightSegments;var C=new THREE.Vector3();C.x=-this.radius*Math.cos(t+q*z)*Math.sin(g+p*w);C.y=this.radius*Math.cos(g+p*w);C.z=this.radius*Math.sin(t+q*z)*Math.sin(g+p*w);this.vertices.push(C);s.push(this.vertices.length-1);F.push(new THREE.Vector2(q,1-p))}h.push(s);o.push(F)}for(m=0;m<this.heightSegments;m++){for(n=0;n<this.widthSegments;n++){var d=h[m][n+1];var c=h[m][n];var b=h[m+1][n];var a=h[m+1][n+1];var l=this.vertices[d].clone().normalize();var k=this.vertices[c].clone().normalize();var j=this.vertices[b].clone().normalize();var i=this.vertices[a].clone().normalize();var E=o[m][n+1].clone();var D=o[m][n].clone();var B=o[m+1][n].clone();var A=o[m+1][n+1].clone();if(Math.abs(this.vertices[d].y)===this.radius){this.faces.push(new THREE.Face3(d,b,a,[l,j,i]));this.faceVertexUvs[0].push([E,B,A])}else{if(Math.abs(this.vertices[b].y)===this.radius){this.faces.push(new THREE.Face3(d,c,b,[l,k,j]));this.faceVertexUvs[0].push([E,D,B])}else{this.faces.push(new THREE.Face4(d,c,b,a,[l,k,j,i]));this.faceVertexUvs[0].push([E,D,B,A])}}}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),f)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(b,a){var c=THREE.FontUtils.generateShapes(b,a);a.amount=a.height!==undefined?a.height:50;if(a.bevelThickness===undefined){a.bevelThickness=10}if(a.bevelSize===undefined){a.bevelSize=8}if(a.bevelEnabled===undefined){a.bevelEnabled=false}THREE.ExtrudeGeometry.call(this,c,a)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(h,g,f,m,k){THREE.Geometry.call(this);var e=this;this.radius=h||100;this.tube=g||40;this.radialSegments=f||8;this.tubularSegments=m||6;this.arc=k||Math.PI*2;var z=new THREE.Vector3(),n=[],q=[];for(var r=0;r<=this.radialSegments;r++){for(var s=0;s<=this.tubularSegments;s++){var p=s/this.tubularSegments*this.arc;var o=r/this.radialSegments*Math.PI*2;z.x=this.radius*Math.cos(p);z.y=this.radius*Math.sin(p);var t=new THREE.Vector3();t.x=(this.radius+this.tube*Math.cos(o))*Math.cos(p);t.y=(this.radius+this.tube*Math.cos(o))*Math.sin(p);t.z=this.tube*Math.sin(o);this.vertices.push(t);n.push(new THREE.Vector2(s/this.tubularSegments,r/this.radialSegments));q.push(t.clone().sub(z).normalize())}}for(var r=1;r<=this.radialSegments;r++){for(var s=1;s<=this.tubularSegments;s++){var A=(this.tubularSegments+1)*r+s-1;var y=(this.tubularSegments+1)*(r-1)+s-1;var x=(this.tubularSegments+1)*(r-1)+s;var w=(this.tubularSegments+1)*r+s;var l=new THREE.Face4(A,y,x,w,[q[A],q[y],q[x],q[w]]);l.normal.add(q[A]);l.normal.add(q[y]);l.normal.add(q[x]);l.normal.add(q[w]);l.normal.normalize();this.faces.push(l);this.faceVertexUvs[0].push([n[A].clone(),n[y].clone(),n[x].clone(),n[w].clone()])}}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(s,r,m,w,A,z,e){THREE.Geometry.call(this);var g=this;this.radius=s||100;this.tube=r||40;this.radialSegments=m||64;this.tubularSegments=w||8;this.p=A||2;this.q=z||3;this.heightScale=e||1;this.grid=new Array(this.radialSegments);var o=new THREE.Vector3();var B=new THREE.Vector3();var P=new THREE.Vector3();for(var F=0;F<this.radialSegments;++F){this.grid[F]=new Array(this.tubularSegments);for(var D=0;D<this.tubularSegments;++D){var y=F/this.radialSegments*2*this.p*Math.PI;var x=D/this.tubularSegments*2*Math.PI;var h=G(y,x,this.q,this.p,this.radius,this.heightScale);var f=G(y+0.01,x,this.q,this.p,this.radius,this.heightScale);var l,k;o.subVectors(f,h);B.addVectors(f,h);P.crossVectors(o,B);B.crossVectors(P,o);P.normalize();B.normalize();l=-this.tube*Math.cos(x);k=this.tube*Math.sin(x);h.x+=l*B.x+k*P.x;h.y+=l*B.y+k*P.y;h.z+=l*B.z+k*P.z;this.grid[F][D]=H(h.x,h.y,h.z)}}for(var F=0;F<this.radialSegments;++F){for(var D=0;D<this.tubularSegments;++D){var t=(F+1)%this.radialSegments;var C=(D+1)%this.tubularSegments;var O=this.grid[F][D];var N=this.grid[t][D];var M=this.grid[t][C];var L=this.grid[F][C];var K=new THREE.Vector2(F/this.radialSegments,D/this.tubularSegments);var J=new THREE.Vector2((F+1)/this.radialSegments,D/this.tubularSegments);var I=new THREE.Vector2((F+1)/this.radialSegments,(D+1)/this.tubularSegments);var E=new THREE.Vector2(F/this.radialSegments,(D+1)/this.tubularSegments);this.faces.push(new THREE.Face4(O,N,M,L));this.faceVertexUvs[0].push([K,J,I,E])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();function H(a,c,b){return g.vertices.push(new THREE.Vector3(a,c,b))-1}function G(U,S,q,R,Q,a){var n=Math.cos(U);var j=Math.cos(S);var T=Math.sin(U);var i=q/R*U;var p=Math.cos(i);var d=Q*(2+p)*0.5*n;var c=Q*(2+p)*T*0.5;var b=a*Q*Math.sin(i)*0.5;return new THREE.Vector3(d,c,b)}};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(K,h,J,T,I,q){THREE.Geometry.call(this);this.path=K;this.segments=h||64;this.radius=J||1;this.radiusSegments=T||8;this.closed=I||false;if(q){this.debug=new THREE.Object3D()}this.grid=[];var w=this,D,H,A,e=this.segments+1,E,C,B,N,M,L,G,F,o,n,t,f=new THREE.Vector3(),P,O,s,g,Y,X,W,V,U,S,R,Q;var p=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),r=p.tangents,m=p.normals,l=p.binormals;this.tangents=r;this.normals=m;this.binormals=l;function k(a,c,b){return w.vertices.push(new THREE.Vector3(a,c,b))-1}for(P=0;P<e;P++){this.grid[P]=[];G=P/(e-1);t=K.getPointAt(G);D=r[P];H=m[P];A=l[P];if(this.debug){this.debug.add(new THREE.ArrowHelper(D,t,J,255));this.debug.add(new THREE.ArrowHelper(H,t,J,16711680));this.debug.add(new THREE.ArrowHelper(A,t,J,65280))}for(O=0;O<this.radiusSegments;O++){F=O/this.radiusSegments*2*Math.PI;o=-this.radius*Math.cos(F);n=this.radius*Math.sin(F);f.copy(t);f.x+=o*H.x+n*A.x;f.y+=o*H.y+n*A.y;f.z+=o*H.z+n*A.z;this.grid[P][O]=k(f.x,f.y,f.z)}}for(P=0;P<this.segments;P++){for(O=0;O<this.radiusSegments;O++){s=(this.closed)?(P+1)%this.segments:P+1;g=(O+1)%this.radiusSegments;Y=this.grid[P][O];X=this.grid[s][O];W=this.grid[s][g];V=this.grid[P][g];U=new THREE.Vector2(P/this.segments,O/this.radiusSegments);S=new THREE.Vector2((P+1)/this.segments,O/this.radiusSegments);R=new THREE.Vector2((P+1)/this.segments,(O+1)/this.radiusSegments);Q=new THREE.Vector2(P/this.segments,(O+1)/this.radiusSegments);this.faces.push(new THREE.Face4(Y,X,W,V));this.faceVertexUvs[0].push([U,S,R,Q])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(o,r,c){var f=new THREE.Vector3(),z=new THREE.Vector3(),p=new THREE.Vector3(),q=[],n=[],d=[],m=new THREE.Vector3(),t=new THREE.Matrix4(),b=r+1,e,A=0.0001,a,y,x,w,s,j,g;this.tangents=q;this.normals=n;this.binormals=d;for(s=0;s<b;s++){j=s/(b-1);q[s]=o.getTangentAt(j);q[s].normalize()}h();function l(i){n[0]=new THREE.Vector3();d[0]=new THREE.Vector3();if(i===undefined){i=new THREE.Vector3(0,0,1)}n[0].crossVectors(i,q[0]).normalize();d[0].crossVectors(q[0],n[0]).normalize()}function k(){var i=o.getTangentAt(A);n[0]=new THREE.Vector3().subVectors(i,q[0]).normalize();d[0]=new THREE.Vector3().crossVectors(q[0],n[0]);n[0].crossVectors(d[0],q[0]).normalize();d[0].crossVectors(q[0],n[0]).normalize()}function h(){n[0]=new THREE.Vector3();d[0]=new THREE.Vector3();a=Number.MAX_VALUE;y=Math.abs(q[0].x);x=Math.abs(q[0].y);w=Math.abs(q[0].z);if(y<=a){a=y;z.set(1,0,0)}if(x<=a){a=x;z.set(0,1,0)}if(w<=a){z.set(0,0,1)}m.crossVectors(q[0],z).normalize();n[0].crossVectors(q[0],m);d[0].crossVectors(q[0],n[0])}for(s=1;s<b;s++){n[s]=n[s-1].clone();d[s]=d[s-1].clone();m.crossVectors(q[s-1],q[s]);if(m.length()>A){m.normalize();e=Math.acos(q[s-1].dot(q[s]));n[s].applyMatrix4(t.makeRotationAxis(m,e))}d[s].crossVectors(q[s],n[s])}if(c){e=Math.acos(n[0].dot(n[b-1]));e/=(b-1);if(q[0].dot(m.crossVectors(n[0],n[b-1]))>0){e=-e}for(s=1;s<b;s++){n[s].applyMatrix4(t.makeRotationAxis(q[s],e*s));d[s].crossVectors(q[s],n[s])}}};THREE.PolyhedronGeometry=function(m,d,k,h){THREE.Geometry.call(this);k=k||1;h=h||0;var j=this;for(var f=0,e=m.length;f<e;f++){o(new THREE.Vector3(m[f][0],m[f][1],m[f][2]))}var g=[],c=this.vertices;for(var f=0,e=d.length;f<e;f++){b(c[d[f][0]],c[d[f][1]],c[d[f][2]],h)}this.mergeVertices();for(var f=0,e=this.vertices.length;f<e;f++){this.vertices[f].multiplyScalar(k)}function o(i){var s=i.normalize().clone();s.index=j.vertices.push(s)-1;var p=r(i)/2/Math.PI+0.5;var l=n(i)/Math.PI+0.5;s.uv=new THREE.Vector2(p,1-l);return s}function b(u,t,s,l){if(l<1){var p=new THREE.Face3(u.index,t.index,s.index,[u.clone(),t.clone(),s.clone()]);p.centroid.add(u).add(t).add(s).divideScalar(3);p.normal=p.centroid.clone().normalize();j.faces.push(p);var i=r(p.centroid);j.faceVertexUvs[0].push([a(u.uv,u,i),a(t.uv,t,i),a(s.uv,s,i)])}else{l-=1;b(u,q(u,t),q(u,s),l);b(q(u,t),t,q(t,s),l);b(q(u,s),q(t,s),s,l);b(q(u,t),q(t,s),q(u,s),l)}}function q(p,l){if(!g[p.index]){g[p.index]=[]}if(!g[l.index]){g[l.index]=[]}var i=g[p.index][l.index];if(i===undefined){g[p.index][l.index]=g[l.index][p.index]=i=o(new THREE.Vector3().addVectors(p,l).divideScalar(2))}return i}function r(i){return Math.atan2(i.z,-i.x)}function n(i){return Math.atan2(-i.y,Math.sqrt((i.x*i.x)+(i.z*i.z)))}function a(l,i,p){if((p<0)&&(l.x===1)){l=new THREE.Vector2(l.x-1,l.y)}if((i.x===0)&&(i.z===0)){l=new THREE.Vector2(p/2/Math.PI+0.5,l.y)}return l}this.computeCentroids();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),k)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(b,e){var d=(1+Math.sqrt(5))/2;var c=[[-1,d,0],[1,d,0],[-1,-d,0],[1,-d,0],[0,-1,d],[0,1,d],[0,-1,-d],[0,1,-d],[d,0,-1],[d,0,1],[-d,0,-1],[-d,0,1]];var a=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,c,a,b,e)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(b,d){var c=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]];var a=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,c,a,b,d)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(b,d){var c=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]];var a=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,c,a,b,d)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(g,f,B,w){THREE.Geometry.call(this);var F=this.vertices;var e=this.faces;var k=this.faceVertexUvs[0];w=(w===undefined)?false:w;var s,h,q,o;var m,l;var n=B+1;var E=f+1;for(s=0;s<=B;s++){l=s/B;for(q=0;q<=f;q++){m=q/f;o=g(m,l);F.push(o)}}var D,C,A,z;var y,x,t,r;for(s=0;s<B;s++){for(q=0;q<f;q++){D=s*E+q;C=s*E+q+1;A=(s+1)*E+q;z=(s+1)*E+q+1;y=new THREE.Vector2(q/f,s/B);x=new THREE.Vector2((q+1)/f,s/B);t=new THREE.Vector2(q/f,(s+1)/B);r=new THREE.Vector2((q+1)/f,(s+1)/B);if(w){e.push(new THREE.Face3(D,C,A));e.push(new THREE.Face3(C,z,A));k.push([y,x,t]);k.push([x,r,t])}else{e.push(new THREE.Face4(D,C,z,A));k.push([y,x,r,t])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry=function(k){THREE.Geometry.call(this);var d=[[0,1,2],[0,2,1]];for(var g=3;g<k.length;g++){b(g)}function b(v){var s=k[v].clone();var r=s.length();s.x+=r*n();s.y+=r*n();s.z+=r*n();var i=[];for(var t=0;t<d.length;){var w=d[t];if(e(w,s)){for(var u=0;u<3;u++){var p=[w[u],w[(u+1)%3]];var j=true;for(var q=0;q<i.length;q++){if(o(i[q],p)){i[q]=i[i.length-1];i.pop();j=false;break}}if(j){i.push(p)}}d[t]=d[d.length-1];d.pop()}else{t++}}for(var q=0;q<i.length;q++){d.push([i[q][0],i[q][1],v])}}function e(r,q){var p=k[r[0]];var j=k[r[1]];var i=k[r[2]];var t=h(p,j,i);var s=t.dot(p);return t.dot(q)>=s}function h(q,p,j){var i=new THREE.Vector3();var r=new THREE.Vector3();i.subVectors(j,p);r.subVectors(q,p);i.cross(r);i.normalize();return i}function o(j,i){return j[0]===i[1]&&j[1]===i[0]}function n(){return(Math.random()-0.5)*2*0.000001}function m(j){var i=j.length();return new THREE.Vector2(j.x/i,j.y/i)}var a=0;var c=new Array(k.length);for(var g=0;g<d.length;g++){var l=d[g];for(var f=0;f<3;f++){if(c[l[f]]===undefined){c[l[f]]=a++;this.vertices.push(k[l[f]])}l[f]=c[l[f]]}}for(var g=0;g<d.length;g++){this.faces.push(new THREE.Face3(d[g][0],d[g][1],d[g][2]))}for(var g=0;g<this.faces.length;g++){var l=this.faces[g];this.faceVertexUvs[0].push([m(this.vertices[l.a]),m(this.vertices[l.b]),m(this.vertices[l.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(a){var c=new THREE.Geometry();c.vertices.push(new THREE.Vector3(),new THREE.Vector3(a||1,0,0),new THREE.Vector3(),new THREE.Vector3(0,a||1,0),new THREE.Vector3(),new THREE.Vector3(0,0,a||1));c.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,c,b,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(c,b,f,e){THREE.Object3D.call(this);if(f===undefined){f=20}if(e===undefined){e=16776960}var a=new THREE.Geometry();a.vertices.push(new THREE.Vector3(0,0,0));a.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:e}));this.add(this.line);var d=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(d,new THREE.MeshBasicMaterial({color:e}));this.cone.position.set(0,1,0);this.add(this.cone);if(b instanceof THREE.Vector3){this.position=b}this.setDirection(c);this.setLength(f)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var f=THREE.ArrowHelper.__v1.copy(a).normalize();if(f.y>0.999){this.rotation.set(0,0,0)}else{if(f.y<-0.999){this.rotation.set(Math.PI,0,0)}else{var b=THREE.ArrowHelper.__v2.set(f.z,0,-f.x).normalize();var e=Math.acos(f.y);var c=THREE.ArrowHelper.__q1.setFromAxisAngle(b,e);this.rotation.setEulerFromQuaternion(c,this.eulerOrder)}}};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};THREE.ArrowHelper.__v1=new THREE.Vector3();THREE.ArrowHelper.__v2=new THREE.Vector3();THREE.ArrowHelper.__q1=new THREE.Quaternion();THREE.CameraHelper=function(e){THREE.Line.call(this);var g=this;this.geometry=new THREE.Geometry();this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=false;this.pointMap={};var d=16755200;var i=16711680;var b=43775;var f=16777215;var c=3355443;h("n1","n2",d);h("n2","n4",d);h("n4","n3",d);h("n3","n1",d);h("f1","f2",d);h("f2","f4",d);h("f4","f3",d);h("f3","f1",d);h("n1","f1",d);h("n2","f2",d);h("n3","f3",d);h("n4","f4",d);h("p","n1",i);h("p","n2",i);h("p","n3",i);h("p","n4",i);h("u1","u2",b);h("u2","u3",b);h("u3","u1",b);h("c","t",f);h("p","c",c);h("cn1","cn2",c);h("cn3","cn4",c);h("cf1","cf2",c);h("cf3","cf4",c);this.camera=e;function h(k,j,l){a(k,l);a(j,l)}function a(k,j){g.geometry.vertices.push(new THREE.Vector3());g.geometry.colors.push(new THREE.Color(j));if(g.pointMap[k]===undefined){g.pointMap[k]=[]}g.pointMap[k].push(g.geometry.vertices.length-1)}this.update(e)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var d=this;var a=1,c=1;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);b("c",0,0,-1);b("t",0,0,1);b("n1",-a,-c,-1);b("n2",a,-c,-1);b("n3",-a,c,-1);b("n4",a,c,-1);b("f1",-a,-c,1);b("f2",a,-c,1);b("f3",-a,c,1);b("f4",a,c,1);b("u1",a*0.7,c*1.1,-1);b("u2",-a*0.7,c*1.1,-1);b("u3",0,c*2,-1);b("cf1",-a,0,1);b("cf2",a,0,1);b("cf3",0,-c,1);b("cf4",0,c,1);b("cn1",-a,0,-1);b("cn2",a,0,-1);b("cn3",0,-c,-1);b("cn4",0,c,-1);function b(f,e,l,k){THREE.CameraHelper.__v.set(e,l,k);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);var j=d.pointMap[f];if(j!==undefined){for(var h=0,g=j.length;h<g;h++){d.geometry.vertices[j[h]].copy(THREE.CameraHelper.__v)}}}this.geometry.verticesNeedUpdate=true};THREE.CameraHelper.__projector=new THREE.Projector();THREE.CameraHelper.__v=new THREE.Vector3();THREE.CameraHelper.__c=new THREE.Camera();THREE.DirectionalLightHelper=function(f,d){THREE.Object3D.call(this);this.light=f;this.position=f.position;this.direction=new THREE.Vector3();this.direction.subVectors(f.target.position,f.position);var e=THREE.Math.clamp(f.intensity,0,1);this.color=f.color.clone();this.color.multiplyScalar(e);var l=this.color.getHex();var g=new THREE.SphereGeometry(d,16,8);var i=new THREE.AsteriskGeometry(d*1.25,d*2.25);var a=new THREE.MeshBasicMaterial({color:l,fog:false});var b=new THREE.LineBasicMaterial({color:l,fog:false});this.lightSphere=new THREE.Mesh(g,a);this.lightRays=new THREE.Line(i,b,THREE.LinePieces);this.add(this.lightSphere);this.add(this.lightRays);this.lightSphere.properties.isGizmo=true;this.lightSphere.properties.gizmoSubject=f;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;if(f.target.properties.targetInverse!==undefined){var k=new THREE.SphereGeometry(d,8,4);var h=new THREE.MeshBasicMaterial({color:l,wireframe:true,fog:false});this.targetSphere=new THREE.Mesh(k,h);this.targetSphere.position=f.target.position;this.targetSphere.properties.isGizmo=true;this.targetSphere.properties.gizmoSubject=f.target;this.targetSphere.properties.gizmoRoot=this.targetSphere;var c=new THREE.LineDashedMaterial({color:l,dashSize:4,gapSize:4,opacity:0.75,transparent:true,fog:false});var j=new THREE.Geometry();j.vertices.push(this.position.clone());j.vertices.push(this.targetSphere.position.clone());j.computeLineDistances();this.targetLine=new THREE.Line(j,c);this.targetLine.properties.isGizmo=true}this.properties.isGizmo=true};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);if(this.targetSphere!==null){this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=true}};THREE.HemisphereLightHelper=function(f,b,k,c){THREE.Object3D.call(this);this.light=f;this.position=f.position;var d=THREE.Math.clamp(f.intensity,0,1);this.color=f.color.clone();this.color.multiplyScalar(d);var o=this.color.getHex();this.groundColor=f.groundColor.clone();this.groundColor.multiplyScalar(d);var h=this.groundColor.getHex();var j=new THREE.SphereGeometry(b,16,8,0,Math.PI*2,0,Math.PI*0.5);var a=new THREE.SphereGeometry(b,16,8,0,Math.PI*2,Math.PI*0.5,Math.PI);var m=new THREE.MeshBasicMaterial({color:o,fog:false});var n=new THREE.MeshBasicMaterial({color:h,fog:false});for(var g=0,l=j.faces.length;g<l;g++){j.faces[g].materialIndex=0}for(var g=0,l=a.faces.length;g<l;g++){a.faces[g].materialIndex=1}THREE.GeometryUtils.merge(j,a);this.lightSphere=new THREE.Mesh(j,new THREE.MeshFaceMaterial([m,n]));this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,(b+k)*1.1,0),k,o);this.lightArrow.rotation.x=Math.PI;this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,(b+k)*-1.1,0),k,h);var e=new THREE.Object3D();e.rotation.x=-Math.PI*0.5;e.add(this.lightSphere);e.add(this.lightArrow);e.add(this.lightArrowGround);this.add(e);this.lightSphere.properties.isGizmo=true;this.lightSphere.properties.gizmoSubject=f;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=true;this.target=new THREE.Vector3();this.lookAt(this.target)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.groundColor.copy(this.light.groundColor);this.groundColor.multiplyScalar(a);this.lightSphere.material.materials[0].color.copy(this.color);this.lightSphere.material.materials[1].color.copy(this.groundColor);this.lightArrow.setColor(this.color.getHex());this.lightArrowGround.setColor(this.groundColor.getHex());this.lookAt(this.target)};THREE.PointLightHelper=function(g,e){THREE.Object3D.call(this);this.light=g;this.position=g.position;var f=THREE.Math.clamp(g.intensity,0,1);this.color=g.color.clone();this.color.multiplyScalar(f);var l=this.color.getHex();var h=new THREE.SphereGeometry(e,16,8);var i=new THREE.AsteriskGeometry(e*1.25,e*2.25);var j=new THREE.IcosahedronGeometry(1,2);var a=new THREE.MeshBasicMaterial({color:l,fog:false});var b=new THREE.LineBasicMaterial({color:l,fog:false});var c=new THREE.MeshBasicMaterial({color:l,fog:false,wireframe:true,opacity:0.1,transparent:true});this.lightSphere=new THREE.Mesh(h,a);this.lightRays=new THREE.Line(i,b,THREE.LinePieces);this.lightDistance=new THREE.Mesh(j,c);var k=g.distance;if(k===0){this.lightDistance.visible=false}else{this.lightDistance.scale.set(k,k,k)}this.add(this.lightSphere);this.add(this.lightRays);this.add(this.lightDistance);this.lightSphere.properties.isGizmo=true;this.lightSphere.properties.gizmoSubject=g;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=true};THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.PointLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightDistance.material.color.copy(this.color);var b=this.light.distance;if(b===0){this.lightDistance.visible=false}else{this.lightDistance.visible=true;this.lightDistance.scale.set(b,b,b)}};THREE.SpotLightHelper=function(g,e){THREE.Object3D.call(this);this.light=g;this.position=g.position;this.direction=new THREE.Vector3();this.direction.subVectors(g.target.position,g.position);var f=THREE.Math.clamp(g.intensity,0,1);this.color=g.color.clone();this.color.multiplyScalar(f);var q=this.color.getHex();var i=new THREE.SphereGeometry(e,16,8);var k=new THREE.AsteriskGeometry(e*1.25,e*2.25);var p=new THREE.CylinderGeometry(0.0001,1,1,8,1,true);var n=new THREE.Matrix4();n.rotateX(-Math.PI/2);n.translate(new THREE.Vector3(0,-0.5,0));p.applyMatrix(n);var b=new THREE.MeshBasicMaterial({color:q,fog:false});var c=new THREE.LineBasicMaterial({color:q,fog:false});var o=new THREE.MeshBasicMaterial({color:q,fog:false,wireframe:true,opacity:0.3,transparent:true});this.lightSphere=new THREE.Mesh(i,b);this.lightCone=new THREE.Mesh(p,o);var a=g.distance?g.distance:10000;var h=a*Math.tan(g.angle*0.5)*2;this.lightCone.scale.set(h,h,a);this.lightRays=new THREE.Line(k,c,THREE.LinePieces);this.gyroscope=new THREE.Gyroscope();this.gyroscope.add(this.lightSphere);this.gyroscope.add(this.lightRays);this.add(this.gyroscope);this.add(this.lightCone);this.lookAt(g.target.position);this.lightSphere.properties.isGizmo=true;this.lightSphere.properties.gizmoSubject=g;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;if(g.target.properties.targetInverse!==undefined){var m=new THREE.SphereGeometry(e,8,4);var j=new THREE.MeshBasicMaterial({color:q,wireframe:true,fog:false});this.targetSphere=new THREE.Mesh(m,j);this.targetSphere.position=g.target.position;this.targetSphere.properties.isGizmo=true;this.targetSphere.properties.gizmoSubject=g.target;this.targetSphere.properties.gizmoRoot=this.targetSphere;var d=new THREE.LineDashedMaterial({color:q,dashSize:4,gapSize:4,opacity:0.75,transparent:true,fog:false});var l=new THREE.Geometry();l.vertices.push(this.position.clone());l.vertices.push(this.targetSphere.position.clone());l.computeLineDistances();this.targetLine=new THREE.Line(l,d);this.targetLine.properties.isGizmo=true}this.properties.isGizmo=true};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);this.lookAt(this.light.target.position);var b=this.light.distance?this.light.distance:10000;var c=b*Math.tan(this.light.angle*0.5)*2;this.lightCone.scale.set(c,c,b);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightCone.material.color.copy(this.color);if(this.targetSphere!==null){this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=true}};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(d,b,e,c,a){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3();this.customUpdateCallback=undefined;if(d!==undefined){this.add(d,b,e,c,a)}};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(e,c,f,d,a,b){if(c===undefined){c=-1}if(f===undefined){f=0}if(b===undefined){b=1}if(a===undefined){a=new THREE.Color(16777215)}if(d===undefined){d=THREE.NormalBlending}f=Math.min(f,Math.max(0,f));this.lensFlares.push({texture:e,size:c,distance:f,x:0,y:0,z:0,scale:1,rotation:1,opacity:b,color:a,blending:d})};THREE.LensFlare.prototype.updateLensFlares=function(){var d,c=this.lensFlares.length;var b;var a=-this.positionScreen.x*2;var e=-this.positionScreen.y*2;for(d=0;d<c;d++){b=this.lensFlares[d];b.x=this.positionScreen.x+a*b.distance;b.y=this.positionScreen.y+e*b.distance;b.wantedRotation=b.x*Math.PI*0.25;b.rotation+=(b.wantedRotation-b.rotation)*0.25}};THREE.MorphBlendMesh=function(g,d){THREE.Mesh.call(this,g,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;var b="__default";var c=0;var a=f-1;var e=f/1;this.createAnimation(b,c,a,e);this.setAnimationWeight(b,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(b,e,a,d){var c={startFrame:e,endFrame:a,length:a-e+1,fps:d,duration:(a-e)/d,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[b]=c;this.animationsList.push(c)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(c){var j=/([a-z]+)(\d+)/;var b,g={};var k=this.geometry;for(var d=0,l=k.morphTargets.length;d<l;d++){var m=k.morphTargets[d];var h=m.name.match(j);if(h&&h.length>1){var a=h[1];var f=h[2];if(!g[a]){g[a]={start:Infinity,end:-Infinity}}var e=g[a];if(d<e.start){e.start=d}if(d>e.end){e.end=d}if(!b){b=a}}}for(var a in g){var e=g[a];this.createAnimation(a,e.start,e.end,c)}this.firstAnimation=b};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];if(b){b.direction=1;b.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];if(b){b.direction=-1;b.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,c){var b=this.animationsMap[a];if(b){b.fps=c;b.duration=(b.end-b.start)/b.fps}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,c){var b=this.animationsMap[a];if(b){b.duration=c;b.fps=(b.end-b.start)/b.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,c){var b=this.animationsMap[a];if(b){b.weight=c}};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,c){var b=this.animationsMap[a];if(b){b.time=c}};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var c=0;var b=this.animationsMap[a];if(b){c=b.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var c=-1;var b=this.animationsMap[a];if(b){c=b.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];if(b){b.time=0;b.active=true}else{console.warn("animation["+a+"] undefined")}};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];if(b){b.active=false}};THREE.MorphBlendMesh.prototype.update=function(h){for(var c=0,a=this.animationsList.length;c<a;c++){var g=this.animationsList[c];if(!g.active){continue}var e=g.duration/g.length;g.time+=g.direction*h;if(g.mirroredLoop){if(g.time>g.duration||g.time<0){g.direction*=-1;if(g.time>g.duration){g.time=g.duration;g.directionBackwards=true}if(g.time<0){g.time=0;g.directionBackwards=false}}}else{g.time=g.time%g.duration;if(g.time<0){g.time+=g.duration}}var b=g.startFrame+THREE.Math.clamp(Math.floor(g.time/e),0,g.length-1);var f=g.weight;if(b!==g.currentFrame){this.morphTargetInfluences[g.lastFrame]=0;this.morphTargetInfluences[g.currentFrame]=1*f;this.morphTargetInfluences[b]=0;g.lastFrame=g.currentFrame;g.currentFrame=b}var d=(g.time%e)/e;if(g.directionBackwards){d=1-d}this.morphTargetInfluences[g.currentFrame]=d*f;this.morphTargetInfluences[g.lastFrame]=(1-d)*f}};THREE.LensFlarePlugin=function(){var c,d,a,e={};this.init=function(g){c=g.context;d=g;a=g.getPrecision();e.vertices=new Float32Array(8+8);e.faces=new Uint16Array(6);var f=0;e.vertices[f++]=-1;e.vertices[f++]=-1;e.vertices[f++]=0;e.vertices[f++]=0;e.vertices[f++]=1;e.vertices[f++]=-1;e.vertices[f++]=1;e.vertices[f++]=0;e.vertices[f++]=1;e.vertices[f++]=1;e.vertices[f++]=1;e.vertices[f++]=1;e.vertices[f++]=-1;e.vertices[f++]=1;e.vertices[f++]=0;e.vertices[f++]=1;f=0;e.faces[f++]=0;e.faces[f++]=1;e.faces[f++]=2;e.faces[f++]=0;e.faces[f++]=2;e.faces[f++]=3;e.vertexBuffer=c.createBuffer();e.elementBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,e.vertexBuffer);c.bufferData(c.ARRAY_BUFFER,e.vertices,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,e.elementBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,e.faces,c.STATIC_DRAW);e.tempTexture=c.createTexture();e.occlusionTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,e.tempTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGB,16,16,0,c.RGB,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);c.bindTexture(c.TEXTURE_2D,e.occlusionTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,16,16,0,c.RGBA,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);if(c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0){e.hasVertexTexture=false;e.program=b(THREE.ShaderFlares.lensFlare,a)}else{e.hasVertexTexture=true;e.program=b(THREE.ShaderFlares.lensFlareVertexTexture,a)}e.attributes={};e.uniforms={};e.attributes.vertex=c.getAttribLocation(e.program,"position");e.attributes.uv=c.getAttribLocation(e.program,"uv");e.uniforms.renderType=c.getUniformLocation(e.program,"renderType");e.uniforms.map=c.getUniformLocation(e.program,"map");e.uniforms.occlusionMap=c.getUniformLocation(e.program,"occlusionMap");e.uniforms.opacity=c.getUniformLocation(e.program,"opacity");e.uniforms.color=c.getUniformLocation(e.program,"color");e.uniforms.scale=c.getUniformLocation(e.program,"scale");e.uniforms.rotation=c.getUniformLocation(e.program,"rotation");e.uniforms.screenPosition=c.getUniformLocation(e.program,"screenPosition")};this.render=function(y,v,r,f){var n=y.__webglFlares,A=n.length;if(!A){return}var w=new THREE.Vector3();var h=f/r,x=r*0.5,q=f*0.5;var o=16/f,B=new THREE.Vector2(o*h,o);var m=new THREE.Vector3(1,1,0),l=new THREE.Vector2(1,1);var z=e.uniforms,k=e.attributes;c.useProgram(e.program);c.enableVertexAttribArray(e.attributes.vertex);c.enableVertexAttribArray(e.attributes.uv);c.uniform1i(z.occlusionMap,0);c.uniform1i(z.map,1);c.bindBuffer(c.ARRAY_BUFFER,e.vertexBuffer);c.vertexAttribPointer(k.vertex,2,c.FLOAT,false,2*8,0);c.vertexAttribPointer(k.uv,2,c.FLOAT,false,2*8,8);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,e.elementBuffer);c.disable(c.CULL_FACE);c.depthMask(false);var t,s,u,g,p;for(t=0;t<A;t++){o=16/f;B.set(o*h,o);g=n[t];w.set(g.matrixWorld.elements[12],g.matrixWorld.elements[13],g.matrixWorld.elements[14]);w.applyMatrix4(v.matrixWorldInverse);w.applyProjection(v.projectionMatrix);m.copy(w);l.x=m.x*x+x;l.y=m.y*q+q;if(e.hasVertexTexture||(l.x>0&&l.x<r&&l.y>0&&l.y<f)){c.activeTexture(c.TEXTURE1);c.bindTexture(c.TEXTURE_2D,e.tempTexture);c.copyTexImage2D(c.TEXTURE_2D,0,c.RGB,l.x-8,l.y-8,16,16,0);c.uniform1i(z.renderType,0);c.uniform2f(z.scale,B.x,B.y);c.uniform3f(z.screenPosition,m.x,m.y,m.z);c.disable(c.BLEND);c.enable(c.DEPTH_TEST);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);c.activeTexture(c.TEXTURE0);c.bindTexture(c.TEXTURE_2D,e.occlusionTexture);c.copyTexImage2D(c.TEXTURE_2D,0,c.RGBA,l.x-8,l.y-8,16,16,0);c.uniform1i(z.renderType,1);c.disable(c.DEPTH_TEST);c.activeTexture(c.TEXTURE1);c.bindTexture(c.TEXTURE_2D,e.tempTexture);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);g.positionScreen.copy(m);if(g.customUpdateCallback){g.customUpdateCallback(g)}else{g.updateLensFlares()}c.uniform1i(z.renderType,2);c.enable(c.BLEND);for(s=0,u=g.lensFlares.length;s<u;s++){p=g.lensFlares[s];if(p.opacity>0.001&&p.scale>0.001){m.x=p.x;m.y=p.y;m.z=p.z;o=p.size*p.scale/f;B.x=o*h;B.y=o;c.uniform3f(z.screenPosition,m.x,m.y,m.z);c.uniform2f(z.scale,B.x,B.y);c.uniform1f(z.rotation,p.rotation);c.uniform1f(z.opacity,p.opacity);c.uniform3f(z.color,p.color.r,p.color.g,p.color.b);d.setBlending(p.blending,p.blendEquation,p.blendSrc,p.blendDst);d.setTexture(p.texture,1);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0)}}}}c.enable(c.CULL_FACE);c.enable(c.DEPTH_TEST);c.depthMask(true)};function b(i,g){var h=c.createProgram();var f=c.createShader(c.FRAGMENT_SHADER);var k=c.createShader(c.VERTEX_SHADER);var j="precision "+g+" float;\n";c.shaderSource(f,j+i.fragmentShader);c.shaderSource(k,j+i.vertexShader);c.compileShader(f);c.compileShader(k);c.attachShader(h,f);c.attachShader(h,k);c.linkProgram(h);return h}};THREE.ShadowMapPlugin=function(){var a,k,n,e,b,l,m=new THREE.Frustum(),c=new THREE.Matrix4(),h=new THREE.Vector3(),o=new THREE.Vector3(),j=new THREE.Vector3();this.init=function(r){a=r.context;k=r;var p=THREE.ShaderLib.depthRGBA;var q=THREE.UniformsUtils.clone(p.uniforms);n=new THREE.ShaderMaterial({fragmentShader:p.fragmentShader,vertexShader:p.vertexShader,uniforms:q});e=new THREE.ShaderMaterial({fragmentShader:p.fragmentShader,vertexShader:p.vertexShader,uniforms:q,morphTargets:true});b=new THREE.ShaderMaterial({fragmentShader:p.fragmentShader,vertexShader:p.vertexShader,uniforms:q,skinning:true});l=new THREE.ShaderMaterial({fragmentShader:p.fragmentShader,vertexShader:p.vertexShader,uniforms:q,morphTargets:true,skinning:true});n._shadowPass=true;e._shadowPass=true;b._shadowPass=true;l._shadowPass=true};this.render=function(q,p){if(!(k.shadowMapEnabled&&k.shadowMapAutoUpdate)){return}this.update(q,p)};this.update=function(N,L){var K,y,J,M,E,t,O,Q,x,I,B,q,R,v,z,P=[],H=0,p=null;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);if(k.shadowMapCullFace===THREE.CullFaceFront){a.cullFace(a.FRONT)}else{a.cullFace(a.BACK)}k.setDepthTest(true);for(K=0,y=N.__lights.length;K<y;K++){v=N.__lights[K];if(!v.castShadow){continue}if((v instanceof THREE.DirectionalLight)&&v.shadowCascade){for(E=0;E<v.shadowCascadeCount;E++){var u;if(!v.shadowCascadeArray[E]){u=d(v,E);u.originalCamera=L;var G=new THREE.Gyroscope();G.position=v.shadowCascadeOffset;G.add(u);G.add(u.target);L.add(G);v.shadowCascadeArray[E]=u;console.log("Created virtualLight",u)}else{u=v.shadowCascadeArray[E]}g(v,E);P[H]=u;H++}}else{P[H]=v;H++}}for(K=0,y=P.length;K<y;K++){v=P[K];if(!v.shadowMap){var D=THREE.LinearFilter;if(k.shadowMapType===THREE.PCFSoftShadowMap){D=THREE.NearestFilter}var F={minFilter:D,magFilter:D,format:THREE.RGBAFormat};v.shadowMap=new THREE.WebGLRenderTarget(v.shadowMapWidth,v.shadowMapHeight,F);v.shadowMapSize=new THREE.Vector2(v.shadowMapWidth,v.shadowMapHeight);v.shadowMatrix=new THREE.Matrix4()}if(!v.shadowCamera){if(v instanceof THREE.SpotLight){v.shadowCamera=new THREE.PerspectiveCamera(v.shadowCameraFov,v.shadowMapWidth/v.shadowMapHeight,v.shadowCameraNear,v.shadowCameraFar)}else{if(v instanceof THREE.DirectionalLight){v.shadowCamera=new THREE.OrthographicCamera(v.shadowCameraLeft,v.shadowCameraRight,v.shadowCameraTop,v.shadowCameraBottom,v.shadowCameraNear,v.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}}N.add(v.shadowCamera);if(k.autoUpdateScene){N.updateMatrixWorld()}}if(v.shadowCameraVisible&&!v.cameraHelper){v.cameraHelper=new THREE.CameraHelper(v.shadowCamera);v.shadowCamera.add(v.cameraHelper)}if(v.isVirtual&&u.originalCamera==L){i(L,v)}t=v.shadowMap;O=v.shadowMatrix;Q=v.shadowCamera;Q.position.getPositionFromMatrix(v.matrixWorld);j.getPositionFromMatrix(v.target.matrixWorld);Q.lookAt(j);Q.updateMatrixWorld();Q.matrixWorldInverse.getInverse(Q.matrixWorld);if(v.cameraHelper){v.cameraHelper.visible=v.shadowCameraVisible}if(v.shadowCameraVisible){v.cameraHelper.update()}O.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);O.multiply(Q.projectionMatrix);O.multiply(Q.matrixWorldInverse);c.multiplyMatrices(Q.projectionMatrix,Q.matrixWorldInverse);m.setFromMatrix(c);k.setRenderTarget(t);k.clear();z=N.__webglObjects;for(J=0,M=z.length;J<M;J++){q=z[J];R=q.object;q.render=false;if(R.visible&&R.castShadow){if(!(R instanceof THREE.Mesh||R instanceof THREE.ParticleSystem)||!(R.frustumCulled)||m.intersectsObject(R)){R._modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,R.matrixWorld);q.render=true}}}var s,w,A;for(J=0,M=z.length;J<M;J++){q=z[J];if(q.render){R=q.object;I=q.buffer;s=f(R);w=R.geometry.morphTargets.length>0&&s.morphTargets;A=R instanceof THREE.SkinnedMesh&&s.skinning;if(R.customDepthMaterial){B=R.customDepthMaterial}else{if(A){B=w?l:b}else{if(w){B=e}else{B=n}}}if(I instanceof THREE.BufferGeometry){k.renderBufferDirect(Q,N.__lights,p,B,I,R)}else{k.renderBuffer(Q,N.__lights,p,B,I,R)}}}z=N.__webglObjectsImmediate;for(J=0,M=z.length;J<M;J++){q=z[J];R=q.object;if(R.visible&&R.castShadow){R._modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,R.matrixWorld);k.renderImmediateObject(Q,N.__lights,p,n,R)}}}var r=k.getClearColor(),C=k.getClearAlpha();a.clearColor(r.r,r.g,r.b,C);a.enable(a.BLEND);if(k.shadowMapCullFace===THREE.CullFaceFront){a.cullFace(a.BACK)}};function d(q,s){var p=new THREE.DirectionalLight();p.isVirtual=true;p.onlyShadow=true;p.castShadow=true;p.shadowCameraNear=q.shadowCameraNear;p.shadowCameraFar=q.shadowCameraFar;p.shadowCameraLeft=q.shadowCameraLeft;p.shadowCameraRight=q.shadowCameraRight;p.shadowCameraBottom=q.shadowCameraBottom;p.shadowCameraTop=q.shadowCameraTop;p.shadowCameraVisible=q.shadowCameraVisible;p.shadowDarkness=q.shadowDarkness;p.shadowBias=q.shadowCascadeBias[s];p.shadowMapWidth=q.shadowCascadeWidth[s];p.shadowMapHeight=q.shadowCascadeHeight[s];p.pointsWorld=[];p.pointsFrustum=[];var v=p.pointsWorld,r=p.pointsFrustum;for(var u=0;u<8;u++){v[u]=new THREE.Vector3();r[u]=new THREE.Vector3()}var w=q.shadowCascadeNearZ[s];var t=q.shadowCascadeFarZ[s];r[0].set(-1,-1,w);r[1].set(1,-1,w);r[2].set(-1,1,w);r[3].set(1,1,w);r[4].set(-1,-1,t);r[5].set(1,-1,t);r[6].set(-1,1,t);r[7].set(1,1,t);return p}function g(q,s){var p=q.shadowCascadeArray[s];p.position.copy(q.position);p.target.position.copy(q.target.position);p.lookAt(p.target);p.shadowCameraVisible=q.shadowCameraVisible;p.shadowDarkness=q.shadowDarkness;p.shadowBias=q.shadowCascadeBias[s];var u=q.shadowCascadeNearZ[s];var t=q.shadowCascadeFarZ[s];var r=p.pointsFrustum;r[0].z=u;r[1].z=u;r[2].z=u;r[3].z=u;r[4].z=t;r[5].z=t;r[6].z=t;r[7].z=t}function i(t,q){var v=q.shadowCamera,r=q.pointsFrustum,u=q.pointsWorld;h.set(Infinity,Infinity,Infinity);o.set(-Infinity,-Infinity,-Infinity);for(var s=0;s<8;s++){var w=u[s];w.copy(r[s]);THREE.ShadowMapPlugin.__projector.unprojectVector(w,t);w.applyMatrix4(v.matrixWorldInverse);if(w.x<h.x){h.x=w.x}if(w.x>o.x){o.x=w.x}if(w.y<h.y){h.y=w.y}if(w.y>o.y){o.y=w.y}if(w.z<h.z){h.z=w.z}if(w.z>o.z){o.z=w.z}}v.left=h.x;v.right=o.x;v.top=o.y;v.bottom=h.y;v.updateProjectionMatrix()}function f(p){return p.material instanceof THREE.MeshFaceMaterial?p.material.materials[0]:p.material}};THREE.ShadowMapPlugin.__projector=new THREE.Projector();THREE.SpritePlugin=function(){var c,f,a,e={};this.init=function(h){c=h.context;f=h;a=h.getPrecision();e.vertices=new Float32Array(8+8);e.faces=new Uint16Array(6);var g=0;e.vertices[g++]=-1;e.vertices[g++]=-1;e.vertices[g++]=0;e.vertices[g++]=0;e.vertices[g++]=1;e.vertices[g++]=-1;e.vertices[g++]=1;e.vertices[g++]=0;e.vertices[g++]=1;e.vertices[g++]=1;e.vertices[g++]=1;e.vertices[g++]=1;e.vertices[g++]=-1;e.vertices[g++]=1;e.vertices[g++]=0;e.vertices[g++]=1;g=0;e.faces[g++]=0;e.faces[g++]=1;e.faces[g++]=2;e.faces[g++]=0;e.faces[g++]=2;e.faces[g++]=3;e.vertexBuffer=c.createBuffer();e.elementBuffer=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,e.vertexBuffer);c.bufferData(c.ARRAY_BUFFER,e.vertices,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,e.elementBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,e.faces,c.STATIC_DRAW);e.program=b(THREE.ShaderSprite.sprite,a);e.attributes={};e.uniforms={};e.attributes.position=c.getAttribLocation(e.program,"position");e.attributes.uv=c.getAttribLocation(e.program,"uv");e.uniforms.uvOffset=c.getUniformLocation(e.program,"uvOffset");e.uniforms.uvScale=c.getUniformLocation(e.program,"uvScale");e.uniforms.rotation=c.getUniformLocation(e.program,"rotation");e.uniforms.scale=c.getUniformLocation(e.program,"scale");e.uniforms.alignment=c.getUniformLocation(e.program,"alignment");e.uniforms.color=c.getUniformLocation(e.program,"color");e.uniforms.map=c.getUniformLocation(e.program,"map");e.uniforms.opacity=c.getUniformLocation(e.program,"opacity");e.uniforms.useScreenCoordinates=c.getUniformLocation(e.program,"useScreenCoordinates");e.uniforms.sizeAttenuation=c.getUniformLocation(e.program,"sizeAttenuation");e.uniforms.screenPosition=c.getUniformLocation(e.program,"screenPosition");e.uniforms.modelViewMatrix=c.getUniformLocation(e.program,"modelViewMatrix");e.uniforms.projectionMatrix=c.getUniformLocation(e.program,"projectionMatrix");e.uniforms.fogType=c.getUniformLocation(e.program,"fogType");e.uniforms.fogDensity=c.getUniformLocation(e.program,"fogDensity");e.uniforms.fogNear=c.getUniformLocation(e.program,"fogNear");e.uniforms.fogFar=c.getUniformLocation(e.program,"fogFar");e.uniforms.fogColor=c.getUniformLocation(e.program,"fogColor");e.uniforms.alphaTest=c.getUniformLocation(e.program,"alphaTest")};this.render=function(y,w,u,j){var l=y.__webglSprites,m=l.length;if(!m){return}var n=e.attributes,A=e.uniforms;var k=j/u;var x=u*0.5,t=j*0.5;c.useProgram(e.program);c.enableVertexAttribArray(n.position);c.enableVertexAttribArray(n.uv);c.disable(c.CULL_FACE);c.enable(c.BLEND);c.bindBuffer(c.ARRAY_BUFFER,e.vertexBuffer);c.vertexAttribPointer(n.position,2,c.FLOAT,false,2*8,0);c.vertexAttribPointer(n.uv,2,c.FLOAT,false,2*8,8);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,e.elementBuffer);c.uniformMatrix4fv(A.projectionMatrix,false,w.projectionMatrix.elements);c.activeTexture(c.TEXTURE0);c.uniform1i(A.map,0);var z=0;var q=0;var h=y.fog;if(h){c.uniform3f(A.fogColor,h.color.r,h.color.g,h.color.b);if(h instanceof THREE.Fog){c.uniform1f(A.fogNear,h.near);c.uniform1f(A.fogFar,h.far);c.uniform1i(A.fogType,1);z=1;q=1}else{if(h instanceof THREE.FogExp2){c.uniform1f(A.fogDensity,h.density);c.uniform1i(A.fogType,2);z=2;q=2}}}else{c.uniform1i(A.fogType,0);z=0;q=0}var v,s,p,o,r,g,B=[];for(v=0;v<m;v++){s=l[v];p=s.material;if(!s.visible||p.opacity===0){continue}if(!p.useScreenCoordinates){s._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,s.matrixWorld);s.z=-s._modelViewMatrix.elements[14]}else{s.z=-s.position.z}}l.sort(d);for(v=0;v<m;v++){s=l[v];p=s.material;if(!s.visible||p.opacity===0){continue}if(p.map&&p.map.image&&p.map.image.width){c.uniform1f(A.alphaTest,p.alphaTest);if(p.useScreenCoordinates===true){c.uniform1i(A.useScreenCoordinates,1);c.uniform3f(A.screenPosition,((s.position.x*f.devicePixelRatio)-x)/x,(t-(s.position.y*f.devicePixelRatio))/t,Math.max(0,Math.min(1,s.position.z)));B[0]=f.devicePixelRatio;B[1]=f.devicePixelRatio}else{c.uniform1i(A.useScreenCoordinates,0);c.uniform1i(A.sizeAttenuation,p.sizeAttenuation?1:0);c.uniformMatrix4fv(A.modelViewMatrix,false,s._modelViewMatrix.elements);B[0]=1;B[1]=1}if(y.fog&&p.fog){g=q}else{g=0}if(z!==g){c.uniform1i(A.fogType,g);z=g}r=1/(p.scaleByViewport?j:1);B[0]*=r*k*s.scale.x;B[1]*=r*s.scale.y;c.uniform2f(A.uvScale,p.uvScale.x,p.uvScale.y);c.uniform2f(A.uvOffset,p.uvOffset.x,p.uvOffset.y);c.uniform2f(A.alignment,p.alignment.x,p.alignment.y);c.uniform1f(A.opacity,p.opacity);c.uniform3f(A.color,p.color.r,p.color.g,p.color.b);c.uniform1f(A.rotation,s.rotation);c.uniform2fv(A.scale,B);f.setBlending(p.blending,p.blendEquation,p.blendSrc,p.blendDst);f.setDepthTest(p.depthTest);f.setDepthWrite(p.depthWrite);f.setTexture(p.map,0);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0)}}c.enable(c.CULL_FACE)};function b(j,h){var i=c.createProgram();var g=c.createShader(c.FRAGMENT_SHADER);var l=c.createShader(c.VERTEX_SHADER);var k="precision "+h+" float;\n";c.shaderSource(g,k+j.fragmentShader);c.shaderSource(l,k+j.vertexShader);c.compileShader(g);c.compileShader(l);c.attachShader(i,g);c.attachShader(i,l);c.linkProgram(i);return i}function d(h,g){if(h.z!==g.z){return g.z-h.z}else{return g.id-h.id}}};THREE.DepthPassPlugin=function(){this.enabled=false;this.renderTarget=null;var a,f,i,d,b,g,h=new THREE.Frustum(),c=new THREE.Matrix4();this.init=function(l){a=l.context;f=l;var j=THREE.ShaderLib.depthRGBA;var k=THREE.UniformsUtils.clone(j.uniforms);i=new THREE.ShaderMaterial({fragmentShader:j.fragmentShader,vertexShader:j.vertexShader,uniforms:k});d=new THREE.ShaderMaterial({fragmentShader:j.fragmentShader,vertexShader:j.vertexShader,uniforms:k,morphTargets:true});b=new THREE.ShaderMaterial({fragmentShader:j.fragmentShader,vertexShader:j.vertexShader,uniforms:k,skinning:true});g=new THREE.ShaderMaterial({fragmentShader:j.fragmentShader,vertexShader:j.vertexShader,uniforms:k,morphTargets:true,skinning:true});i._shadowPass=true;d._shadowPass=true;b._shadowPass=true;g._shadowPass=true};this.render=function(k,j){if(!this.enabled){return}this.update(k,j)};this.update=function(D,B){var A,s,z,C,x,r,y,v,l,E,p,t,k=null;a.clearColor(1,1,1,1);a.disable(a.BLEND);f.setDepthTest(true);if(f.autoUpdateScene){D.updateMatrixWorld()}B.matrixWorldInverse.getInverse(B.matrixWorld);c.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse);h.setFromMatrix(c);f.setRenderTarget(this.renderTarget);f.clear();t=D.__webglObjects;for(z=0,C=t.length;z<C;z++){l=t[z];E=l.object;l.render=false;if(E.visible){if(!(E instanceof THREE.Mesh||E instanceof THREE.ParticleSystem)||!(E.frustumCulled)||h.intersectsObject(E)){E._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,E.matrixWorld);l.render=true}}}var o,q,u;for(z=0,C=t.length;z<C;z++){l=t[z];if(l.render){E=l.object;y=l.buffer;if(E instanceof THREE.ParticleSystem&&!E.customDepthMaterial){continue}o=e(E);if(o){f.setMaterialFaces(E.material)}q=E.geometry.morphTargets.length>0&&o.morphTargets;u=E instanceof THREE.SkinnedMesh&&o.skinning;if(E.customDepthMaterial){v=E.customDepthMaterial}else{if(u){v=q?g:b}else{if(q){v=d}else{v=i}}}if(y instanceof THREE.BufferGeometry){f.renderBufferDirect(B,D.__lights,k,v,y,E)}else{f.renderBuffer(B,D.__lights,k,v,y,E)}}}t=D.__webglObjectsImmediate;for(z=0,C=t.length;z<C;z++){l=t[z];E=l.object;if(E.visible){E._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,E.matrixWorld);f.renderImmediateObject(B,D.__lights,k,i,E)}}var m=f.getClearColor(),w=f.getClearAlpha();a.clearColor(m.r,m.g,m.b,w);a.enable(a.BLEND)};function e(j){return j.material instanceof THREE.MeshFaceMaterial?j.material.materials[0]:j.material}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility = (       visibility.r / 9.0 ) *","( 1.0 - visibility.g / 9.0 ) *","(       visibility.b / 9.0 ) *","( 1.0 - visibility.a / 9.0 );","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}};THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}};